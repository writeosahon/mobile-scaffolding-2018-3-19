{"version":3,"sources":["controller.js"],"names":[],"mappings":";;;;AAAA;;;;AAIA;;;;;;;;AAQA;AACA,eAAe,4BAAf,EAA6C,UAA7C,GAA0D;;AAEtD;;;;;;AAMA,oBAAgB,IAAI,GAAJ,EARsC;AAStD;;;AAGA,aAAS,mBAAU;;AAEf;AACA,YAAI,KAAJ,yDAAU;AAAA;AAAA;AAAA;AAAA;AACN;AACA,gCAAI,kCAAJ,CAAuC,YAAU;AAC7C;AACH,6BAFD;;AAIA;AACA;AACA;;AAEA,gCAAG,KAAH,EAAS;AAAE;AACP;AACA,kCAAE,cAAF,EAAkB,GAAlB,CAAsB,CAAtB,EAAyB,OAAzB,CAAiC,IAAjC,CAAsC,gBAAtC;AACH,6BAHD,MAII;AAAE;AACF;AACA,kCAAE,cAAF,EAAkB,GAAlB,CAAsB,CAAtB,EAAyB,OAAzB,CAAiC,IAAjC,CAAsC,iBAAtC;AACH;;AAID;AACA,gCAAG;AACC;;AAEH,6BAHD,CAIA,OAAM,GAAN,EAAU,CAAE;;AAEZ,gCAAI,CAAE;;AAEF;AACA;AACH,6BAJD,CAKA,OAAM,GAAN,EAAU,CACT,CAND,SAOO;AACH;;;;AAKH;;AAzCK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAV,IAHe,CA8CX;AAEP,KA5DqD;;AA8DtD;;;AAGA,yBAAqB;AAjEiC,CAA1D;;AAoEA","file":"controller-compiled.js","sourcesContent":["/**\r\n * Created by UTOPIA SOFTWARE on [DATE].\r\n */\r\n\r\n/**\r\n * file defines all View-Models, Controllers and Event Listeners used by the app\r\n *\r\n * The 'utopiasoftware_app_namespace' namespace variable has being defined in the base js file.\r\n * The author uses the terms 'method' and function interchangeably; likewise the terms 'attribute' and 'property' are\r\n * also used interchangeably\r\n */\r\n\r\n// define the controller namespace\r\nutopiasoftware[utopiasoftware_app_namespace].controller = {\r\n\r\n    /**\r\n     * property holds the Map objects which will contain a reference to dynamically loaded ES modules.\r\n     * NOTE: modules MUST BE deleted from this property i.e. the Map object when no longer need.\r\n     * This is to enable garbage collection and prevent memory leaks.\r\n     * NOTE: the keys used within the map will be identical to the same map value used in the SystemJS.config()\r\n     */\r\n    LOADED_MODULES: new Map(),\r\n    /**\r\n     * method contains the stratup/bootstrap code needed to initiate app logic execution\r\n     */\r\n    startup: function(){\r\n\r\n        // initialise the app libraries and plugins\r\n        ons.ready(async function () {\r\n            // set the default handler for the app\r\n            ons.setDefaultDeviceBackButtonListener(function(){\r\n                // does nothing for now!!\r\n            });\r\n\r\n            // displaying prepping message\r\n            //$('#loader-modal-message').html(\"Loading App...\");\r\n            //$('#loader-modal').get(0).show(); // show loader\r\n\r\n            if(false){ // there is a previous logged in user\r\n                // load the login page\r\n                $('ons-splitter').get(0).content.load(\"login-template\");\r\n            }\r\n            else{ // no previous logged in user\r\n                // load the signup page\r\n                $('ons-splitter').get(0).content.load(\"signup-template\");\r\n            }\r\n\r\n\r\n\r\n            // START ALL CORDOVA PLUGINS CONFIGURATIONS\r\n            try{\r\n                /*// lock the orientation of the device to 'PORTRAIT'\r\n                 screen.lockOrientation('portrait');*/\r\n            }\r\n            catch(err){}\r\n\r\n            try { // START ALL THE CORDOVA PLUGINS CONFIGURATION WHICH REQUIRE PROMISE SYNTAX\r\n\r\n                // note: for most promises, we weill use async-wait syntax\r\n                // var a = await Promise.all([SystemJS.import('@syncfusion/ej2-base'), SystemJS.import('@syncfusion/ej2-dropdowns')]);\r\n            }\r\n            catch(err){\r\n            }\r\n            finally{\r\n                /*// set status bar color\r\n                 StatusBar.backgroundColorByHexString(\"#DC723D\");\r\n                 navigator.splashscreen.hide(); // hide the splashscreen\r\n\r\n                 utopiasoftware.emap.model.isAppReady = true; // true that app is fully loaded and ready*/\r\n            }\r\n\r\n        }); // end of ons.ready()\r\n\r\n    },\r\n\r\n    /**\r\n     * this is the view-model/controller for the Sign Up page\r\n     */\r\n    signupPageViewModel: {}\r\n};\r\n\r\n//utopiasoftware[utopiasoftware_app_namespace].controller.startup();\r\n\r\n"]}