{"version":3,"sources":["ej2-charts.es2015.js"],"names":[],"mappings":"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U,wBAAY,U,0BAAY,Y,2BAAc,a,kBAAe,I,kBAAM,I,2BAAM,a,uBAAe,S,wBAAW,U,uBAAY,S,0BAAW,Y,2BAAc,a,uBAAe,S,qBAAW,O,kBAAS,I,uBAAM,S,uBAAW,S,sBAAW,Q,+BAAU,iB,4BAAmB,c,oBAAgB,M,uBAAQ,S,iCAAW,mB,0BAAqB,Y,8BAAc,gB,wBAAkB,U,oBAAY,M,oBAAQ,M,6BAAQ,e,qCAAiB,uB,yBAAyB,W,kCAAa,oB,+BAAsB,iB,8BAAmB,gB,iCAAkB,mB,oCAAqB,sB,oCAAwB,sB,gCAAwB,kB,6BAAoB,e,+BAAiB,iB,4CAAmB,8B,2CAAgC,6B,uBAA+B,S,gCAAW,kB,gCAAoB,kB,0BAAoB,Y,uBAAc,S,0BAAW,Y,2BAAc,a,gCAAe,kB,mCAAoB,qB,iCAAuB,mB,mCAAqB,qB,oCAAuB,sB,oBAAwB,M,kBAAQ,I,+BAAM,iB,0BAAmB,Y,wBAAc,U,yBAAY,W,0BAAa,Y,6BAAc,e,iCAAiB,mB,kCAAqB,oB,2BAAsB,a,4BAAe,c,6BAAgB,e,wBAAiB,U,uBAAY,S,6BAAW,e,4BAAiB,c,0BAAgB,Y,0BAAc,Y,0BAAc,Y,qBAAc,O,yBAAS,W,8BAAa,gB,mBAAkB,K,4BAAO,c,2BAAgB,a","file":"ej2-charts.es2015-compiled.js","sourcesContent":["import { Animation, Browser, ChildProperty, Collection, Complex, Component, Event, EventHandler, Internationalization, L10n, NotifyPropertyChanges, Property, SvgRenderer, Touch, compile, createElement, extend, getValue, isNullOrUndefined, merge, print, remove } from '@syncfusion/ej2-base';\nimport { DataManager, DataUtil, Query } from '@syncfusion/ej2-data';\nimport { PdfBitmap, PdfDocument, PdfPageOrientation } from '@syncfusion/ej2-pdf-export';\n\n/**\n * Specifies Chart Themes\n */\nvar Theme;\n(function (Theme) {\n    /** @private */\n    Theme.axisLabelFont = {\n        size: '12px',\n        fontWeight: 'Normal',\n        color: null,\n        fontStyle: 'Normal',\n        fontFamily: 'Segoe UI'\n    };\n    /** @private */\n    Theme.axisTitleFont = {\n        size: '14px',\n        fontWeight: 'Normal',\n        color: null,\n        fontStyle: 'Normal',\n        fontFamily: 'Segoe UI'\n    };\n    /** @private */\n    Theme.chartTitleFont = {\n        size: '15px',\n        fontWeight: '500',\n        color: null,\n        fontStyle: 'Normal',\n        fontFamily: 'Segoe UI'\n    };\n    /** @private */\n    Theme.crosshairLabelFont = {\n        size: '13px',\n        fontWeight: 'Normal',\n        color: null,\n        fontStyle: 'Normal',\n        fontFamily: 'Segoe UI'\n    };\n    /** @private */\n    Theme.tooltipLabelFont = {\n        size: '13px',\n        fontWeight: 'Normal',\n        color: null,\n        fontStyle: 'Normal',\n        fontFamily: 'Segoe UI'\n    };\n    /** @private */\n    Theme.legendLabelFont = {\n        size: '13px',\n        fontWeight: 'Normal',\n        color: null,\n        fontStyle: 'Normal',\n        fontFamily: 'Segoe UI'\n    };\n    /** @private */\n    Theme.stripLineLabelFont = {\n        size: '12px',\n        fontWeight: 'Regular',\n        color: '#353535',\n        fontStyle: 'Normal',\n        fontFamily: 'Segoe UI'\n    };\n})(Theme || (Theme = {}));\n/** @private */\nfunction getSeriesColor(theme) {\n    let palette;\n    switch (theme) {\n        case 'Fabric':\n            palette = ['#4472c4', '#ed7d31', '#ffc000', '#70ad47', '#5b9bd5',\n                '#c1c1c1', '#6f6fe2', '#e269ae', '#9e480e', '#997300'];\n            break;\n        case 'Bootstrap':\n            palette = ['#a16ee5', '#f7ce69', '#55a5c2', '#7ddf1e', '#ff6ea6',\n                '#7953ac', '#b99b4f', '#407c92', '#5ea716', '#b91c52'];\n            break;\n        case 'Highcontrast':\n            palette = ['#79ECE4', '#E98272', '#DFE6B6', '#C6E773', '#BA98FF',\n                '#FA83C3', '#00C27A', '#43ACEF', '#D681EF', '#D8BC6E'];\n            break;\n        default:\n            palette = ['#00bdae', '#404041', '#357cd2', '#e56590', '#f8b883',\n                '#70ad47', '#dd8abd', '#7f84e8', '#7bb4eb', '#ea7a57'];\n            break;\n    }\n    return palette;\n}\n/** @private */\nfunction getThemeColor(theme) {\n    let style;\n    switch (theme) {\n        case 'Highcontrast':\n            style = {\n                axisLabel: '#ffffff',\n                axisTitle: '#ffffff',\n                axisLine: '#ffffff',\n                majorGridLine: '#BFBFBF',\n                minorGridLine: '#969696',\n                majorTickLine: '#BFBFBF',\n                minorTickLine: '#969696',\n                chartTitle: '#ffffff',\n                legendLabel: '#ffffff',\n                background: '#000000',\n                areaBorder: '#ffffff',\n                errorBar: '#ffffff',\n                crosshairLine: '#ffffff',\n                crosshairFill: '#ffffff',\n                crosshairLabel: '#000000',\n                tooltipFill: '#ffffff',\n                tooltipBoldLabel: '#000000',\n                tooltipLightLabel: '#000000',\n                tooltipHeaderLine: '#969696',\n                markerShadow: '#BFBFBF',\n                selectionRectFill: 'rgba(255, 217, 57, 0.3)',\n                selectionRectStroke: '#ffffff',\n                selectionCircleStroke: '#FFD939'\n            };\n            break;\n        default:\n            style = {\n                axisLabel: '#686868',\n                axisTitle: '#424242',\n                axisLine: '#b5b5b5',\n                majorGridLine: '#dbdbdb',\n                minorGridLine: '#eaeaea',\n                majorTickLine: '#b5b5b5',\n                minorTickLine: '#d6d6d6',\n                chartTitle: '#424242',\n                legendLabel: '#353535',\n                background: '#FFFFFF',\n                areaBorder: 'Gray',\n                errorBar: '#000000',\n                crosshairLine: '#4f4f4f',\n                crosshairFill: '#4f4f4f',\n                crosshairLabel: '#e5e5e5',\n                tooltipFill: 'rgba(0, 8, 22, 0.75)',\n                tooltipBoldLabel: '#ffffff',\n                tooltipLightLabel: '#dbdbdb',\n                tooltipHeaderLine: '#ffffff',\n                markerShadow: null,\n                selectionRectFill: 'rgba(41, 171, 226, 0.1)',\n                selectionRectStroke: '#29abe2',\n                selectionCircleStroke: '#29abe2'\n            };\n            break;\n    }\n    return style;\n}\n\nvar __decorate$1 = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n/**\n * Defines the appearance of the connectors\n */\nclass Connector extends ChildProperty {\n}\n__decorate$1([\n    Property('Line')\n], Connector.prototype, \"type\", void 0);\n__decorate$1([\n    Property(null)\n], Connector.prototype, \"color\", void 0);\n__decorate$1([\n    Property(1)\n], Connector.prototype, \"width\", void 0);\n__decorate$1([\n    Property(null)\n], Connector.prototype, \"length\", void 0);\n__decorate$1([\n    Property('')\n], Connector.prototype, \"dashArray\", void 0);\n/**\n * Configures the fonts in charts.\n */\nclass Font extends ChildProperty {\n}\n__decorate$1([\n    Property('16px')\n], Font.prototype, \"size\", void 0);\n__decorate$1([\n    Property('')\n], Font.prototype, \"color\", void 0);\n__decorate$1([\n    Property('Segoe UI')\n], Font.prototype, \"fontFamily\", void 0);\n__decorate$1([\n    Property('Normal')\n], Font.prototype, \"fontWeight\", void 0);\n__decorate$1([\n    Property('Normal')\n], Font.prototype, \"fontStyle\", void 0);\n__decorate$1([\n    Property(1)\n], Font.prototype, \"opacity\", void 0);\n__decorate$1([\n    Property('Center')\n], Font.prototype, \"textAlignment\", void 0);\n__decorate$1([\n    Property('Trim')\n], Font.prototype, \"textOverflow\", void 0);\n/**\n * Configures the borders in the chart.\n */\nclass Border extends ChildProperty {\n}\n__decorate$1([\n    Property('')\n], Border.prototype, \"color\", void 0);\n__decorate$1([\n    Property(1)\n], Border.prototype, \"width\", void 0);\n/**\n * Configures the chart area.\n */\nclass ChartArea extends ChildProperty {\n}\n__decorate$1([\n    Complex({}, Border)\n], ChartArea.prototype, \"border\", void 0);\n__decorate$1([\n    Property('transparent')\n], ChartArea.prototype, \"background\", void 0);\n__decorate$1([\n    Property(1)\n], ChartArea.prototype, \"opacity\", void 0);\n/**\n * Configures the chart margins.\n */\nclass Margin extends ChildProperty {\n}\n__decorate$1([\n    Property(10)\n], Margin.prototype, \"left\", void 0);\n__decorate$1([\n    Property(10)\n], Margin.prototype, \"right\", void 0);\n__decorate$1([\n    Property(10)\n], Margin.prototype, \"top\", void 0);\n__decorate$1([\n    Property(10)\n], Margin.prototype, \"bottom\", void 0);\n/**\n * Configures the animation behavior for chart series.\n */\nclass Animation$1 extends ChildProperty {\n}\n__decorate$1([\n    Property(true)\n], Animation$1.prototype, \"enable\", void 0);\n__decorate$1([\n    Property(1000)\n], Animation$1.prototype, \"duration\", void 0);\n__decorate$1([\n    Property(0)\n], Animation$1.prototype, \"delay\", void 0);\n/** @private */\nclass Indexes extends ChildProperty {\n}\n__decorate$1([\n    Property(0)\n], Indexes.prototype, \"series\", void 0);\n__decorate$1([\n    Property(0)\n], Indexes.prototype, \"point\", void 0);\n/**\n * Column series rounded corner options\n */\nclass CornerRadius extends ChildProperty {\n}\n__decorate$1([\n    Property(0)\n], CornerRadius.prototype, \"topLeft\", void 0);\n__decorate$1([\n    Property(0)\n], CornerRadius.prototype, \"topRight\", void 0);\n__decorate$1([\n    Property(0)\n], CornerRadius.prototype, \"bottomLeft\", void 0);\n__decorate$1([\n    Property(0)\n], CornerRadius.prototype, \"bottomRight\", void 0);\n/**\n * @private\n */\nclass Index {\n    constructor(seriesIndex, pointIndex) {\n        this.series = seriesIndex;\n        this.point = pointIndex;\n    }\n}\n/**\n * Configures the Empty Points of series\n */\nclass EmptyPointSettings extends ChildProperty {\n}\n__decorate$1([\n    Property(null)\n], EmptyPointSettings.prototype, \"fill\", void 0);\n__decorate$1([\n    Complex({ color: 'transparent', width: 0 }, Border)\n], EmptyPointSettings.prototype, \"border\", void 0);\n__decorate$1([\n    Property('Gap')\n], EmptyPointSettings.prototype, \"mode\", void 0);\n/**\n * Configures the ToolTips in the chart.\n */\nclass TooltipSettings extends ChildProperty {\n}\n__decorate$1([\n    Property(false)\n], TooltipSettings.prototype, \"enable\", void 0);\n__decorate$1([\n    Property(false)\n], TooltipSettings.prototype, \"shared\", void 0);\n__decorate$1([\n    Property(null)\n], TooltipSettings.prototype, \"fill\", void 0);\n__decorate$1([\n    Property(null)\n], TooltipSettings.prototype, \"header\", void 0);\n__decorate$1([\n    Property(0.75)\n], TooltipSettings.prototype, \"opacity\", void 0);\n__decorate$1([\n    Complex(Theme.tooltipLabelFont, Font)\n], TooltipSettings.prototype, \"textStyle\", void 0);\n__decorate$1([\n    Property(null)\n], TooltipSettings.prototype, \"format\", void 0);\n__decorate$1([\n    Property(null)\n], TooltipSettings.prototype, \"template\", void 0);\n__decorate$1([\n    Property(true)\n], TooltipSettings.prototype, \"enableAnimation\", void 0);\n__decorate$1([\n    Complex({ color: '#cccccc', width: 0.5 }, Border)\n], TooltipSettings.prototype, \"border\", void 0);\n\n/**\n * Methods for calculating the text size.\n */\n/**\n * Function to measure the height and width of the text.\n * @param  {string} text\n * @param  {FontModel} font\n * @param  {string} id\n * @returns no\n * @private\n */\nfunction measureText(text, font) {\n    let htmlObject = document.getElementById('chartmeasuretext');\n    if (htmlObject === null) {\n        htmlObject = createElement('text', { id: 'chartmeasuretext' });\n        document.body.appendChild(htmlObject);\n    }\n    htmlObject.innerHTML = text;\n    htmlObject.style.position = 'absolute';\n    htmlObject.style.fontSize = font.size;\n    htmlObject.style.fontWeight = font.fontWeight;\n    htmlObject.style.fontStyle = font.fontStyle;\n    htmlObject.style.fontFamily = font.fontFamily;\n    htmlObject.style.visibility = 'hidden';\n    htmlObject.style.top = '-100';\n    htmlObject.style.left = '0';\n    htmlObject.style.whiteSpace = 'nowrap';\n    // For bootstrap line height issue\n    htmlObject.style.lineHeight = 'normal';\n    return new Size(htmlObject.clientWidth, htmlObject.clientHeight);\n}\n/**\n * Function to sort the dataSource, by default it sort the data in ascending order.\n * @param  {Object} data\n * @param  {string} fields\n * @param  {boolean} isDescending\n * @returns Object\n */\nfunction sort(data, fields, isDescending) {\n    let sortData = extend([], data, null);\n    sortData.sort((a, b) => {\n        let first = 0;\n        let second = 0;\n        for (let i = 0; i < fields.length; i++) {\n            first += a[fields[i]];\n            second += b[fields[i]];\n        }\n        if ((!isDescending && first < second) || (isDescending && first > second)) {\n            return -1;\n        }\n        else if (first === second) {\n            return 0;\n        }\n        return 1;\n    });\n    return sortData;\n}\n/** @private */\nfunction rotateTextSize(font, text, angle, chart) {\n    let renderer = new SvgRenderer(chart.element.id);\n    let box;\n    let options;\n    let htmlObject;\n    options = {\n        'font-size': font.size,\n        'font-style': font.fontStyle,\n        'font-family': font.fontFamily,\n        'font-weight': font.fontWeight,\n        'transform': 'rotate(' + angle + ', 0, 0)',\n        'text-anchor': 'middle'\n    };\n    htmlObject = renderer.createText(options, text);\n    if (!chart.delayRedraw) {\n        chart.element.appendChild(chart.svgObject);\n    }\n    chart.svgObject.appendChild(htmlObject);\n    box = htmlObject.getBoundingClientRect();\n    remove(htmlObject);\n    if (!chart.delayRedraw) {\n        remove(chart.svgObject);\n    }\n    return new Size((box.right - box.left), (box.bottom - box.top));\n}\n/** @private */\nfunction removeElement(id) {\n    let element = getElement(id);\n    if (element) {\n        remove(element);\n    }\n}\n/** @private */\nfunction logBase(value, base) {\n    return Math.log(value) / Math.log(base);\n}\n/** @private */\nfunction showTooltip(text, x, y, areaWidth, id, element, isTouch) {\n    //let id1: string = 'EJ2_legend_tooltip';\n    let tooltip = document.getElementById(id);\n    let width = measureText(text, {\n        fontFamily: 'Segoe UI', size: '12px',\n        fontStyle: 'Normal', fontWeight: 'Regular'\n    }).width + 5;\n    x = (x + width > areaWidth) ? x - width : x;\n    if (!tooltip) {\n        tooltip = createElement('div', {\n            innerHTML: text,\n            id: id,\n            styles: 'top:' + (y + 15).toString() + 'px;left:' + (x + 15).toString() +\n                'px;background-color: rgb(255, 255, 255) !important; color:black !important; ' +\n                'position:absolute;border:1px solid rgb(112, 112, 112); padding-left : 3px; padding-right : 2px;' +\n                'padding-bottom : 2px; padding-top : 2px; font-size:12px; font-family: \"Segoe UI\"'\n        });\n        element.appendChild(tooltip);\n    }\n    else {\n        tooltip.innerHTML = text;\n        tooltip.style.top = (y + 15).toString() + 'px';\n        tooltip.style.left = (x + 15).toString() + 'px';\n    }\n    if (isTouch) {\n        setTimeout(() => { removeElement(id); }, 1500);\n    }\n}\n/** @private */\nfunction inside(value, range) {\n    return (value < range.max) && (value > range.min);\n}\n/** @private */\nfunction withIn(value, range) {\n    return (value <= range.max) && (value >= range.min);\n}\n/** @private */\nfunction withInRange(previousPoint, currentPoint, nextPoint, series) {\n    let mX2 = series.logWithIn(currentPoint.xValue, series.xAxis);\n    let mX1 = previousPoint ? series.logWithIn(previousPoint.xValue, series.xAxis) : mX2;\n    let mX3 = nextPoint ? series.logWithIn(nextPoint.xValue, series.xAxis) : mX2;\n    let xStart = Math.floor(series.xAxis.visibleRange.min);\n    let xEnd = Math.ceil(series.xAxis.visibleRange.max);\n    return ((mX1 >= xStart && mX1 <= xEnd) || (mX2 >= xStart && mX2 <= xEnd) ||\n        (mX3 >= xStart && mX3 <= xEnd) || (xStart >= mX1 && xStart <= mX3));\n}\n/** @private */\nfunction sum(values) {\n    let sum = 0;\n    for (let value of values) {\n        sum += value;\n    }\n    return sum;\n}\n/** @private */\nfunction subArraySum(values, first, last, index, series) {\n    let sum = 0;\n    if (index !== null) {\n        for (let i = (first + 1); i < last; i++) {\n            if (index.indexOf(i) === -1) {\n                sum += values[i][series.yName];\n            }\n        }\n    }\n    else {\n        for (let i = (first + 1); i < last; i++) {\n            if (!isNullOrUndefined(values[i][series.yName])) {\n                sum += values[i][series.yName];\n            }\n        }\n    }\n    return sum;\n}\n/** @private */\nfunction subtractThickness(rect, thickness) {\n    rect.x += thickness.left;\n    rect.y += thickness.top;\n    rect.width -= thickness.left + thickness.right;\n    rect.height -= thickness.top + thickness.bottom;\n    return rect;\n}\n/** @private */\nfunction subtractRect(rect, thickness) {\n    rect.x += thickness.x;\n    rect.y += thickness.y;\n    rect.width -= thickness.x + thickness.width;\n    rect.height -= thickness.y + thickness.height;\n    return rect;\n}\n/** @private */\nfunction degreeToLocation(degree, radius, center) {\n    let radian = (degree * Math.PI) / 180;\n    return new ChartLocation(Math.cos(radian) * radius + center.x, Math.sin(radian) * radius + center.y);\n}\nfunction getAccumulationLegend(locX, locY, r, height, width, mode) {\n    let cartesianlarge = degreeToLocation(270, r, new ChartLocation(locX, locY));\n    let cartesiansmall = degreeToLocation(270, r, new ChartLocation(locX + (width / 10), locY));\n    return 'M' + ' ' + locX + ' ' + locY + ' ' + 'L' + ' ' + (locX + r) + ' ' + (locY) + ' ' + 'A' + ' ' + (r) + ' ' + (r) +\n        ' ' + 0 + ' ' + 1 + ' ' + 1 + ' ' + cartesianlarge.x + ' ' + cartesianlarge.y + ' ' + 'Z' + ' ' + 'M' + ' ' + (locX +\n        (width / 10)) + ' ' + (locY - (height / 10)) + ' ' + 'L' + (locX + (r)) + ' ' + (locY - height / 10) + ' ' + 'A' + ' '\n        + (r) + ' ' + (r) + ' ' + 0 + ' ' + 0 + ' ' + 0 + ' ' + cartesiansmall.x + ' ' + cartesiansmall.y + ' ' + 'Z';\n}\n/** @private */\nfunction getAngle(center, point) {\n    let angle = Math.atan2((point.y - center.y), (point.x - center.x));\n    angle = angle < 0 ? (6.283 + angle) : angle;\n    return angle * (180 / Math.PI);\n}\n/** @private */\nfunction subArray(values, index) {\n    let subArray = [];\n    for (let i = 0; i <= index - 1; i++) {\n        subArray.push(values[i]);\n    }\n    return subArray;\n}\n/** @private */\nfunction valueToCoefficient(value, axis) {\n    let range = axis.visibleRange;\n    let result = (value - range.min) / (range.delta);\n    return axis.isInversed ? (1 - result) : result;\n}\n/** @private */\nfunction TransformToVisible(x, y, xAxis, yAxis, isInverted, series) {\n    x = (xAxis.valueType === 'Logarithmic' ? logBase(x > 1 ? x : 1, xAxis.logBase) : x);\n    y = (yAxis.valueType === 'Logarithmic' ?\n        logBase(y > 1 ? y : 1, yAxis.logBase) : y);\n    x += xAxis.valueType === 'Category' && xAxis.labelPlacement === 'BetweenTicks' && series.type !== 'Radar' ? 0.5 : 0;\n    let radius = series.chart.radius * valueToCoefficient(y, yAxis);\n    let point = CoefficientToVector(valueToPolarCoefficient(x, xAxis), series.chart.primaryXAxis.startAngle);\n    return {\n        x: (series.clipRect.width / 2 + series.clipRect.x) + radius * point.x,\n        y: (series.clipRect.height / 2 + series.clipRect.y) + radius * point.y\n    };\n}\n/**\n * method to find series, point index by element id\n * @private\n */\nfunction indexFinder(id, isPoint = false) {\n    let ids = ['NaN', 'NaN'];\n    if (id.indexOf('_Point_') > -1) {\n        ids = id.split('_Series_')[1].split('_Point_');\n    }\n    else if (id.indexOf('_shape_') > -1 && (!isPoint || (isPoint && id.indexOf('_legend_') === -1))) {\n        ids = id.split('_shape_');\n        ids[0] = '0';\n    }\n    else if (id.indexOf('_text_') > -1 && (!isPoint || (isPoint && id.indexOf('_legend_') === -1))) {\n        ids = id.split('_text_');\n        ids[0] = '0';\n    }\n    return new Index(parseInt(ids[0], 10), parseInt(ids[1], 10));\n}\n/** @private */\nfunction CoefficientToVector(coefficient, startAngle) {\n    startAngle = startAngle < 0 ? startAngle + 360 : startAngle;\n    let angle = Math.PI * (1.5 - 2 * coefficient);\n    angle = angle + (startAngle * Math.PI) / 180;\n    return { x: Math.cos(angle), y: Math.sin(angle) };\n}\n/** @private */\nfunction valueToPolarCoefficient(value, axis) {\n    let range = axis.visibleRange;\n    let delta;\n    let length;\n    if (axis.valueType !== 'Category') {\n        delta = (range.max - (axis.valueType === 'DateTime' ? axis.dateTimeInterval : range.interval)) - range.min;\n        length = axis.visibleLabels.length - 1;\n        delta = delta === 0 ? 1 : delta;\n    }\n    else {\n        delta = range.delta;\n        length = axis.visibleLabels.length;\n    }\n    return axis.isInversed ? ((value - range.min) / delta) * (1 - 1 / (length)) :\n        1 - ((value - range.min) / delta) * (1 - 1 / (length));\n}\n/** @private */\nclass Mean {\n    constructor(verticalStandardMean, verticalSquareRoot, horizontalStandardMean, horizontalSquareRoot, verticalMean, horizontalMean) {\n        this.verticalStandardMean = verticalStandardMean;\n        this.horizontalStandardMean = horizontalStandardMean;\n        this.verticalSquareRoot = verticalSquareRoot;\n        this.horizontalSquareRoot = horizontalSquareRoot;\n        this.verticalMean = verticalMean;\n        this.horizontalMean = horizontalMean;\n    }\n}\n/** @private */\nclass PolarArc {\n    constructor(startAngle, endAngle, innerRadius, radius, currentXPosition) {\n        this.startAngle = startAngle;\n        this.endAngle = endAngle;\n        this.innerRadius = innerRadius;\n        this.radius = radius;\n        this.currentXPosition = currentXPosition;\n    }\n}\n/** @private */\nfunction createTooltip(id, text, top, left, fontSize) {\n    let tooltip = getElement(id);\n    let style = 'top:' + top.toString() + 'px;' +\n        'left:' + left.toString() + 'px;' +\n        'color:black !important' +\n        'background:#FFFFFF !important' + ';' +\n        'position:absolute;border:1px solid #707070;font-size:' + fontSize + ';border-radius:2px;';\n    if (!tooltip) {\n        tooltip = createElement('div', {\n            id: id, innerHTML: '&nbsp;' + text + '&nbsp;', styles: style\n        });\n        document.body.appendChild(tooltip);\n    }\n    else {\n        tooltip.setAttribute('innerHTML', '&nbsp;' + text + '&nbsp;');\n        tooltip.setAttribute('styles', style);\n    }\n}\n/** @private */\nfunction createZoomingLabels(chart, axis, parent, index, isVertical, rect) {\n    let margin = 5;\n    let opposedPosition = axis.opposedPosition;\n    let anchor = isVertical ? 'start' : 'auto';\n    let size;\n    let chartRect = chart.availableSize.width;\n    let x;\n    let y;\n    let rx = 3;\n    let arrowLocation;\n    let direction;\n    for (let i = 0; i < 2; i++) {\n        size = measureText(i ? axis.endLabel : axis.startLabel, axis.labelStyle);\n        if (isVertical) {\n            arrowLocation = i ? new ChartLocation(rect.x, rect.y + rx) :\n                new ChartLocation(axis.rect.x, (rect.y + rect.height - rx));\n            x = (rect.x + (opposedPosition ? (rect.width + margin) : -(size.width + margin + margin)));\n            y = (rect.y + (i ? 0 : rect.height - size.height - margin));\n            x += (x < 0 || ((chartRect) < (x + size.width + margin))) ? (opposedPosition ? -(size.width / 2) : size.width / 2) : 0;\n            direction = findDirection(rx, rx, new Rect(x, y, size.width + margin, size.height + margin), arrowLocation, margin, false, false, !opposedPosition, arrowLocation.x, arrowLocation.y + (i ? -rx : rx));\n        }\n        else {\n            arrowLocation = i ? new ChartLocation((rect.x + rect.width - rx), (rect.y + rect.height)) :\n                new ChartLocation(rect.x + rx, (rect.y + rect.height));\n            x = (rect.x + (i ? (rect.width - size.width - margin) : 0));\n            y = (opposedPosition ? (rect.y - size.height - 10) : (rect.y + rect.height + margin));\n            direction = findDirection(rx, rx, new Rect(x, y, size.width + margin, size.height + margin), arrowLocation, margin, opposedPosition, !opposedPosition, false, arrowLocation.x + (i ? rx : -rx), arrowLocation.y);\n        }\n        x = x + (margin / 2);\n        y = y + (3 * (size.height / 4)) + (margin / 2);\n        parent.appendChild(chart.renderer.drawPath(new PathOption(chart.element.id + '_Zoom_' + index + '_AxisLabel_Shape_' + i, chart.themeStyle.crosshairFill, 2, chart.themeStyle.crosshairFill, 1, null, direction)));\n        textElement(new TextOption(chart.element.id + '_Zoom_' + index + '_AxisLabel_' + i, x, y, anchor, i ? axis.endLabel : axis.startLabel), { color: chart.themeStyle.crosshairLabel, fontFamily: 'Segoe UI', fontWeight: 'Regular', size: '11px' }, chart.themeStyle.crosshairLabel, parent);\n    }\n    return parent;\n}\n//Within bounds\n/** @private */\nfunction withInBounds(x, y, bounds, width = 0, height = 0) {\n    return (x >= bounds.x - width && x <= bounds.x + bounds.width + width && y >= bounds.y - height\n        && y <= bounds.y + bounds.height + height);\n}\n/** @private */\nfunction getValueXByPoint(value, size, axis) {\n    let actualValue = !axis.isInversed ? value / size : (1 - (value / size));\n    return actualValue * (axis.visibleRange.delta) + axis.visibleRange.min;\n}\n/** @private */\nfunction getValueYByPoint(value, size, axis) {\n    let actualValue = axis.isInversed ? value / size : (1 - (value / size));\n    return actualValue * (axis.visibleRange.delta) + axis.visibleRange.min;\n}\n/** @private */\nfunction findClipRect(series) {\n    let rect = series.clipRect;\n    if (series.chart.requireInvertedAxis) {\n        rect.x = series.yAxis.rect.x;\n        rect.y = series.xAxis.rect.y;\n        rect.width = series.yAxis.rect.width;\n        rect.height = series.xAxis.rect.height;\n    }\n    else {\n        rect.x = series.xAxis.rect.x;\n        rect.y = series.yAxis.rect.y;\n        rect.width = series.xAxis.rect.width;\n        rect.height = series.yAxis.rect.height;\n    }\n}\n/** @private */\nfunction firstToLowerCase(str) {\n    return str.substr(0, 1).toLowerCase() + str.substr(1);\n}\n/** @private */\nfunction getMinPointsDelta(axis, seriesCollection) {\n    let minDelta = Number.MAX_VALUE;\n    let xValues;\n    let minVal;\n    seriesCollection.forEach((series, index) => {\n        xValues = [];\n        if (series.visible &&\n            (axis.name === series.xAxisName || (axis.name === 'primaryXAxis' && series.xAxisName === null)\n                || (axis.name === series.chart.primaryXAxis.name && !series.xAxisName))) {\n            xValues = series.points.map((point, index) => {\n                return point.xValue;\n            });\n            xValues.sort((first, second) => { return first - second; });\n            if (xValues.length === 1) {\n                minVal = xValues[0] - ((series.xMin && series.xAxis.valueType !== 'DateTime') ?\n                    series.xMin : axis.visibleRange.min);\n                if (minVal !== 0) {\n                    minDelta = Math.min(minDelta, minVal);\n                }\n            }\n            else {\n                xValues.forEach((value, index, xValues) => {\n                    if (index > 0 && value) {\n                        minVal = value - xValues[index - 1];\n                        if (minVal !== 0) {\n                            minDelta = Math.min(minDelta, minVal);\n                        }\n                    }\n                });\n            }\n        }\n    });\n    if (minDelta === Number.MAX_VALUE) {\n        minDelta = 1;\n    }\n    return minDelta;\n}\n/** @private */\nfunction getAnimationFunction(effect) {\n    let functionName;\n    switch (effect) {\n        case 'Linear':\n            functionName = linear;\n            break;\n    }\n    return functionName;\n}\n/**\n * Animation Effect Calculation Started Here\n * @param currentTime\n * @param startValue\n * @param endValue\n * @param duration\n * @private\n */\nfunction linear(currentTime, startValue, endValue, duration) {\n    return -endValue * Math.cos(currentTime / duration * (Math.PI / 2)) + endValue + startValue;\n}\n/**\n * Animation Effect Calculation End\n * @private\n */\nfunction markerAnimate(element, delay, duration, series, pointIndex, point, isLabel) {\n    let centerX = point.x;\n    let centerY = point.y;\n    let height = 0;\n    element.style.visibility = 'hidden';\n    new Animation({}).animate(element, {\n        duration: duration,\n        delay: delay,\n        progress: (args) => {\n            if (args.timeStamp > args.delay) {\n                args.element.style.visibility = 'visible';\n                height = ((args.timeStamp - args.delay) / args.duration);\n                element.setAttribute('transform', 'translate(' + centerX\n                    + ' ' + centerY + ') scale(' + height + ') translate(' + (-centerX) + ' ' + (-centerY) + ')');\n            }\n        },\n        end: (model) => {\n            element.style.visibility = '';\n            element.removeAttribute('transform');\n            if ((series.type === 'Scatter' || series.type === 'Bubble') && !isLabel && (pointIndex === series.points.length - 1)) {\n                series.chart.trigger('animationComplete', { series: series });\n            }\n        }\n    });\n}\n/**\n * Animation for template\n * @private\n */\nfunction templateAnimate(element, delay, duration, name, isRemove) {\n    new Animation({}).animate(element, {\n        duration: duration,\n        delay: delay,\n        name: name,\n        progress: (args) => {\n            args.element.style.visibility = 'visible';\n        },\n        end: (args) => {\n            if (isRemove) {\n                remove(args.element);\n            }\n            else {\n                args.element.style.visibility = 'visible';\n            }\n        },\n    });\n}\n/** @private */\nfunction drawSymbol(location, shape, size, url, options, label) {\n    let renderer = new SvgRenderer('');\n    let temp = calculateShapes(location, size, shape, options, url);\n    let htmlObject = renderer['draw' + temp.functionName](temp.renderOption);\n    htmlObject.setAttribute('aria-label', label);\n    return htmlObject;\n}\n/** @private */\nfunction calculateShapes(location, size, shape, options, url) {\n    let path;\n    let functionName = 'Path';\n    let width = size.width;\n    let height = size.height;\n    let locX = location.x;\n    let locY = location.y;\n    let x = location.x + (-width / 2);\n    let y = location.y + (-height / 2);\n    switch (shape) {\n        case 'Circle':\n        case 'Bubble':\n            functionName = 'Ellipse';\n            merge(options, { 'rx': width / 2, 'ry': height / 2, 'cx': locX, 'cy': locY });\n            break;\n        case 'Cross':\n            path = 'M' + ' ' + x + ' ' + locY + ' ' + 'L' + ' ' + (locX + (width / 2)) + ' ' + locY + ' ' +\n                'M' + ' ' + locX + ' ' + (locY + (height / 2)) + ' ' + 'L' + ' ' + locX + ' ' +\n                (locY + (-height / 2));\n            merge(options, { 'd': path });\n            break;\n        case 'HorizontalLine':\n            path = 'M' + ' ' + x + ' ' + locY + ' ' + 'L' + ' ' + (locX + (width / 2)) + ' ' + locY;\n            merge(options, { 'd': path });\n            break;\n        case 'VerticalLine':\n            path = 'M' + ' ' + locX + ' ' + (locY + (height / 2)) + ' ' + 'L' + ' ' + locX + ' ' + (locY + (-height / 2));\n            merge(options, { 'd': path });\n            break;\n        case 'Diamond':\n            path = 'M' + ' ' + x + ' ' + locY + ' ' +\n                'L' + ' ' + locX + ' ' + (locY + (-height / 2)) + ' ' +\n                'L' + ' ' + (locX + (width / 2)) + ' ' + locY + ' ' +\n                'L' + ' ' + locX + ' ' + (locY + (height / 2)) + ' ' +\n                'L' + ' ' + x + ' ' + locY + ' z';\n            merge(options, { 'd': path });\n            break;\n        case 'Rectangle':\n        case 'Hilo':\n        case 'HiloOpenClose':\n        case 'Candle':\n        case 'Waterfall':\n        case 'BoxAndWhisker':\n        case 'StepArea':\n            path = 'M' + ' ' + x + ' ' + (locY + (-height / 2)) + ' ' +\n                'L' + ' ' + (locX + (width / 2)) + ' ' + (locY + (-height / 2)) + ' ' +\n                'L' + ' ' + (locX + (width / 2)) + ' ' + (locY + (height / 2)) + ' ' +\n                'L' + ' ' + x + ' ' + (locY + (height / 2)) + ' ' +\n                'L' + ' ' + x + ' ' + (locY + (-height / 2)) + ' z';\n            merge(options, { 'd': path });\n            break;\n        case 'Pyramid':\n        case 'Triangle':\n            path = 'M' + ' ' + x + ' ' + (locY + (height / 2)) + ' ' +\n                'L' + ' ' + locX + ' ' + (locY + (-height / 2)) + ' ' +\n                'L' + ' ' + (locX + (width / 2)) + ' ' + (locY + (height / 2)) + ' ' +\n                'L' + ' ' + x + ' ' + (locY + (height / 2)) + ' z';\n            merge(options, { 'd': path });\n            break;\n        case 'Funnel':\n        case 'InvertedTriangle':\n            path = 'M' + ' ' + (locX + (width / 2)) + ' ' + (locY - (height / 2)) + ' ' +\n                'L' + ' ' + locX + ' ' + (locY + (height / 2)) + ' ' +\n                'L' + ' ' + (locX - (width / 2)) + ' ' + (locY - (height / 2)) + ' ' +\n                'L' + ' ' + (locX + (width / 2)) + ' ' + (locY - (height / 2)) + ' z';\n            merge(options, { 'd': path });\n            break;\n        case 'Pentagon':\n            let eq = 72;\n            let xValue;\n            let yValue;\n            for (let i = 0; i <= 5; i++) {\n                xValue = (width / 2) * Math.cos((Math.PI / 180) * (i * eq));\n                yValue = (height / 2) * Math.sin((Math.PI / 180) * (i * eq));\n                if (i === 0) {\n                    path = 'M' + ' ' + (locX + xValue) + ' ' + (locY + yValue) + ' ';\n                }\n                else {\n                    path = path.concat('L' + ' ' + (locX + xValue) + ' ' + (locY + yValue) + ' ');\n                }\n            }\n            path = path.concat('Z');\n            merge(options, { 'd': path });\n            break;\n        case 'Image':\n            functionName = 'Image';\n            merge(options, { 'href': url, 'height': height, 'width': width, x: x, y: y });\n            break;\n    }\n    options = calculateLegendShapes(location, new Size(width, height), shape, options).renderOption;\n    return { renderOption: options, functionName: functionName };\n}\n/** @private */\nfunction getRectLocation(startLocation, endLocation, outerRect) {\n    let x;\n    let y;\n    x = (endLocation.x < outerRect.x) ? outerRect.x :\n        (endLocation.x > (outerRect.x + outerRect.width)) ? outerRect.x + outerRect.width : endLocation.x;\n    y = (endLocation.y < outerRect.y) ? outerRect.y :\n        (endLocation.y > (outerRect.y + outerRect.height)) ? outerRect.y + outerRect.height : endLocation.y;\n    return new Rect((x > startLocation.x ? startLocation.x : x), (y > startLocation.y ? startLocation.y : y), Math.abs(x - startLocation.x), Math.abs(y - startLocation.y));\n}\n/** @private */\nfunction minMax(value, min, max) {\n    return value > max ? max : (value < min ? min : value);\n}\n/** @private */\nfunction getElement(id) {\n    return document.getElementById(id);\n}\n/** @private */\nfunction getTemplateFunction(template) {\n    let templateFn = null;\n    try {\n        if (document.querySelectorAll(template).length) {\n            templateFn = compile(document.querySelector(template).innerHTML.trim());\n        }\n    }\n    catch (e) {\n        templateFn = compile(template);\n    }\n    return templateFn;\n}\n/** @private */\nfunction createTemplate(childElement, pointIndex, content, chart, point, series) {\n    let templateFn;\n    let templateElement;\n    templateFn = getTemplateFunction(content);\n    try {\n        if (templateFn && templateFn({ chart: chart, series: series, point: point }).length) {\n            templateElement = templateFn({ chart: chart, series: series, point: point });\n            while (templateElement.length > 0) {\n                childElement.appendChild(templateElement[0]);\n            }\n        }\n    }\n    catch (e) {\n        return childElement;\n    }\n    return childElement;\n}\n/** @private */\nfunction getFontStyle(font) {\n    let style = '';\n    style = 'font-size:' + font.size +\n        '; font-style:' + font.fontStyle + '; font-weight:' + font.fontWeight +\n        '; font-family:' + font.fontFamily + ';opacity:' + font.opacity +\n        '; color:' + font.color + ';';\n    return style;\n}\n/** @private */\nfunction measureElementRect(element) {\n    let bounds;\n    document.body.appendChild(element);\n    bounds = element.getBoundingClientRect();\n    removeElement(element.id);\n    return bounds;\n}\n/** @private */\nfunction findlElement(elements, id) {\n    let element;\n    for (let i = 0, length = elements.length; i < length; i++) {\n        if (elements[i].id.indexOf(id) > -1) {\n            element = elements[i];\n            continue;\n        }\n    }\n    return element;\n}\n/** @private */\nfunction getPoint(x, y, xAxis, yAxis, isInverted, series) {\n    x = ((xAxis.valueType === 'Logarithmic') ? logBase(((x > 1) ? x : 1), xAxis.logBase) : x);\n    y = ((yAxis.valueType === 'Logarithmic') ? logBase(((y > 1) ? y : 1), yAxis.logBase) : y);\n    x = valueToCoefficient(x, xAxis);\n    y = valueToCoefficient(y, yAxis);\n    let xLength = (isInverted ? xAxis.rect.height : xAxis.rect.width);\n    let yLength = (isInverted ? yAxis.rect.width : yAxis.rect.height);\n    let locationX = isInverted ? y * (yLength) : x * (xLength);\n    let locationY = isInverted ? (1 - x) * (xLength) : (1 - y) * (yLength);\n    return new ChartLocation(locationX, locationY);\n}\n/** @private */\nfunction appendElement(child, parent) {\n    if (child && child.hasChildNodes() && parent) {\n        parent.appendChild(child);\n    }\n    else {\n        return null;\n    }\n}\n/** @private */\nfunction getDraggedRectLocation(x1, y1, x2, y2, outerRect) {\n    let width = Math.abs(x1 - x2);\n    let height = Math.abs(y1 - y2);\n    let x = Math.max(checkBounds(Math.min(x1, x2), width, outerRect.x, outerRect.width), outerRect.x);\n    let y = Math.max(checkBounds(Math.min(y1, y2), height, outerRect.y, outerRect.height), outerRect.y);\n    return new Rect(x, y, Math.min(width, outerRect.width), Math.min(height, outerRect.height));\n}\n/** @private */\nfunction checkBounds(start, size, min, max) {\n    if (start < min) {\n        start = min;\n    }\n    else if ((start + size) > (max + min)) {\n        start = (max + min) - size;\n    }\n    return start;\n}\n/** @private */\nfunction getLabelText(currentPoint, series, chart) {\n    let labelFormat = series.yAxis.labelFormat;\n    let text = [];\n    let customLabelFormat = labelFormat.match('{value}') !== null;\n    switch (series.seriesType) {\n        case 'XY':\n            text.push(currentPoint.text || currentPoint.yValue.toString());\n            break;\n        case 'HighLow':\n            text.push(currentPoint.text || Math.max(currentPoint.high, currentPoint.low).toString());\n            text.push(currentPoint.text || Math.min(currentPoint.high, currentPoint.low).toString());\n            break;\n        case 'HighLowOpenClose':\n            text.push(currentPoint.text || Math.max(currentPoint.high, currentPoint.low).toString());\n            text.push(currentPoint.text || Math.min(currentPoint.high, currentPoint.low).toString());\n            text.push(currentPoint.text || Math.max(currentPoint.open, currentPoint.close).toString());\n            text.push(currentPoint.text || Math.min(currentPoint.open, currentPoint.close).toString());\n            break;\n        case 'BoxPlot':\n            text.push(currentPoint.text || currentPoint.median.toString());\n            text.push(currentPoint.text || currentPoint.maximum.toString());\n            text.push(currentPoint.text || currentPoint.minimum.toString());\n            text.push(currentPoint.text || currentPoint.upperQuartile.toString());\n            text.push(currentPoint.text || currentPoint.lowerQuartile.toString());\n            for (let liers of currentPoint.outliers) {\n                text.push(currentPoint.text || liers.toString());\n            }\n            break;\n    }\n    if (labelFormat && !currentPoint.text) {\n        for (let i = 0; i < text.length; i++) {\n            text[i] = customLabelFormat ? labelFormat.replace('{value}', series.yAxis.format(parseFloat(text[i]))) :\n                series.yAxis.format(parseFloat(text[i]));\n        }\n    }\n    return text;\n}\n/** @private */\nfunction stopTimer(timer) {\n    window.clearInterval(timer);\n}\n/** @private */\nfunction isCollide(rect, collections, clipRect) {\n    let isCollide;\n    let currentRect = new Rect(rect.x + clipRect.x, rect.y + clipRect.y, rect.width, rect.height);\n    isCollide = collections.some((rect) => {\n        return (currentRect.x < rect.x + rect.width && currentRect.x + currentRect.width > rect.x &&\n            currentRect.y < rect.y + rect.height && currentRect.height + currentRect.y > rect.y);\n    });\n    return isCollide;\n}\n/** @private */\nfunction isOverlap(currentRect, rect) {\n    return (currentRect.x < rect.x + rect.width && currentRect.x + currentRect.width > rect.x &&\n        currentRect.y < rect.y + rect.height && currentRect.height + currentRect.y > rect.y);\n}\n/** @private */\nfunction containsRect(currentRect, rect) {\n    return (currentRect.x <= rect.x && currentRect.x + currentRect.width >= rect.x + rect.width &&\n        currentRect.y <= rect.y && currentRect.height + currentRect.y >= rect.y + rect.height);\n}\n/** @private */\nfunction calculateRect(location, textSize, margin) {\n    return new Rect((location.x - (textSize.width / 2) - margin.left), (location.y - (textSize.height / 2) - margin.top), textSize.width + margin.left + margin.right, textSize.height + margin.top + margin.bottom);\n}\n/** @private */\nfunction convertToHexCode(value) {\n    return '#' + componentToHex(value.r) + componentToHex(value.g) + componentToHex(value.b);\n}\n/** @private */\nfunction componentToHex(value) {\n    let hex = value.toString(16);\n    return hex.length === 1 ? '0' + hex : hex;\n}\n/** @private */\nfunction convertHexToColor(hex) {\n    let result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n    return result ? new ColorValue(parseInt(result[1], 16), parseInt(result[2], 16), parseInt(result[3], 16)) :\n        new ColorValue(255, 255, 255);\n}\n/** @private */\nfunction colorNameToHex(color) {\n    let element;\n    color = color === 'transparent' ? 'white' : color;\n    element = document.getElementById('chartmeasuretext');\n    element.style.color = color;\n    color = window.getComputedStyle(element).color;\n    let exp = /^(rgb|hsl)(a?)[(]\\s*([\\d.]+\\s*%?)\\s*,\\s*([\\d.]+\\s*%?)\\s*,\\s*([\\d.]+\\s*%?)\\s*(?:,\\s*([\\d.]+)\\s*)?[)]$/;\n    let isRGBValue = exp.exec(color);\n    return convertToHexCode(new ColorValue(parseInt(isRGBValue[3], 10), parseInt(isRGBValue[4], 10), parseInt(isRGBValue[5], 10)));\n}\n/** @private */\nfunction getSaturationColor(color, factor) {\n    color = colorNameToHex(color);\n    color = color.replace(/[^0-9a-f]/gi, '');\n    if (color.length < 6) {\n        color = color[0] + color[0] + color[1] + color[1] + color[2] + color[2];\n    }\n    factor = factor || 0;\n    // convert to decimal and change luminosity\n    let rgb = '#';\n    let colorCode;\n    for (let i = 0; i < 3; i++) {\n        colorCode = parseInt(color.substr(i * 2, 2), 16);\n        colorCode = Math.round(Math.min(Math.max(0, colorCode + (colorCode * factor)), 255));\n        rgb += ('00' + colorCode.toString(16)).substr(colorCode.toString(16).length);\n    }\n    return rgb;\n}\n/** @private */\nfunction getMedian(values) {\n    let half = Math.floor(values.length / 2);\n    return values.length % 2 ? values[half] : ((values[half - 1] + values[half]) / 2.0);\n}\n/** @private */\n// tslint:disable-next-line:max-func-body-length\nfunction calculateLegendShapes(location, size, shape, options) {\n    let padding = 10;\n    let path = '';\n    let height = size.height;\n    let width = size.width;\n    let locX = location.x;\n    let locY = location.y;\n    switch (shape) {\n        case 'MultiColoredLine':\n        case 'Line':\n            path = 'M' + ' ' + (locX + (-width / 2)) + ' ' + (locY) + ' ' +\n                'L' + ' ' + (locX + (width / 2)) + ' ' + (locY);\n            merge(options, { 'd': path });\n            break;\n        case 'StepLine':\n            options.fill = 'transparent';\n            path = 'M' + ' ' + (locX + (-width / 2) - (padding / 4)) + ' ' + (locY + (height / 2)) + ' ' + 'L' + ' ' + (locX +\n                (-width / 2) + (width / 10)) + ' ' + (locY + (height / 2)) + ' ' + 'L' + ' ' + (locX + (-width / 2) + (width / 10))\n                + ' ' + (locY) + ' ' + 'L' + ' ' + (locX + (-width / 10)) + ' ' + (locY) + ' ' + 'L' + ' ' + (locX + (-width / 10))\n                + ' ' + (locY + (height / 2)) + ' ' + 'L' + ' ' + (locX + (width / 5)) + ' ' + (locY + (height / 2)) + ' ' + 'L' +\n                ' ' + (locX + (width / 5)) + ' ' + (locY + (-height / 2)) + ' ' + 'L' + ' ' + (locX + (width / 2)) + ' ' + (locY +\n                (-height / 2)) + 'L' + ' ' + (locX + (width / 2)) + ' ' + (locY + (height / 2)) + ' ' + 'L' + '' + (locX + (width / 2)\n                + (padding / 4)) + ' ' + (locY + (height / 2));\n            merge(options, { 'd': path });\n            break;\n        case 'RightArrow':\n            let space = 2;\n            path = 'M' + ' ' + (locX + (-width / 2)) + ' ' + (locY - (height / 2)) + ' ' +\n                'L' + ' ' + (locX + (width / 2)) + ' ' + (locY) + ' ' + 'L' + ' ' +\n                (locX + (-width / 2)) + ' ' + (locY + (height / 2)) + ' L' + ' ' + (locX + (-width / 2)) + ' ' +\n                (locY + (height / 2) - space) + ' ' + 'L' + ' ' + (locX + (width / 2) - (2 * space)) + ' ' + (locY) +\n                ' L' + (locX + (-width / 2)) + ' ' + (locY - (height / 2) + space) + ' Z';\n            merge(options, { 'd': path });\n            break;\n        case 'LeftArrow':\n            options.fill = options.stroke;\n            options.stroke = 'transparent';\n            space = 2;\n            path = 'M' + ' ' + (locX + (width / 2)) + ' ' + (locY - (height / 2)) + ' ' +\n                'L' + ' ' + (locX + (-width / 2)) + ' ' + (locY) + ' ' + 'L' + ' ' +\n                (locX + (width / 2)) + ' ' + (locY + (height / 2)) + ' ' + 'L' + ' ' +\n                (locX + (width / 2)) + ' ' + (locY + (height / 2) - space) + ' L' + ' ' + (locX + (-width / 2) + (2 * space))\n                + ' ' + (locY) + ' L' + (locX + (width / 2)) + ' ' + (locY - (height / 2) + space) + ' Z';\n            merge(options, { 'd': path });\n            break;\n        case 'Column':\n        case 'StackingColumn':\n        case 'StackingColumn100':\n        case 'RangeColumn':\n            path = 'M' + ' ' + (locX - 3 * (width / 5)) + ' ' + (locY - (height / 5)) + ' ' + 'L' + ' ' +\n                (locX + 3 * (-width / 10)) + ' ' + (locY - (height / 5)) + ' ' + 'L' + ' ' +\n                (locX + 3 * (-width / 10)) + ' ' + (locY + (height / 2)) + ' ' + 'L' + ' ' + (locX - 3 *\n                (width / 5)) + ' ' + (locY + (height / 2)) + ' ' + 'Z' + ' ' + 'M' + ' ' +\n                (locX + (-width / 10) - (width / 20)) + ' ' + (locY - (height / 4) - (padding / 2))\n                + ' ' + 'L' + ' ' + (locX + (width / 10) + (width / 20)) + ' ' + (locY - (height / 4) -\n                (padding / 2)) + ' ' + 'L' + ' ' + (locX + (width / 10) + (width / 20)) + ' ' + (locY\n                + (height / 2)) + ' ' + 'L' + ' ' + (locX + (-width / 10) - (width / 20)) + ' ' + (locY +\n                (height / 2)) + ' ' + 'Z' + ' ' + 'M' + ' ' + (locX + 3 * (width / 10)) + ' ' + (locY) + ' ' +\n                'L' + ' ' + (locX + 3 * (width / 5)) + ' ' + (locY) + ' ' + 'L' + ' '\n                + (locX + 3 * (width / 5)) + ' ' + (locY + (height / 2)) + ' ' + 'L' + ' '\n                + (locX + 3 * (width / 10)) + ' ' + (locY + (height / 2)) + ' ' + 'Z';\n            merge(options, { 'd': path });\n            break;\n        case 'Bar':\n        case 'StackingBar':\n        case 'StackingBar100':\n            path = 'M' + ' ' + (locX + (-width / 2) + (-padding / 4)) + ' ' + (locY - 3 * (height / 5)) + ' '\n                + 'L' + ' ' + (locX + 3 * (width / 10)) + ' ' + (locY - 3 * (height / 5)) + ' ' + 'L' + ' ' +\n                (locX + 3 * (width / 10)) + ' ' + (locY - 3 * (height / 10)) + ' ' + 'L' + ' ' +\n                (locX - (width / 2) + (-padding / 4)) + ' ' + (locY - 3 * (height / 10)) + ' ' + 'Z' + ' '\n                + 'M' + ' ' + (locX + (-width / 2) + (-padding / 4)) + ' ' + (locY - (height / 5)\n                + (padding / 20)) + ' ' + 'L' + ' ' + (locX + (width / 2) + (padding / 4)) + ' ' + (locY\n                - (height / 5) + (padding / 20)) + ' ' + 'L' + ' ' + (locX + (width / 2) + (padding / 4))\n                + ' ' + (locY + (height / 10) + (padding / 20)) + ' ' + 'L' + ' ' + (locX - (width / 2)\n                + (-padding / 4)) + ' ' + (locY + (height / 10) + (padding / 20)) + ' ' + 'Z' + ' ' + 'M'\n                + ' ' + (locX - (width / 2) + (-padding / 4)) + ' ' + (locY + (height / 5)\n                + (padding / 10)) + ' ' + 'L' + ' ' + (locX + (-width / 4)) + ' ' + (locY + (height / 5)\n                + (padding / 10)) + ' ' + 'L' + ' ' + (locX + (-width / 4)) + ' ' + (locY + (height / 2)\n                + (padding / 10)) + ' ' + 'L' + ' ' + (locX - (width / 2) + (-padding / 4))\n                + ' ' + (locY + (height / 2) + (padding / 10)) + ' ' + 'Z';\n            merge(options, { 'd': path });\n            break;\n        case 'Spline':\n            options.fill = 'transparent';\n            path = 'M' + ' ' + (locX - (width / 2)) + ' ' + (locY + (height / 5)) + ' ' + 'Q' + ' '\n                + locX + ' ' + (locY - height) + ' ' + locX + ' ' + (locY + (height / 5))\n                + ' ' + 'M' + ' ' + locX + ' ' + (locY + (height / 5)) + ' ' + 'Q' + ' ' + (locX\n                + (width / 2)) + ' ' + (locY + (height / 2)) + ' ' + (locX + (width / 2)) + ' '\n                + (locY - (height / 2));\n            merge(options, { 'd': path });\n            break;\n        case 'Area':\n        case 'MultiColoredArea':\n        case 'RangeArea':\n        case 'StackingArea':\n        case 'StackingArea100':\n            path = 'M' + ' ' + (locX - (width / 2) - (padding / 4)) + ' ' + (locY + (height / 2))\n                + ' ' + 'L' + ' ' + (locX + (-width / 4) + (-padding / 8)) + ' ' + (locY - (height / 2))\n                + ' ' + 'L' + ' ' + (locX) + ' ' + (locY + (height / 4)) + ' ' + 'L' + ' ' + (locX\n                + (width / 4) + (padding / 8)) + ' ' + (locY + (-height / 2) + (height / 4)) + ' '\n                + 'L' + ' ' + (locX + (height / 2) + (padding / 4)) + ' ' + (locY + (height / 2)) + ' ' + 'Z';\n            merge(options, { 'd': path });\n            break;\n        case 'SplineArea':\n            path = 'M' + ' ' + (locX - (width / 2)) + ' ' + (locY + (height / 5)) + ' ' + 'Q' + ' ' + locX\n                + ' ' + (locY - height) + ' ' + locX + ' ' + (locY + (height / 5)) + ' ' + 'Z' + ' ' + 'M'\n                + ' ' + locX + ' ' + (locY + (height / 5)) + ' ' + 'Q' + ' ' + (locX + (width / 2)) + ' '\n                + (locY + (height / 2)) + ' ' + (locX + (width / 2)) + ' '\n                + (locY - (height / 2)) + ' ' + ' Z';\n            merge(options, { 'd': path });\n            break;\n        case 'Pie':\n        case 'Doughnut':\n            options.stroke = 'transparent';\n            let r = Math.min(height, width) / 2;\n            path = getAccumulationLegend(locX, locY, r, height, width, shape);\n            merge(options, { 'd': path });\n            break;\n    }\n    return { renderOption: options };\n}\n/** @private */\nfunction textTrim(maxWidth, text, font) {\n    let label = text;\n    let size = measureText(text, font).width;\n    if (size > maxWidth) {\n        let textLength = text.length;\n        for (let i = textLength - 1; i >= 0; --i) {\n            label = text.substring(0, i) + '...';\n            size = measureText(label, font).width;\n            if (size <= maxWidth) {\n                return label;\n            }\n        }\n    }\n    return label;\n}\n/** @private */\nfunction stringToNumber(value, containerSize) {\n    if (value !== null && value !== undefined) {\n        return value.indexOf('%') !== -1 ? (containerSize / 100) * parseInt(value, 10) : parseInt(value, 10);\n    }\n    return null;\n}\n/** @private */\nfunction findDirection(rX, rY, rect, arrowLocation, arrowPadding, top, bottom, left, tipX, tipY, tipRadius) {\n    let direction = '';\n    let startX = rect.x;\n    let startY = rect.y;\n    let width = rect.x + rect.width;\n    let height = rect.y + rect.height;\n    tipRadius = tipRadius ? tipRadius : 0;\n    if (top) {\n        direction = direction.concat('M' + ' ' + (startX) + ' ' + (startY + rY) + ' Q ' + startX + ' '\n            + startY + ' ' + (startX + rX) + ' ' + startY + ' ' +\n            ' L' + ' ' + (width - rX) + ' ' + (startY) + ' Q ' + width + ' '\n            + startY + ' ' + (width) + ' ' + (startY + rY));\n        direction = direction.concat(' L' + ' ' + (width) + ' ' + (height - rY) + ' Q ' + width + ' '\n            + (height) + ' ' + (width - rX) + ' ' + (height));\n        if (arrowPadding !== 0) {\n            direction = direction.concat(' L' + ' ' + (arrowLocation.x + arrowPadding / 2) + ' ' + (height));\n            direction = direction.concat(' L' + ' ' + (tipX + tipRadius) + ' ' + (height + arrowPadding - tipRadius));\n            direction += ' Q' + ' ' + (tipX) + ' ' + (height + arrowPadding) + ' ' + (tipX - tipRadius) +\n                ' ' + (height + arrowPadding - tipRadius);\n        }\n        if ((arrowLocation.x - arrowPadding / 2) > startX) {\n            direction = direction.concat(' L' + ' ' + (arrowLocation.x - arrowPadding / 2) + ' ' + height +\n                ' L' + ' ' + (startX + rX) + ' ' + height + ' Q ' + startX + ' '\n                + height + ' ' + (startX) + ' ' + (height - rY) + ' z');\n        }\n        else {\n            if (arrowPadding === 0) {\n                direction = direction.concat(' L' + ' ' + (startX + rX) + ' ' + height + ' Q ' + startX + ' '\n                    + height + ' ' + (startX) + ' ' + (height - rY) + ' z');\n            }\n            else {\n                direction = direction.concat(' L' + ' ' + (startX) + ' ' + (height + rY) + ' z');\n            }\n        }\n    }\n    else if (bottom) {\n        direction = direction.concat('M' + ' ' + (startX) + ' ' + (startY + rY) + ' Q ' + startX + ' '\n            + (startY) + ' ' + (startX + rX) + ' ' + (startY) + ' L' + ' ' + (arrowLocation.x - arrowPadding / 2) + ' ' + (startY));\n        direction = direction.concat(' L' + ' ' + (tipX - tipRadius) + ' ' + (arrowLocation.y + tipRadius));\n        direction += ' Q' + ' ' + (tipX) + ' ' + (arrowLocation.y) + ' ' + (tipX + tipRadius) + ' ' + (arrowLocation.y + tipRadius);\n        direction = direction.concat(' L' + ' ' + (arrowLocation.x + arrowPadding / 2) + ' ' + (startY) + ' L' + ' '\n            + (width - rX) + ' ' + (startY) + ' Q ' + (width) + ' ' + (startY) + ' ' + (width) + ' ' + (startY + rY));\n        direction = direction.concat(' L' + ' ' + (width) + ' ' + (height - rY) + ' Q ' + (width) + ' '\n            + (height) + ' ' + (width - rX) + ' ' + (height) +\n            ' L' + ' ' + (startX + rX) + ' ' + (height) + ' Q ' + (startX) + ' '\n            + (height) + ' ' + (startX) + ' ' + (height - rY) + ' z');\n    }\n    else if (left) {\n        direction = direction.concat('M' + ' ' + (startX) + ' ' + (startY + rY) + ' Q ' + startX + ' '\n            + (startY) + ' ' + (startX + rX) + ' ' + (startY));\n        direction = direction.concat(' L' + ' ' + (width - rX) + ' ' + (startY) + ' Q ' + (width) + ' '\n            + (startY) + ' ' + (width) + ' ' + (startY + rY) + ' L' + ' ' + (width) + ' ' + (arrowLocation.y - arrowPadding / 2));\n        direction = direction.concat(' L' + ' ' + (width + arrowPadding - tipRadius) + ' ' + (tipY - tipRadius));\n        direction += ' Q ' + (width + arrowPadding) + ' ' + (tipY) + ' ' + (width + arrowPadding - tipRadius) + ' ' + (tipY + tipRadius);\n        direction = direction.concat(' L' + ' ' + (width) + ' ' + (arrowLocation.y + arrowPadding / 2) +\n            ' L' + ' ' + (width) + ' ' + (height - rY) + ' Q ' + width + ' ' + (height) + ' ' + (width - rX) + ' ' + (height));\n        direction = direction.concat(' L' + ' ' + (startX + rX) + ' ' + (height) + ' Q ' + startX + ' '\n            + (height) + ' ' + (startX) + ' ' + (height - rY) + ' z');\n    }\n    else {\n        direction = direction.concat('M' + ' ' + (startX + rX) + ' ' + (startY) + ' Q ' + (startX) + ' '\n            + (startY) + ' ' + (startX) + ' ' + (startY + rY) + ' L' + ' ' + (startX) + ' ' + (arrowLocation.y - arrowPadding / 2));\n        direction = direction.concat(' L' + ' ' + (startX - arrowPadding + tipRadius) + ' ' + (tipY - tipRadius));\n        direction += ' Q ' + (startX - arrowPadding) + ' ' + (tipY) + ' ' + (startX - arrowPadding + tipRadius) + ' ' + (tipY + tipRadius);\n        direction = direction.concat(' L' + ' ' + (startX) + ' ' + (arrowLocation.y + arrowPadding / 2) +\n            ' L' + ' ' + (startX) + ' ' + (height - rY) + ' Q ' + startX + ' '\n            + (height) + ' ' + (startX + rX) + ' ' + (height));\n        direction = direction.concat(' L' + ' ' + (width - rX) + ' ' + (height) + ' Q ' + width + ' '\n            + (height) + ' ' + (width) + ' ' + (height - rY) +\n            ' L' + ' ' + (width) + ' ' + (startY + rY) + ' Q ' + width + ' '\n            + (startY) + ' ' + (width - rX) + ' ' + (startY) + ' z');\n    }\n    return direction;\n}\n/** @private */\nfunction textElement(options, font, color, parent, isMinus = false) {\n    let renderOptions = {};\n    let htmlObject;\n    let tspanElement;\n    let renderer = new SvgRenderer('');\n    let text;\n    let height;\n    renderOptions = {\n        'id': options.id,\n        'x': options.x,\n        'y': options.y,\n        'fill': color,\n        'font-size': font.size,\n        'font-style': font.fontStyle,\n        'font-family': font.fontFamily,\n        'font-weight': font.fontWeight,\n        'text-anchor': options.anchor,\n        'transform': options.transform,\n        'opacity': font.opacity,\n        'dominant-baseline': options.baseLine\n    };\n    text = typeof options.text === 'string' ? options.text : isMinus ? options.text[options.text.length - 1] : options.text[0];\n    htmlObject = renderer.createText(renderOptions, text);\n    if (typeof options.text !== 'string' && options.text.length > 1) {\n        for (let i = 1, len = options.text.length; i < len; i++) {\n            height = (measureText(options.text[i], font).height);\n            tspanElement = renderer.createTSpan({\n                'x': options.x, 'id': options.id,\n                'y': (options.y) + ((isMinus) ? -(i * height) : (i * height))\n            }, isMinus ? options.text[options.text.length - (i + 1)] : options.text[i]);\n            htmlObject.appendChild(tspanElement);\n        }\n    }\n    parent.appendChild(htmlObject);\n    return htmlObject;\n}\n/**\n * Method to calculate the width and height of the chart\n */\nfunction calculateSize(chart) {\n    let containerWidth = chart.element.clientWidth;\n    let containerHeight = chart.element.clientHeight;\n    chart.availableSize = new Size(stringToNumber(chart.width, containerWidth) || containerWidth || 600, stringToNumber(chart.height, containerHeight) || containerHeight || 450);\n}\nfunction createSvg(chart) {\n    chart.renderer = new SvgRenderer(chart.element.id);\n    calculateSize(chart);\n    chart.svgObject = chart.renderer.createSvg({\n        id: chart.element.id + '_svg',\n        width: chart.availableSize.width,\n        height: chart.availableSize.height\n    });\n}\n/**\n * To calculate chart title and height\n * @param title\n * @param style\n * @param width\n */\nfunction getTitle(title, style, width) {\n    let titleCollection = [];\n    switch (style.textOverflow) {\n        case 'Wrap':\n            titleCollection = textWrap(title, width, style);\n            break;\n        case 'Trim':\n            titleCollection.push(textTrim(width, title, style));\n            break;\n        default:\n            titleCollection.push(title);\n            break;\n    }\n    return titleCollection;\n}\n/**\n * Method to calculate x position of title\n */\nfunction titlePositionX(chartSize, leftPadding, rightPadding, titleStyle) {\n    let positionX;\n    if (titleStyle.textAlignment === 'Near') {\n        positionX = leftPadding;\n    }\n    else if (titleStyle.textAlignment === 'Center') {\n        positionX = chartSize.width / 2;\n    }\n    else {\n        positionX = chartSize.width - rightPadding;\n    }\n    return positionX;\n}\n/**\n * Method to find new text and element size based on textOverflow\n */\nfunction textWrap(currentLabel, maximumWidth, font) {\n    let textCollection = currentLabel.split(' ');\n    let label = '';\n    let labelCollection = [];\n    let text;\n    for (let i = 0, len = textCollection.length; i < len; i++) {\n        text = textCollection[i];\n        if (measureText(label.concat(text), font).width < maximumWidth) {\n            label = label.concat((label === '' ? '' : ' ') + text);\n        }\n        else {\n            if (label !== '') {\n                labelCollection.push(textTrim(maximumWidth, label, font));\n                label = text;\n            }\n            else {\n                labelCollection.push(textTrim(maximumWidth, text, font));\n                text = '';\n            }\n        }\n        if (label && i === len - 1) {\n            labelCollection.push(textTrim(maximumWidth, label, font));\n        }\n    }\n    return labelCollection;\n}\n/** @private */\nclass CustomizeOption {\n    constructor(id) {\n        this.id = id;\n    }\n}\n/** @private */\nclass StackValues {\n    constructor(startValue, endValue) {\n        this.startValues = startValue;\n        this.endValues = endValue;\n    }\n}\n/** @private */\nclass TextOption extends CustomizeOption {\n    constructor(id, x, y, anchor, text, transform = '', baseLine) {\n        super(id);\n        this.transform = '';\n        this.baseLine = 'auto';\n        this.x = x;\n        this.y = y;\n        this.anchor = anchor;\n        this.text = text;\n        this.transform = transform;\n        this.baseLine = baseLine;\n    }\n}\n/** @private */\nclass PathOption extends CustomizeOption {\n    constructor(id, fill, width, color, opacity, dashArray, d) {\n        super(id);\n        this.opacity = opacity;\n        this.fill = fill;\n        this.stroke = color;\n        this['stroke-width'] = width;\n        this['stroke-dasharray'] = dashArray;\n        this.d = d;\n    }\n}\n/** @private */\nclass RectOption extends PathOption {\n    constructor(id, fill, border, opacity, rect, rx, ry, transform, dashArray) {\n        super(id, fill, border.width, border.color, opacity, dashArray);\n        this.y = rect.y;\n        this.x = rect.x;\n        this.height = rect.height;\n        this.width = rect.width;\n        this.rx = rx ? rx : 0;\n        this.ry = ry ? ry : 0;\n        this.transform = transform ? transform : '';\n    }\n}\n/** @private */\nclass CircleOption extends PathOption {\n    constructor(id, fill, border, opacity, cx, cy, r) {\n        super(id, fill, border.width, border.color, opacity);\n        this.cy = cy;\n        this.cx = cx;\n        this.r = r;\n    }\n}\n/** @private */\nclass PolygonOption {\n    constructor(id, points, fill) {\n        this.id = id;\n        this.points = points;\n        this.fill = fill;\n    }\n}\n/** @private */\nclass Size {\n    constructor(width, height) {\n        this.width = width;\n        this.height = height;\n    }\n}\n/** @private */\nclass Rect {\n    constructor(x, y, width, height) {\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n    }\n}\n/** @private */\nclass ChartLocation {\n    constructor(x, y) {\n        this.x = x;\n        this.y = y;\n    }\n}\n/** @private */\nclass Thickness {\n    constructor(left, right, top, bottom) {\n        this.left = left;\n        this.right = right;\n        this.top = top;\n        this.bottom = bottom;\n    }\n}\n/** @private */\nclass ColorValue {\n    constructor(r, g, b) {\n        this.r = r;\n        this.g = g;\n        this.b = b;\n    }\n}\n/** @private */\nclass PointData {\n    constructor(point, series, index = 0) {\n        this.point = point;\n        this.series = series;\n        this.lierIndex = index;\n    }\n}\n/** @private */\nclass AccPointData {\n    constructor(point, series, index = 0) {\n        this.point = point;\n        this.series = series;\n    }\n}\n/** @private */\nclass ControlPoints {\n    constructor(controlPoint1, controlPoint2) {\n        this.controlPoint1 = controlPoint1;\n        this.controlPoint2 = controlPoint2;\n    }\n}\n\n/**\n * Numeric Range.\n * @private\n */\nclass DoubleRange {\n    //private mIsEmpty: boolean;\n    /** @private */\n    get start() {\n        return this.mStart;\n    }\n    /** @private */\n    get end() {\n        return this.mEnd;\n    }\n    /*\n      get isEmpty(): boolean {\n         return this.mIsEmpty;\n     }*/\n    /** @private */\n    get delta() {\n        return (this.mEnd - this.mStart);\n    }\n    /** @private */\n    get median() {\n        return this.mStart + (this.mEnd - this.mStart) / 2;\n    }\n    constructor(start, end) {\n        /*\n          if (!isNaN(start) && !isNaN(end)) {\n           this.mIsEmpty = true;\n          } else {\n              this.mIsEmpty = false;\n          }*/\n        if (start < end) {\n            this.mStart = start;\n            this.mEnd = end;\n        }\n        else {\n            this.mStart = end;\n            this.mEnd = start;\n        }\n    }\n}\n\n/**\n * Numeric module is used to render numeric axis.\n */\nclass Double {\n    /**\n     * Constructor for the dateTime module.\n     * @private\n     */\n    constructor(chart) {\n        this.chart = chart;\n    }\n    /**\n     * Numeric Nice Interval for the axis.\n     * @private\n     */\n    calculateNumericNiceInterval(axis, delta, size) {\n        let actualDesiredIntervalsCount = axis.getActualDesiredIntervalsCount(size);\n        let niceInterval = delta / actualDesiredIntervalsCount;\n        if (axis.desiredIntervals != null) {\n            return niceInterval;\n        }\n        let minInterval = Math.pow(10, Math.floor(logBase(niceInterval, 10)));\n        for (let interval of axis.intervalDivs) {\n            let currentInterval = minInterval * interval;\n            if (actualDesiredIntervalsCount < (delta / currentInterval)) {\n                break;\n            }\n            niceInterval = currentInterval;\n        }\n        return niceInterval;\n    }\n    /**\n     * Actual Range for the axis.\n     * @private\n     */\n    getActualRange(axis, size) {\n        this.initializeDoubleRange(axis);\n        axis.actualRange.interval = axis.interval || this.calculateNumericNiceInterval(axis, axis.doubleRange.delta, size);\n        axis.actualRange.min = axis.doubleRange.start;\n        axis.actualRange.max = axis.doubleRange.end;\n    }\n    /**\n     * Range for the axis.\n     * @private\n     */\n    initializeDoubleRange(axis) {\n        //Axis Min\n        if (axis.minimum !== null) {\n            this.min = axis.minimum;\n        }\n        else if (this.min === null || this.min === Number.POSITIVE_INFINITY) {\n            this.min = 0;\n        }\n        // Axis Max\n        if (axis.maximum !== null) {\n            this.max = axis.maximum;\n        }\n        else if (this.max === null || this.max === Number.NEGATIVE_INFINITY) {\n            this.max = 5;\n        }\n        if (this.min === this.max) {\n            this.max = axis.valueType.indexOf('Category') > -1 ? this.max : this.min + 1;\n        }\n        axis.doubleRange = new DoubleRange(this.min, this.max);\n        axis.actualRange = {};\n    }\n    /**\n     * The function to calculate the range and labels for the axis.\n     * @return {void}\n     * @private\n     */\n    calculateRangeAndInterval(size, axis) {\n        this.calculateRange(axis, size);\n        this.getActualRange(axis, size);\n        this.applyRangePadding(axis, size);\n        this.calculateVisibleLabels(axis, this.chart);\n    }\n    /**\n     * Calculate Range for the axis.\n     * @private\n     */\n    calculateRange(axis, size) {\n        /*! Generate axis range */\n        this.min = null;\n        this.max = null;\n        if (!axis.setRange()) {\n            for (let series of axis.series) {\n                if (!series.visible) {\n                    continue;\n                }\n                this.paddingInterval = 0;\n                if ((series.type.indexOf('Column') > -1 && axis.orientation === 'Horizontal')\n                    || (series.type.indexOf('Bar') > -1 && axis.orientation === 'Vertical')) {\n                    if ((series.xAxis.valueType === 'Double' || series.xAxis.valueType === 'DateTime')\n                        && series.xAxis.rangePadding === 'Auto') {\n                        this.paddingInterval = getMinPointsDelta(series.xAxis, axis.series) / 2;\n                    }\n                }\n                //For xRange\n                if (axis.orientation === 'Horizontal') {\n                    if (this.chart.requireInvertedAxis) {\n                        this.findMinMax(series.yMin, series.yMax);\n                    }\n                    else {\n                        this.findMinMax(series.xMin - this.paddingInterval, series.xMax + this.paddingInterval);\n                    }\n                }\n                // For yRange\n                if (axis.orientation === 'Vertical') {\n                    if (this.chart.requireInvertedAxis) {\n                        this.findMinMax(series.xMin - this.paddingInterval, series.xMax + this.paddingInterval);\n                    }\n                    else {\n                        this.findMinMax(series.yMin, series.yMax);\n                    }\n                }\n            }\n        }\n    }\n    findMinMax(min, max) {\n        if (this.min === null || this.min > min) {\n            this.min = min;\n        }\n        if (this.max === null || this.max < max) {\n            this.max = max;\n        }\n    }\n    /**\n     * Apply padding for the range.\n     * @private\n     */\n    applyRangePadding(axis, size) {\n        let start = axis.actualRange.min;\n        let end = axis.actualRange.max;\n        if (!axis.setRange()) {\n            let interval = axis.actualRange.interval;\n            let padding = axis.getRangePadding(this.chart);\n            if (padding === 'Additional' || padding === 'Round') {\n                this.findAdditional(axis, start, end, interval);\n            }\n            else if (padding === 'Normal') {\n                this.findNormal(axis, start, end, interval, size);\n            }\n            else {\n                this.updateActualRange(axis, start, end, interval);\n            }\n        }\n        axis.actualRange.delta = axis.actualRange.max - axis.actualRange.min;\n        this.calculateVisibleRange(size, axis);\n    }\n    updateActualRange(axis, minimum, maximum, interval) {\n        axis.actualRange.min = axis.minimum != null ? axis.minimum : minimum;\n        axis.actualRange.max = axis.maximum != null ? axis.maximum : maximum;\n        axis.actualRange.interval = axis.interval != null ? axis.interval : interval;\n    }\n    findAdditional(axis, start, end, interval) {\n        let minimum;\n        let maximum;\n        minimum = Math.floor(start / interval) * interval;\n        maximum = Math.ceil(end / interval) * interval;\n        if (axis.rangePadding === 'Additional') {\n            minimum -= interval;\n            maximum += interval;\n        }\n        this.updateActualRange(axis, minimum, maximum, interval);\n    }\n    findNormal(axis, start, end, interval, size) {\n        let remaining;\n        let minimum;\n        let maximum;\n        let startValue = start;\n        if (start < 0) {\n            startValue = 0;\n            minimum = start + (start / 20);\n            remaining = interval + (minimum % interval);\n            if ((0.365 * interval) >= remaining) {\n                minimum -= interval;\n            }\n            if (minimum % interval < 0) {\n                minimum = (minimum - interval) - (minimum % interval);\n            }\n        }\n        else {\n            minimum = start < ((5.0 / 6.0) * end) ? 0 : (start - (end - start) / 2);\n            if (minimum % interval > 0) {\n                minimum -= (minimum % interval);\n            }\n        }\n        maximum = (end > 0) ? (end + (end - startValue) / 20) : (end - (end - startValue) / 20);\n        remaining = interval - (maximum % interval);\n        if ((0.365 * interval) >= remaining) {\n            maximum += interval;\n        }\n        if (maximum % interval > 0) {\n            maximum = (maximum + interval) - (maximum % interval);\n        }\n        axis.doubleRange = new DoubleRange(minimum, maximum);\n        if (minimum === 0) {\n            interval = this.calculateNumericNiceInterval(axis, axis.doubleRange.delta, size);\n            maximum = Math.ceil(maximum / interval) * interval;\n        }\n        this.updateActualRange(axis, minimum, maximum, interval);\n    }\n    /**\n     * Calculate visible range for axis.\n     * @private\n     */\n    calculateVisibleRange(size, axis) {\n        axis.visibleRange = {\n            max: axis.actualRange.max, min: axis.actualRange.min,\n            delta: axis.actualRange.delta, interval: axis.actualRange.interval\n        };\n        if (axis.zoomFactor < 1 || axis.zoomPosition > 0) {\n            axis.calculateVisibleRange(size);\n            axis.visibleRange.interval = (axis.enableAutoIntervalOnZooming && axis.valueType !== 'Category') ?\n                this.calculateNumericNiceInterval(axis, axis.doubleRange.delta, size)\n                : axis.visibleRange.interval;\n        }\n        axis.triggerRangeRender(this.chart, axis.visibleRange.min, axis.visibleRange.max, axis.visibleRange.interval);\n    }\n    /**\n     * Calculate label for the axis.\n     * @private\n     */\n    calculateVisibleLabels(axis, chart) {\n        /*! Generate axis labels */\n        axis.visibleLabels = [];\n        let tempInterval = axis.visibleRange.min;\n        if (axis.zoomFactor < 1 || axis.zoomPosition > 0 || this.paddingInterval) {\n            tempInterval = axis.visibleRange.min - (axis.visibleRange.min % axis.visibleRange.interval);\n        }\n        let format = this.getFormat(axis);\n        let isCustom = format.match('{value}') !== null;\n        axis.format = chart.intl.getNumberFormat({\n            format: isCustom ? '' : format,\n            useGrouping: chart.useGroupingSeparator\n        });\n        axis.startLabel = axis.format(axis.visibleRange.min);\n        axis.endLabel = axis.format(axis.visibleRange.max);\n        for (; tempInterval <= axis.visibleRange.max; tempInterval += axis.visibleRange.interval) {\n            if (withIn(tempInterval, axis.visibleRange)) {\n                axis.triggerLabelRender(chart, tempInterval, this.formatValue(axis, isCustom, format, tempInterval), axis.labelStyle);\n            }\n        }\n        axis.getMaxLabelWidth(chart);\n    }\n    /**\n     * Format of the axis label.\n     * @private\n     */\n    getFormat(axis) {\n        if (axis.labelFormat) {\n            return axis.labelFormat;\n        }\n        return axis.isStack100 ? '{value}%' : '';\n    }\n    /**\n     * Formatted the axis label.\n     * @private\n     */\n    formatValue(axis, isCustom, format, tempInterval) {\n        return isCustom ? format.replace('{value}', axis.format(tempInterval))\n            : axis.format(tempInterval);\n    }\n}\n\n/**\n * Specifies the chart constant value\n */\n/** @private */\nconst loaded = 'loaded';\n/** @private */\nconst load = 'load';\n/** @private */\nconst animationComplete = 'animationComplete';\n/** @private */\nconst legendRender = 'legendRender';\n/** @private */\nconst textRender = 'textRender';\n/** @private */\nconst pointRender = 'pointRender';\n/** @private */\nconst seriesRender = 'seriesRender';\n/** @private */\nconst axisLabelRender = 'axisLabelRender';\n/** @private */\nconst axisRangeCalculated = 'axisRangeCalculated';\n/** @private */\nconst axisMultiLabelRender = 'axisMultiLabelRender';\n/** @private */\nconst tooltipRender = 'tooltipRender';\n/** @private */\nconst chartMouseMove = 'chartMouseMove';\n/** @private */\nconst chartMouseClick = 'chartMouseClick';\n/** @private */\nconst pointClick = 'pointClick';\n/** @private */\nconst pointMove = 'pointMove';\n/** @private */\nconst chartMouseLeave = 'chartMouseLeave';\n/** @private */\nconst chartMouseDown = 'chartMouseDown';\n/** @private */\nconst chartMouseUp = 'chartMouseUp';\n/** @private */\nconst zoomComplete = 'zoomComplete';\n/** @private */\nconst dragComplete = 'dragComplete';\n/** @private */\nconst resized = 'resized';\n/** @private */\nconst beforePrint = 'beforePrint';\n/** @private */\nconst annotationRender = 'annotationRender';\n\nvar __decorate$3 = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n/**\n * Configures the Annotation for chart.\n */\nclass ChartAnnotationSettings extends ChildProperty {\n}\n__decorate$3([\n    Property('0')\n], ChartAnnotationSettings.prototype, \"x\", void 0);\n__decorate$3([\n    Property('0')\n], ChartAnnotationSettings.prototype, \"y\", void 0);\n__decorate$3([\n    Property(null)\n], ChartAnnotationSettings.prototype, \"content\", void 0);\n__decorate$3([\n    Property('Center')\n], ChartAnnotationSettings.prototype, \"horizontalAlignment\", void 0);\n__decorate$3([\n    Property('Pixel')\n], ChartAnnotationSettings.prototype, \"coordinateUnits\", void 0);\n__decorate$3([\n    Property('Chart')\n], ChartAnnotationSettings.prototype, \"region\", void 0);\n__decorate$3([\n    Property('Middle')\n], ChartAnnotationSettings.prototype, \"verticalAlignment\", void 0);\n__decorate$3([\n    Property(null)\n], ChartAnnotationSettings.prototype, \"xAxisName\", void 0);\n__decorate$3([\n    Property(null)\n], ChartAnnotationSettings.prototype, \"yAxisName\", void 0);\n__decorate$3([\n    Property(null)\n], ChartAnnotationSettings.prototype, \"description\", void 0);\n/**\n * label border properties.\n */\nclass LabelBorder extends ChildProperty {\n}\n__decorate$3([\n    Property('')\n], LabelBorder.prototype, \"color\", void 0);\n__decorate$3([\n    Property(1)\n], LabelBorder.prototype, \"width\", void 0);\n__decorate$3([\n    Property('Rectangle')\n], LabelBorder.prototype, \"type\", void 0);\n/**\n * categories for multi level labels\n */\nclass MultiLevelCategories extends ChildProperty {\n}\n__decorate$3([\n    Property(null)\n], MultiLevelCategories.prototype, \"start\", void 0);\n__decorate$3([\n    Property(null)\n], MultiLevelCategories.prototype, \"end\", void 0);\n__decorate$3([\n    Property('')\n], MultiLevelCategories.prototype, \"text\", void 0);\n__decorate$3([\n    Property(null)\n], MultiLevelCategories.prototype, \"maximumTextWidth\", void 0);\n/**\n * Strip line properties\n */\nclass StripLineSettings extends ChildProperty {\n}\n__decorate$3([\n    Property(true)\n], StripLineSettings.prototype, \"visible\", void 0);\n__decorate$3([\n    Property(false)\n], StripLineSettings.prototype, \"startFromAxis\", void 0);\n__decorate$3([\n    Property(null)\n], StripLineSettings.prototype, \"start\", void 0);\n__decorate$3([\n    Property(null)\n], StripLineSettings.prototype, \"end\", void 0);\n__decorate$3([\n    Property(null)\n], StripLineSettings.prototype, \"size\", void 0);\n__decorate$3([\n    Property('#808080')\n], StripLineSettings.prototype, \"color\", void 0);\n__decorate$3([\n    Complex({ color: 'transparent', width: 1 }, Border)\n], StripLineSettings.prototype, \"border\", void 0);\n__decorate$3([\n    Property('')\n], StripLineSettings.prototype, \"text\", void 0);\n__decorate$3([\n    Property(null)\n], StripLineSettings.prototype, \"rotation\", void 0);\n__decorate$3([\n    Property('Middle')\n], StripLineSettings.prototype, \"horizontalAlignment\", void 0);\n__decorate$3([\n    Property('Middle')\n], StripLineSettings.prototype, \"verticalAlignment\", void 0);\n__decorate$3([\n    Complex(Theme.stripLineLabelFont, Font)\n], StripLineSettings.prototype, \"textStyle\", void 0);\n__decorate$3([\n    Property('Behind')\n], StripLineSettings.prototype, \"zIndex\", void 0);\n__decorate$3([\n    Property(1)\n], StripLineSettings.prototype, \"opacity\", void 0);\n/**\n * MultiLevelLabels properties\n */\nclass MultiLevelLabels extends ChildProperty {\n}\n__decorate$3([\n    Property('Center')\n], MultiLevelLabels.prototype, \"alignment\", void 0);\n__decorate$3([\n    Property('Wrap')\n], MultiLevelLabels.prototype, \"overflow\", void 0);\n__decorate$3([\n    Complex(Theme.axisLabelFont, Font)\n], MultiLevelLabels.prototype, \"textStyle\", void 0);\n__decorate$3([\n    Complex({ color: null, width: 1, type: 'Rectangle' }, LabelBorder)\n], MultiLevelLabels.prototype, \"border\", void 0);\n__decorate$3([\n    Collection([], MultiLevelCategories)\n], MultiLevelLabels.prototype, \"categories\", void 0);\n\nvar __decorate$2 = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nconst axisPadding = 10;\n/**\n * Configures the `rows` of the chart.\n */\nclass Row extends ChildProperty {\n    constructor() {\n        /**\n         * The height of the row as a string accept input both as '100px' and '100%'.\n         * If specified as '100%, row renders to the full height of its chart.\n         * @default '100%'\n         */\n        super(...arguments);\n        /** @private */\n        this.axes = [];\n        /** @private */\n        this.nearSizes = [];\n        /** @private */\n        this.farSizes = [];\n    }\n    /**\n     * Measure the row size\n     * @return {void}\n     * @private\n     */\n    computeSize(axis, clipRect) {\n        let width = 0;\n        let innerPadding = 5;\n        if (axis.visible) {\n            width += (axis.findTickSize(axis.crossInAxis) +\n                axis.findLabelSize(axis.crossInAxis, innerPadding) + axis.lineStyle.width / 2);\n        }\n        if (axis.opposedPosition) {\n            this.farSizes.push(width);\n        }\n        else {\n            this.nearSizes.push(width);\n        }\n    }\n}\n__decorate$2([\n    Property('100%')\n], Row.prototype, \"height\", void 0);\n__decorate$2([\n    Complex({}, Border)\n], Row.prototype, \"border\", void 0);\n/**\n * Configures the `columns` of the chart.\n */\nclass Column extends ChildProperty {\n    constructor() {\n        /**\n         * The width of the column as a string accepts input both as like '100px' or '100%'.\n         * If specified as '100%, column renders to the full width of its chart.\n         * @default '100%'\n         */\n        super(...arguments);\n        /** @private */\n        this.axes = [];\n        /** @private */\n        this.nearSizes = [];\n        /** @private */\n        this.farSizes = [];\n        /** @private */\n        this.padding = 0;\n    }\n    /**\n     * Measure the column size\n     * @return {void}\n     * @private\n     */\n    computeSize(axis, clipRect) {\n        let height = 0;\n        let innerPadding = 5;\n        if (axis.visible) {\n            height += (axis.findTickSize(axis.crossInAxis) +\n                axis.findLabelSize(axis.crossInAxis, innerPadding) + axis.lineStyle.width / 2);\n        }\n        if (axis.opposedPosition) {\n            this.farSizes.push(height);\n        }\n        else {\n            this.nearSizes.push(height);\n        }\n    }\n}\n__decorate$2([\n    Property('100%')\n], Column.prototype, \"width\", void 0);\n__decorate$2([\n    Complex({}, Border)\n], Column.prototype, \"border\", void 0);\n/**\n * Configures the major grid lines in the `axis`.\n */\nclass MajorGridLines extends ChildProperty {\n}\n__decorate$2([\n    Property(1)\n], MajorGridLines.prototype, \"width\", void 0);\n__decorate$2([\n    Property('')\n], MajorGridLines.prototype, \"dashArray\", void 0);\n__decorate$2([\n    Property(null)\n], MajorGridLines.prototype, \"color\", void 0);\n/**\n * Configures the minor grid lines in the `axis`.\n */\nclass MinorGridLines extends ChildProperty {\n}\n__decorate$2([\n    Property(0.7)\n], MinorGridLines.prototype, \"width\", void 0);\n__decorate$2([\n    Property('')\n], MinorGridLines.prototype, \"dashArray\", void 0);\n__decorate$2([\n    Property(null)\n], MinorGridLines.prototype, \"color\", void 0);\n/**\n * Configures the axis line of a chart.\n */\nclass AxisLine extends ChildProperty {\n}\n__decorate$2([\n    Property(1)\n], AxisLine.prototype, \"width\", void 0);\n__decorate$2([\n    Property('')\n], AxisLine.prototype, \"dashArray\", void 0);\n__decorate$2([\n    Property(null)\n], AxisLine.prototype, \"color\", void 0);\n/**\n * Configures the major tick lines.\n */\nclass MajorTickLines extends ChildProperty {\n}\n__decorate$2([\n    Property(1)\n], MajorTickLines.prototype, \"width\", void 0);\n__decorate$2([\n    Property(5)\n], MajorTickLines.prototype, \"height\", void 0);\n__decorate$2([\n    Property(null)\n], MajorTickLines.prototype, \"color\", void 0);\n/**\n * Configures the minor tick lines.\n */\nclass MinorTickLines extends ChildProperty {\n}\n__decorate$2([\n    Property(0.7)\n], MinorTickLines.prototype, \"width\", void 0);\n__decorate$2([\n    Property(5)\n], MinorTickLines.prototype, \"height\", void 0);\n__decorate$2([\n    Property(null)\n], MinorTickLines.prototype, \"color\", void 0);\n/**\n * Configures the crosshair ToolTip.\n */\nclass CrosshairTooltip extends ChildProperty {\n}\n__decorate$2([\n    Property(false)\n], CrosshairTooltip.prototype, \"enable\", void 0);\n__decorate$2([\n    Property(null)\n], CrosshairTooltip.prototype, \"fill\", void 0);\n__decorate$2([\n    Complex(Theme.crosshairLabelFont, Font)\n], CrosshairTooltip.prototype, \"textStyle\", void 0);\n/**\n * Configures the axes in the chart.\n */\nclass Axis extends ChildProperty {\n    constructor() {\n        /**\n         * Options to customize the axis label.\n         */\n        super(...arguments);\n        /** @private */\n        this.visibleLabels = [];\n        /** @private */\n        this.series = [];\n        /** @private */\n        this.rect = new Rect(undefined, undefined, 0, 0);\n        /** @private */\n        this.axisBottomLine = null;\n        /** @private */\n        this.intervalDivs = [10, 5, 2, 1];\n        /** @private */\n        this.angle = this.labelRotation;\n        /** @private */\n        this.isStack100 = false;\n        /** @private */\n        this.crossAt = null;\n        /** @private */\n        this.updatedRect = null;\n        /** @private */\n        this.multiLevelLabelHeight = 0;\n    }\n    /**\n     * The function used to find tick size.\n     * @return {number}\n     * @private\n     */\n    findTickSize(crossAxis) {\n        if (this.tickPosition === 'Inside') {\n            return 0;\n        }\n        if (crossAxis && (!crossAxis.visibleRange || this.isInside(crossAxis.visibleRange))) {\n            return 0;\n        }\n        return this.majorTickLines.height;\n    }\n    /**\n     * The function used to find axis position.\n     * @return {number}\n     * @private\n     */\n    isInside(range) {\n        return (inside(this.crossAt, range) ||\n            (!this.opposedPosition && this.crossAt >= range.max) || (this.opposedPosition && this.crossAt <= range.min));\n    }\n    /**\n     * The function used to find label Size.\n     * @return {number}\n     * @private\n     */\n    findLabelSize(crossAxis, innerPadding) {\n        let titleSize = 0;\n        if (this.title) {\n            titleSize = measureText(this.title, this.titleStyle).height + innerPadding;\n        }\n        if (this.labelPosition === 'Inside') {\n            return titleSize + innerPadding;\n        }\n        let diff;\n        let value;\n        let labelSize = titleSize + innerPadding + axisPadding +\n            ((this.orientation === 'Vertical') ? this.maxLabelSize.width : this.maxLabelSize.height) + this.multiLevelLabelHeight;\n        if (crossAxis && this.placeNextToAxisLine) {\n            let range = crossAxis.visibleRange;\n            let size = (crossAxis.orientation === 'Horizontal') ? crossAxis.rect.width : crossAxis.rect.height;\n            if (!range || !size) {\n                return 0;\n            }\n            else if (this.isInside(range)) {\n                value = this.findDifference(crossAxis);\n                diff = (value) * (size / range.delta);\n                diff = (value) * ((size - (diff < labelSize ? (labelSize - diff) : 0)) / range.delta);\n                labelSize = (diff < labelSize) ? (labelSize - diff) : 0;\n            }\n        }\n        return labelSize;\n    }\n    /**\n     * The function used to find axis position.\n     * @return {number}\n     * @private\n     */\n    updateCrossValue(chart) {\n        let value = this.crossAt;\n        if (value === null || !this.isInside(this.crossInAxis.visibleRange)) {\n            this.updatedRect = this.rect;\n            return null;\n        }\n        let range = this.crossInAxis.visibleRange;\n        if (!this.opposedPosition) {\n            if (this.crossAt > range.max) {\n                value = range.max;\n            }\n        }\n        else {\n            if (this.crossAt < range.min) {\n                value = range.min;\n            }\n        }\n        this.updatedRect = extend({}, this.rect, null, true);\n        if (this.orientation === 'Horizontal') {\n            value = this.crossInAxis.rect.height - (valueToCoefficient(value, this.crossInAxis) * this.crossInAxis.rect.height);\n            this.updatedRect.y = this.crossInAxis.rect.y + value;\n        }\n        else {\n            value = valueToCoefficient(value, this.crossInAxis) * this.crossInAxis.rect.width;\n            this.updatedRect.x = this.crossInAxis.rect.x + value;\n        }\n    }\n    findDifference(crossAxis) {\n        let value = 0;\n        if (this.opposedPosition) {\n            value = crossAxis.isInversed ? crossAxis.visibleRange.min : crossAxis.visibleRange.max;\n        }\n        else {\n            value = crossAxis.isInversed ? crossAxis.visibleRange.max : crossAxis.visibleRange.min;\n        }\n        return Math.abs(this.crossAt - value);\n    }\n    /**\n     * The function used to find whether the range is set.\n     * @return {boolean}\n     * @private\n     */\n    setRange() {\n        if (this.minimum != null && this.maximum != null) {\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Calculate visible range for axis.\n     * @return {void}\n     * @private\n     */\n    calculateVisibleRange(size) {\n        if (this.zoomFactor < 1 || this.zoomPosition > 0) {\n            let baseRange = this.actualRange;\n            let start;\n            let end;\n            if (!this.isInversed) {\n                start = this.actualRange.min + this.zoomPosition * this.actualRange.delta;\n                end = start + this.zoomFactor * this.actualRange.delta;\n            }\n            else {\n                start = this.actualRange.max - (this.zoomPosition * this.actualRange.delta);\n                end = start - (this.zoomFactor * this.actualRange.delta);\n            }\n            if (start < baseRange.min) {\n                end = end + (baseRange.min - start);\n                start = baseRange.min;\n            }\n            if (end > baseRange.max) {\n                start = start - (end - baseRange.max);\n                end = baseRange.max;\n            }\n            this.doubleRange = new DoubleRange(start, end);\n            this.visibleRange.min = this.doubleRange.start;\n            this.visibleRange.max = this.doubleRange.end;\n            this.visibleRange.delta = this.doubleRange.delta;\n        }\n    }\n    /**\n     * Calculate desired interval for the axis.\n     * @return {void}\n     * @private\n     */\n    getActualDesiredIntervalsCount(availableSize) {\n        let size = this.orientation === 'Horizontal' ? availableSize.width : availableSize.height;\n        if (this.desiredIntervals === null) {\n            let desiredIntervalsCount = (this.orientation === 'Horizontal' ? 0.533 : 1) * this.maximumLabels;\n            desiredIntervalsCount = Math.max((size * (desiredIntervalsCount / 100)), 1);\n            return desiredIntervalsCount;\n        }\n        else {\n            return this.desiredIntervals;\n        }\n    }\n    /**\n     * Triggers the event.\n     * @return {void}\n     * @private\n     */\n    triggerLabelRender(chart, tempInterval, text, labelStyle) {\n        let argsData;\n        argsData = {\n            cancel: false, name: axisLabelRender, axis: this,\n            text: text, value: tempInterval, labelStyle: labelStyle\n        };\n        chart.trigger(axisLabelRender, argsData);\n        if (!argsData.cancel) {\n            this.visibleLabels.push(new VisibleLabels(argsData.text, argsData.value, argsData.labelStyle));\n        }\n    }\n    /**\n     * Triggers the event.\n     * @return {void}\n     * @private\n     */\n    triggerRangeRender(chart, minimum, maximum, interval) {\n        let argsData;\n        argsData = {\n            cancel: false, name: axisRangeCalculated, axis: this,\n            minimum: minimum, maximum: maximum, interval: interval\n        };\n        chart.trigger(axisRangeCalculated, argsData);\n        if (!argsData.cancel) {\n            this.visibleRange.min = argsData.minimum;\n            this.visibleRange.max = argsData.maximum;\n            this.visibleRange.interval = argsData.interval;\n            this.visibleRange.delta = argsData.maximum - argsData.minimum;\n        }\n    }\n    /**\n     * Calculate padding for the axis.\n     * @return {string}\n     * @private\n     */\n    getRangePadding(chart) {\n        let padding = this.rangePadding;\n        if (padding !== 'Auto') {\n            return padding;\n        }\n        switch (this.orientation) {\n            case 'Horizontal':\n                if (chart.requireInvertedAxis) {\n                    padding = (this.isStack100 ? 'Round' : 'Normal');\n                }\n                else {\n                    padding = 'None';\n                }\n                break;\n            case 'Vertical':\n                if (!chart.requireInvertedAxis) {\n                    padding = (this.isStack100 ? 'Round' : 'Normal');\n                }\n                else {\n                    padding = 'None';\n                }\n                break;\n        }\n        return padding;\n    }\n    /**\n     * Calculate maximum label width for the axis.\n     * @return {void}\n     * @private\n     */\n    getMaxLabelWidth(chart) {\n        let pointX;\n        let previousEnd = 0;\n        let isIntersect = false;\n        this.angle = this.labelRotation;\n        this.maxLabelSize = new Size(0, 0);\n        let action = this.labelIntersectAction;\n        let label;\n        for (let i = 0; i < this.visibleLabels.length; i++) {\n            label = this.visibleLabels[i];\n            label.size = measureText(label.text, this.labelStyle);\n            if (label.size.width > this.maxLabelSize.width) {\n                this.maxLabelSize.width = label.size.width;\n                this.rotatedLabel = label.text;\n            }\n            if (label.size.height > this.maxLabelSize.height) {\n                this.maxLabelSize.height = label.size.height;\n            }\n            if (action === 'None' || action === 'Hide' || action === 'Trim') {\n                continue;\n            }\n            if ((action !== 'None' || this.angle % 360 === 0) && this.orientation === 'Horizontal' &&\n                this.rect.width > 0 && !isIntersect) {\n                pointX = (valueToCoefficient(label.value, this) * this.rect.width) + this.rect.x;\n                pointX -= label.size.width / 2;\n                if (this.edgeLabelPlacement === 'Shift') {\n                    if (i === 0 && pointX < this.rect.x) {\n                        pointX = this.rect.x;\n                    }\n                    if (i === this.visibleLabels.length - 1 && ((pointX + label.size.width) > (this.rect.x + this.rect.width))) {\n                        pointX = this.rect.x + this.rect.width - label.size.width;\n                    }\n                }\n                switch (action) {\n                    case 'MultipleRows':\n                        if (i > 0) {\n                            this.findMultiRows(i, pointX, label);\n                        }\n                        break;\n                    case 'Rotate45':\n                    case 'Rotate90':\n                        if (i > 0 && (!this.isInversed ? pointX <= previousEnd : pointX + label.size.width >= previousEnd)) {\n                            this.angle = (action === 'Rotate45') ? 45 : 90;\n                            isIntersect = true;\n                        }\n                        break;\n                    default:\n                        label.text = textWrap(label.text, this.rect.width / this.visibleLabels.length, this.labelStyle);\n                        let height = (label.size.height * label.text.length);\n                        if (height > this.maxLabelSize.height) {\n                            this.maxLabelSize.height = height;\n                        }\n                        break;\n                }\n                previousEnd = this.isInversed ? pointX : pointX + label.size.width;\n            }\n        }\n        if (this.angle !== 0 && this.orientation === 'Horizontal') {\n            this.maxLabelSize = rotateTextSize(this.labelStyle, this.rotatedLabel, this.angle, chart);\n        }\n        if (chart.multiLevelLabelModule && this.multiLevelLabels.length > 0) {\n            chart.multiLevelLabelModule.getMultilevelLabelsHeight(this);\n        }\n    }\n    /**\n     * Finds the multiple rows for axis.\n     * @return {void}\n     */\n    findMultiRows(length, currentX, currentLabel) {\n        let label;\n        let pointX;\n        let store = [];\n        let isMultiRows;\n        for (let i = length - 1; i >= 0; i--) {\n            label = this.visibleLabels[i];\n            pointX = (valueToCoefficient(label.value, this) * this.rect.width) + this.rect.x;\n            isMultiRows = !this.isInversed ? currentX < (pointX + label.size.width / 2) :\n                currentX + currentLabel.size.width > (pointX - label.size.width / 2);\n            if (isMultiRows) {\n                store.push(label.index);\n                currentLabel.index = (currentLabel.index > label.index) ? currentLabel.index : label.index + 1;\n            }\n            else {\n                currentLabel.index = store.indexOf(label.index) > -1 ? currentLabel.index : label.index;\n            }\n        }\n        let height = (currentLabel.size.height * currentLabel.index) + (5 * (currentLabel.index - 1));\n        if (height > this.maxLabelSize.height) {\n            this.maxLabelSize.height = height;\n        }\n    }\n    /**\n     * Finds the default module for axis.\n     * @return {void}\n     * @private\n     */\n    getModule(chart) {\n        if (this.valueType === 'Double') {\n            this.baseModule = new Double(chart);\n        }\n        else {\n            this.baseModule = chart[firstToLowerCase(this.valueType) + 'Module'];\n        }\n    }\n}\n__decorate$2([\n    Complex(Theme.axisLabelFont, Font)\n], Axis.prototype, \"labelStyle\", void 0);\n__decorate$2([\n    Complex({}, CrosshairTooltip)\n], Axis.prototype, \"crosshairTooltip\", void 0);\n__decorate$2([\n    Property('')\n], Axis.prototype, \"title\", void 0);\n__decorate$2([\n    Complex(Theme.axisTitleFont, Font)\n], Axis.prototype, \"titleStyle\", void 0);\n__decorate$2([\n    Property('')\n], Axis.prototype, \"labelFormat\", void 0);\n__decorate$2([\n    Property('')\n], Axis.prototype, \"skeleton\", void 0);\n__decorate$2([\n    Property('DateTime')\n], Axis.prototype, \"skeletonType\", void 0);\n__decorate$2([\n    Property(0)\n], Axis.prototype, \"plotOffset\", void 0);\n__decorate$2([\n    Property(false)\n], Axis.prototype, \"isIndexed\", void 0);\n__decorate$2([\n    Property(10)\n], Axis.prototype, \"logBase\", void 0);\n__decorate$2([\n    Property(0)\n], Axis.prototype, \"columnIndex\", void 0);\n__decorate$2([\n    Property(0)\n], Axis.prototype, \"rowIndex\", void 0);\n__decorate$2([\n    Property(1)\n], Axis.prototype, \"span\", void 0);\n__decorate$2([\n    Property(null)\n], Axis.prototype, \"desiredIntervals\", void 0);\n__decorate$2([\n    Property(3)\n], Axis.prototype, \"maximumLabels\", void 0);\n__decorate$2([\n    Property(1)\n], Axis.prototype, \"zoomFactor\", void 0);\n__decorate$2([\n    Property(0)\n], Axis.prototype, \"zoomPosition\", void 0);\n__decorate$2([\n    Property(false)\n], Axis.prototype, \"opposedPosition\", void 0);\n__decorate$2([\n    Property(true)\n], Axis.prototype, \"enableAutoIntervalOnZooming\", void 0);\n__decorate$2([\n    Property('Auto')\n], Axis.prototype, \"rangePadding\", void 0);\n__decorate$2([\n    Property('Double')\n], Axis.prototype, \"valueType\", void 0);\n__decorate$2([\n    Property('None')\n], Axis.prototype, \"edgeLabelPlacement\", void 0);\n__decorate$2([\n    Property('Auto')\n], Axis.prototype, \"intervalType\", void 0);\n__decorate$2([\n    Property('BetweenTicks')\n], Axis.prototype, \"labelPlacement\", void 0);\n__decorate$2([\n    Property('Outside')\n], Axis.prototype, \"tickPosition\", void 0);\n__decorate$2([\n    Property('Outside')\n], Axis.prototype, \"labelPosition\", void 0);\n__decorate$2([\n    Property('')\n], Axis.prototype, \"name\", void 0);\n__decorate$2([\n    Property(true)\n], Axis.prototype, \"visible\", void 0);\n__decorate$2([\n    Property(0)\n], Axis.prototype, \"minorTicksPerInterval\", void 0);\n__decorate$2([\n    Property(0)\n], Axis.prototype, \"labelRotation\", void 0);\n__decorate$2([\n    Property(null)\n], Axis.prototype, \"crossesAt\", void 0);\n__decorate$2([\n    Property(true)\n], Axis.prototype, \"placeNextToAxisLine\", void 0);\n__decorate$2([\n    Property(null)\n], Axis.prototype, \"crossesInAxis\", void 0);\n__decorate$2([\n    Property(null)\n], Axis.prototype, \"minimum\", void 0);\n__decorate$2([\n    Property(null)\n], Axis.prototype, \"maximum\", void 0);\n__decorate$2([\n    Property(null)\n], Axis.prototype, \"interval\", void 0);\n__decorate$2([\n    Complex({}, MajorTickLines)\n], Axis.prototype, \"majorTickLines\", void 0);\n__decorate$2([\n    Complex({}, MinorTickLines)\n], Axis.prototype, \"minorTickLines\", void 0);\n__decorate$2([\n    Complex({}, MajorGridLines)\n], Axis.prototype, \"majorGridLines\", void 0);\n__decorate$2([\n    Complex({}, MinorGridLines)\n], Axis.prototype, \"minorGridLines\", void 0);\n__decorate$2([\n    Complex({}, AxisLine)\n], Axis.prototype, \"lineStyle\", void 0);\n__decorate$2([\n    Property('Trim')\n], Axis.prototype, \"labelIntersectAction\", void 0);\n__decorate$2([\n    Property(false)\n], Axis.prototype, \"isInversed\", void 0);\n__decorate$2([\n    Property(100)\n], Axis.prototype, \"coefficient\", void 0);\n__decorate$2([\n    Property(0)\n], Axis.prototype, \"startAngle\", void 0);\n__decorate$2([\n    Property(null)\n], Axis.prototype, \"description\", void 0);\n__decorate$2([\n    Property(2)\n], Axis.prototype, \"tabIndex\", void 0);\n__decorate$2([\n    Collection([], StripLineSettings)\n], Axis.prototype, \"stripLines\", void 0);\n__decorate$2([\n    Collection([], MultiLevelLabels)\n], Axis.prototype, \"multiLevelLabels\", void 0);\n__decorate$2([\n    Complex({ color: null, width: 0, type: 'Rectangle' }, LabelBorder)\n], Axis.prototype, \"border\", void 0);\n/** @private */\nclass VisibleLabels {\n    constructor(text, value, labelStyle, size = new Size(0, 0), index = 1) {\n        this.text = text;\n        this.originalText = text;\n        this.value = value;\n        this.labelStyle = labelStyle;\n        this.size = size;\n        this.index = 1;\n    }\n}\n\n/**\n * Specifies the Cartesian Axis Layout.\n */\nconst axisPadding$1 = 10;\nclass CartesianAxisLayoutPanel {\n    /** @private */\n    constructor(chartModule) {\n        this.chart = chartModule;\n        this.padding = 5;\n    }\n    /**\n     * Measure the axis size.\n     * @return {void}\n     * @private\n     */\n    measureAxis(rect) {\n        let chart = this.chart;\n        this.crossAt(chart);\n        this.seriesClipRect = new Rect(rect.x, rect.y, rect.width, rect.height);\n        this.initialClipRect = rect;\n        this.leftSize = 0;\n        this.rightSize = 0;\n        this.topSize = 0;\n        this.bottomSize = 0;\n        //Measure Axis size with initial Rect\n        this.measureRowAxis(chart, this.initialClipRect);\n        this.initialClipRect = subtractThickness(this.initialClipRect, new Thickness(this.leftSize, this.rightSize, 0, 0));\n        this.measureColumnAxis(chart, this.initialClipRect);\n        this.initialClipRect = subtractThickness(this.initialClipRect, new Thickness(0, 0, this.topSize, this.bottomSize));\n        if (!this.chart.delayRedraw) {\n            this.calculateAxisSize(this.initialClipRect);\n        }\n        this.leftSize = 0;\n        this.rightSize = 0;\n        this.topSize = 0;\n        this.bottomSize = 0;\n        //Measure Axis size with series Rect\n        this.measureRowAxis(chart, this.initialClipRect);\n        this.seriesClipRect = subtractThickness(this.seriesClipRect, new Thickness(this.leftSize, this.rightSize, 0, 0));\n        this.measureColumnAxis(chart, this.initialClipRect);\n        this.seriesClipRect = subtractThickness(this.seriesClipRect, new Thickness(0, 0, this.topSize, this.bottomSize));\n        if (!this.chart.delayRedraw) {\n            chart.refreshAxis();\n            this.calculateAxisSize(this.seriesClipRect);\n        }\n    }\n    measureRowAxis(chart, rect) {\n        let row;\n        this.calculateRowSize(rect);\n        for (let item of chart.rows) {\n            row = item;\n            row.nearSizes = [];\n            row.farSizes = [];\n            this.arrangeAxis(row);\n            this.measureDefinition(row, chart, new Size(chart.availableSize.width, row.computedHeight), rect);\n            if (this.leftSize < sum(row.nearSizes)) {\n                this.leftSize = sum(row.nearSizes);\n            }\n            if (this.rightSize < sum(row.farSizes)) {\n                this.rightSize = sum(row.farSizes);\n            }\n        }\n    }\n    measureColumnAxis(chart, rect) {\n        let column;\n        this.calculateColumnSize(rect);\n        for (let item of chart.columns) {\n            column = item;\n            column.farSizes = [];\n            column.nearSizes = [];\n            this.arrangeAxis(column);\n            this.measureDefinition(column, chart, new Size(column.computedWidth, chart.availableSize.height), rect);\n            if (this.bottomSize < sum(column.nearSizes)) {\n                this.bottomSize = sum(column.nearSizes);\n            }\n            if (this.topSize < sum(column.farSizes)) {\n                this.topSize = sum(column.farSizes);\n            }\n        }\n    }\n    /**\n     * Measure the column and row in chart.\n     * @return {void}\n     * @private\n     */\n    measureDefinition(definition, chart, size, clipRect) {\n        for (let axis of definition.axes) {\n            axis.getModule(chart);\n            axis.baseModule.calculateRangeAndInterval(size, axis);\n            definition.computeSize(axis, clipRect);\n        }\n        if (definition.farSizes.length > 0) {\n            definition.farSizes[definition.farSizes.length - 1] -= axisPadding$1;\n        }\n        if (definition.nearSizes.length > 0) {\n            definition.nearSizes[definition.nearSizes.length - 1] -= axisPadding$1;\n        }\n    }\n    /**\n     * Measure the axis.\n     * @return {void}\n     * @private\n     */\n    calculateAxisSize(rect) {\n        let chart = this.chart;\n        let row;\n        let column;\n        let definition;\n        let axis;\n        let nearCount = 0;\n        let farCount = 0;\n        let size = 0;\n        let x;\n        let y;\n        this.calculateRowSize(rect);\n        for (let i = 0, len = chart.rows.length; i < len; i++) {\n            row = chart.rows[i];\n            nearCount = 0;\n            farCount = 0;\n            for (let j = 0, len = row.axes.length; j < len; j++) {\n                axis = row.axes[j];\n                if (axis.rect.height === 0) {\n                    axis.rect.height = row.computedHeight;\n                    size = 0;\n                    for (let k = i + 1, len = i + axis.span; k < len; k++) {\n                        definition = chart.rows[k];\n                        size += definition.computedHeight;\n                    }\n                    axis.rect.y = (row.computedTop - size) + axis.plotOffset;\n                    axis.rect.height = (axis.rect.height + size) - (2 * axis.plotOffset);\n                    axis.rect.width = 0;\n                }\n                if (axis.opposedPosition) {\n                    x = rect.x + rect.width + sum(subArray(row.farSizes, farCount));\n                    axis.rect.x = axis.rect.x >= x ? axis.rect.x : x;\n                    farCount++;\n                }\n                else {\n                    x = rect.x - sum(subArray(row.nearSizes, nearCount));\n                    axis.rect.x = axis.rect.x <= x ? axis.rect.x : x;\n                    nearCount++;\n                }\n            }\n        }\n        this.calculateColumnSize(rect);\n        for (let i = 0, len = chart.columns.length; i < len; i++) {\n            column = chart.columns[i];\n            nearCount = 0;\n            farCount = 0;\n            for (let j = 0, len = column.axes.length; j < len; j++) {\n                axis = column.axes[j];\n                if (axis.rect.width === 0) {\n                    for (let k = i, len = (i + axis.span); k < len; k++) {\n                        definition = chart.columns[k];\n                        axis.rect.width += definition.computedWidth;\n                    }\n                    axis.rect.x = column.computedLeft + axis.plotOffset;\n                    axis.rect.width -= (2 * axis.plotOffset);\n                    axis.rect.height = 0;\n                }\n                if (axis.opposedPosition) {\n                    y = rect.y - sum(subArray(column.farSizes, farCount));\n                    axis.rect.y = axis.rect.y <= y ? axis.rect.y : y;\n                    farCount++;\n                }\n                else {\n                    y = rect.y + rect.height + sum(subArray(column.nearSizes, nearCount));\n                    axis.rect.y = axis.rect.y >= y ? axis.rect.y : y;\n                    nearCount++;\n                }\n            }\n        }\n    }\n    /**\n     * Measure the axis.\n     * @return {void}\n     * @private\n     */\n    measure() {\n        let chart = this.chart;\n        let row;\n        let column;\n        let definition;\n        let actualIndex;\n        let span;\n        for (let axis of chart.axisCollections) {\n            //definition.Axes = axis;\n            if (axis.orientation === 'Vertical') {\n                chart.verticalAxes.push(axis);\n                actualIndex = this.getActualRow(axis);\n                row = chart.rows[actualIndex];\n                this.pushAxis(row, axis);\n                span = ((actualIndex + axis.span) > chart.rows.length ? chart.rows.length : (actualIndex + axis.span));\n                for (let j = actualIndex + 1; j < span; j++) {\n                    definition = chart.rows[j];\n                    definition.axes[row.axes.length - 1] = axis;\n                    chart.rows[j] = definition;\n                }\n                chart.rows[actualIndex] = row;\n            }\n            else {\n                chart.horizontalAxes.push(axis);\n                actualIndex = this.getActualColumn(axis);\n                column = chart.columns[actualIndex];\n                this.pushAxis(column, axis);\n                span = ((actualIndex + axis.span) > chart.columns.length ? chart.columns.length : (actualIndex + axis.span));\n                for (let j = actualIndex + 1; j < span; j++) {\n                    definition = chart.columns[j];\n                    definition.axes[column.axes.length - 1] = axis;\n                    chart.columns[j] = definition;\n                }\n                chart.columns[actualIndex] = column;\n            }\n        }\n    }\n    crossAt(chart) {\n        for (let axis of chart.axisCollections) {\n            if (axis.crossesAt === null) {\n                continue;\n            }\n            let isTransposed = chart.isTransposed;\n            if (!axis.crossesInAxis) {\n                if (chart.requireInvertedAxis) {\n                    axis.crossInAxis = ((axis.orientation === 'Horizontal')) ? chart.primaryXAxis : chart.primaryYAxis;\n                }\n                else {\n                    axis.crossInAxis = ((axis.orientation === 'Horizontal')) ? chart.primaryYAxis : chart.primaryXAxis;\n                }\n                axis.crossAt = this.updateCrossAt(axis.crossInAxis, axis.crossesAt);\n                continue;\n            }\n            else {\n                for (let i = 2, len = chart.axisCollections.length; i < len; i++) {\n                    if (axis.crossesInAxis === chart.axisCollections[i].name) {\n                        axis.crossInAxis = chart.axisCollections[i];\n                        axis.crossAt = this.updateCrossAt(axis.crossInAxis, axis.crossesAt);\n                        continue;\n                    }\n                }\n            }\n        }\n    }\n    updateCrossAt(axis, crossAt) {\n        switch (axis.valueType) {\n            case 'DateTime':\n                let option = {\n                    skeleton: 'full',\n                    type: 'dateTime'\n                };\n                let dateParser = this.chart.intl.getDateParser(option);\n                let dateFormatter = this.chart.intl.getDateFormat(option);\n                return Date.parse(dateParser(dateFormatter(new Date(DataUtil.parse.parseJson({ val: crossAt }).val))));\n            case 'Category':\n                return parseFloat(crossAt) ? parseFloat(crossAt) : axis.labels.indexOf(crossAt);\n            case 'Logarithmic':\n                return logBase(crossAt, axis.logBase);\n            default:\n                return crossAt;\n        }\n    }\n    pushAxis(definition, axis) {\n        for (let i = 0, len = definition.axes.length; i <= len; i++) {\n            if (!definition.axes[i]) {\n                definition.axes[i] = axis;\n                break;\n            }\n        }\n    }\n    arrangeAxis(definition) {\n        let axisCollection = [];\n        for (let i = 0, len = definition.axes.length; i <= len; i++) {\n            if (definition.axes[i]) {\n                axisCollection.push(definition.axes[i]);\n            }\n        }\n        definition.axes = axisCollection;\n    }\n    getActualColumn(axis) {\n        let actualLength = this.chart.columns.length;\n        let pos = axis.columnIndex;\n        let result = pos >= actualLength ? actualLength - 1 : (pos < 0 ? 0 : pos);\n        return result;\n    }\n    getActualRow(axis) {\n        let actualLength = this.chart.rows.length;\n        let pos = axis.rowIndex;\n        let result = pos >= actualLength ? actualLength - 1 : (pos < 0 ? 0 : pos);\n        return result;\n    }\n    /**\n     * Measure the row size.\n     * @return {void}\n     */\n    calculateRowSize(rect) {\n        /*! Calculate row size */\n        let chart = this.chart;\n        let row;\n        let rowTop = rect.y + rect.height;\n        let height = 0;\n        let remainingHeight = Math.max(0, rect.height);\n        for (let i = 0, len = chart.rows.length; i < len; i++) {\n            row = chart.rows[i];\n            if (row.height.indexOf('%') !== -1) {\n                height = Math.min(remainingHeight, (rect.height * parseInt(row.height, 10) / 100));\n            }\n            else {\n                height = Math.min(remainingHeight, parseInt(row.height, 10));\n            }\n            height = (i !== (len - 1)) ? height : remainingHeight;\n            row.computedHeight = height;\n            rowTop -= height;\n            row.computedTop = rowTop;\n            remainingHeight -= height;\n        }\n    }\n    /**\n     * Measure the row size.\n     * @return {void}\n     */\n    calculateColumnSize(rect) {\n        /*! Calculate column size */\n        let chart = this.chart;\n        let column;\n        let columnLeft = rect.x;\n        let width = 0;\n        let remainingWidth = Math.max(0, rect.width);\n        for (let i = 0, len = chart.columns.length; i < len; i++) {\n            column = chart.columns[i];\n            if (column.width.indexOf('%') !== -1) {\n                width = Math.min(remainingWidth, (rect.width * parseInt(column.width, 10) / 100));\n            }\n            else {\n                width = Math.min(remainingWidth, parseInt(column.width, 10));\n            }\n            width = (i !== (len - 1)) ? width : remainingWidth;\n            column.computedWidth = width;\n            column.computedLeft = columnLeft;\n            columnLeft += width;\n            remainingWidth -= width;\n        }\n    }\n    /**\n     * To render the axis element.\n     * @return {void}\n     * @private\n     */\n    renderAxes() {\n        let chart = this.chart;\n        let axis;\n        let axisElement = chart.renderer.createGroup({ id: chart.element.id + 'AxisInsideCollection' });\n        let axisLineElement = chart.renderer.createGroup({ id: chart.element.id + 'AxisOutsideCollection' });\n        let outsideElement;\n        let isInside;\n        for (let i = 0, len = chart.axisCollections.length; i < len; i++) {\n            axis = chart.axisCollections[i];\n            this.element = chart.renderer.createGroup({ id: chart.element.id + 'AxisGroup' + i + 'Inside' });\n            outsideElement = chart.renderer.createGroup({ id: chart.element.id + 'AxisGroup' + i + 'Outside' });\n            isInside = this.findAxisPosition(axis);\n            if (axis.orientation === 'Horizontal') {\n                axis.updateCrossValue(chart);\n                if (axis.visible && axis.lineStyle.width > 0) {\n                    this.drawAxisLine(axis, i, axis.plotOffset, 0, isInside ? outsideElement : this.element, axis.updatedRect);\n                }\n                if (axis.majorGridLines.width > 0 || axis.majorTickLines.width > 0) {\n                    this.drawXAxisGridLine(axis, i, (isInside || axis.tickPosition === 'Inside') ? outsideElement : this.element, axis.updatedRect);\n                }\n                if (axis.visible) {\n                    this.drawXAxisLabels(axis, i, (isInside || axis.labelPosition === 'Inside') ? outsideElement : this.element, (axis.placeNextToAxisLine ? axis.updatedRect : axis.rect));\n                    this.drawXAxisBorder(axis, i, (isInside || axis.labelPosition === 'Inside') ? outsideElement : this.element, (axis.placeNextToAxisLine ? axis.updatedRect : axis.rect));\n                    this.drawXAxisTitle(axis, i, isInside ? outsideElement : this.element, (axis.placeNextToAxisLine ? axis.updatedRect : axis.rect));\n                }\n            }\n            else {\n                axis.updateCrossValue(chart);\n                if (axis.visible && axis.lineStyle.width > 0) {\n                    this.drawAxisLine(axis, i, 0, axis.plotOffset, isInside ? outsideElement : this.element, axis.updatedRect);\n                }\n                if (axis.majorGridLines.width > 0 || axis.majorTickLines.width > 0) {\n                    this.drawYAxisGridLine(axis, i, (isInside || axis.tickPosition === 'Inside') ? outsideElement : this.element, axis.updatedRect);\n                }\n                if (axis.visible) {\n                    this.drawYAxisLabels(axis, i, (isInside || axis.labelPosition === 'Inside') ? outsideElement : this.element, (axis.placeNextToAxisLine ? axis.updatedRect : axis.rect));\n                    this.drawYAxisBorder(axis, i, (isInside || axis.labelPosition === 'Inside') ? outsideElement : this.element, (axis.placeNextToAxisLine ? axis.updatedRect : axis.rect));\n                    this.drawYAxisTitle(axis, i, isInside ? outsideElement : this.element, (axis.placeNextToAxisLine ? axis.updatedRect : axis.rect));\n                }\n            }\n            axisElement.appendChild(this.element);\n            if (outsideElement && outsideElement.childNodes.length > 0) {\n                axisLineElement.appendChild(outsideElement);\n            }\n        }\n        this.element = chart.renderer.createGroup({ id: chart.element.id + 'DefinitionLine' });\n        for (let j = 0, len = chart.rows.length; j < len; j++) {\n            let row = chart.rows[j];\n            if (row.border.color) {\n                this.drawBottomLine(row, j, true);\n            }\n        }\n        for (let j = 0, len = chart.columns.length; j < len; j++) {\n            let column = chart.columns[j];\n            if (column.border.color) {\n                this.drawBottomLine(column, j, false);\n            }\n        }\n        axisElement.appendChild(this.element);\n        chart.svgObject.appendChild(axisElement);\n        return axisLineElement;\n    }\n    findAxisPosition(axis) {\n        return axis.crossAt !== null && axis.isInside(axis.crossInAxis.visibleRange);\n    }\n    drawBottomLine(definition, index, isRow) {\n        let chart = this.chart;\n        let optionsLine = {};\n        let x1;\n        let x2;\n        let y1;\n        let y2;\n        let definitionName;\n        if (isRow) {\n            definition = definition;\n            y1 = y2 = definition.computedTop + definition.computedHeight;\n            x1 = this.seriesClipRect.x;\n            x2 = x1 + this.seriesClipRect.width;\n            definitionName = 'Row';\n        }\n        else {\n            definition = definition;\n            x1 = x2 = definition.computedLeft;\n            y1 = this.seriesClipRect.y;\n            y2 = y1 + this.seriesClipRect.height;\n            definitionName = 'Column';\n        }\n        optionsLine = {\n            'id': chart.element.id + '_AxisBottom_' + definitionName + index,\n            x1: x1,\n            y1: y1,\n            x2: x2,\n            y2: y2,\n            'stroke-width': definition.border.width,\n            'stroke': definition.border.color,\n        };\n        this.htmlObject = chart.renderer.drawLine(optionsLine);\n        this.element.appendChild(this.htmlObject);\n    }\n    drawAxisLine(axis, index, plotX, plotY, parent, rect) {\n        let chart = this.chart;\n        let optionsLine = {};\n        optionsLine = {\n            'id': chart.element.id + 'AxisLine_' + index,\n            x1: rect.x - plotX,\n            y1: rect.y - plotY,\n            x2: rect.x + rect.width + plotX,\n            y2: rect.y + rect.height + plotY,\n            'stroke-dasharray': axis.lineStyle.dashArray,\n            'stroke-width': axis.lineStyle.width,\n            'stroke': axis.lineStyle.color || chart.themeStyle.axisLine\n        };\n        this.htmlObject = chart.renderer.drawLine(optionsLine);\n        parent.appendChild(this.htmlObject);\n    }\n    drawYAxisGridLine(axis, index, parent, rect) {\n        let chart = this.chart;\n        let tempInterval;\n        let pointY = 0;\n        let majorGrid = '';\n        let majorTick = '';\n        let minorGird = '';\n        let minorTick = '';\n        let minorDirection;\n        let tickSize = axis.opposedPosition ? axis.majorTickLines.height : -axis.majorTickLines.height;\n        let axisLineSize = (axis.opposedPosition) ? axis.lineStyle.width / 2 : -axis.lineStyle.width / 2;\n        let ticksbwtLabel = (axis.valueType === 'Category' && axis.labelPlacement === 'BetweenTicks') ?\n            0.5 : 0;\n        let ticks = axis.tickPosition === 'Inside' ? (rect.x - tickSize - axisLineSize) : (rect.x + tickSize + axisLineSize);\n        let length = axis.visibleLabels.length;\n        if (axis.valueType.indexOf('Category') && axis.labelPlacement === 'BetweenTicks' && length > 0) {\n            length += 1;\n        }\n        //Gridlines\n        for (let i = 0; i < length; i++) {\n            tempInterval = !axis.visibleLabels[i] ? (axis.visibleLabels[i - 1].value + axis.visibleRange.interval) - ticksbwtLabel\n                : axis.visibleLabels[i].value - ticksbwtLabel;\n            pointY = valueToCoefficient(tempInterval, axis) * rect.height;\n            pointY = (pointY * -1) + (rect.y + rect.height);\n            if (pointY >= rect.y && (rect.y + rect.height) >= pointY) {\n                if ((inside(tempInterval, axis.visibleRange)) || this.isBorder(axis, i, pointY)) {\n                    majorGrid = majorGrid.concat('M ' + this.seriesClipRect.x + ' ' + (pointY) +\n                        ' L ' + (this.seriesClipRect.x + this.seriesClipRect.width) + ' ' + pointY + ' ');\n                }\n                majorTick = majorTick.concat('M ' + (rect.x + axisLineSize) + ' ' + pointY +\n                    ' L ' + (ticks) + ' ' + pointY + ' ');\n            }\n            if ((axis.minorGridLines.width > 0 || axis.minorTickLines.width > 0) && axis.minorTicksPerInterval > 0) {\n                minorDirection = this.drawAxisMinorLine(axis, tempInterval, minorGird, minorTick, rect, i);\n                minorGird = minorDirection[0];\n                minorTick = minorDirection[1];\n            }\n        }\n        this.renderGridLine(axis, index, majorGrid, minorGird);\n        this.renderTickLine(axis, index, majorTick, minorTick, parent);\n    }\n    isBorder(axis, index, value) {\n        let chart = this.chart;\n        let border = chart.chartArea.border;\n        let rect = this.seriesClipRect;\n        let orientation = axis.orientation;\n        let start = (orientation === 'Horizontal') ? rect.x : rect.y;\n        let size = (orientation === 'Horizontal') ? rect.width : rect.height;\n        let startIndex = (orientation === 'Horizontal') ? 0 : axis.visibleLabels.length - 1;\n        let endIndex = (orientation === 'Horizontal') ? axis.visibleLabels.length - 1 : 0;\n        if (axis.plotOffset > 0) {\n            return true;\n        }\n        else if ((value === start || value === (start + size)) && (border.width <= 0 || border.color === 'transparent')) {\n            return true;\n        }\n        else if ((value !== start && index === startIndex) || (value !== (start + size) && index === endIndex)) {\n            return true;\n        }\n        return false;\n    }\n    /**\n     * To render the axis label.\n     * @return {void}\n     * @private\n     */\n    drawYAxisLabels(axis, index, parent, rect) {\n        let chart = this.chart;\n        let pointX = 0;\n        let pointY = 0;\n        let elementSize;\n        let options;\n        let isLabelInside = axis.labelPosition === 'Inside';\n        let isTickInside = axis.tickPosition === 'Inside';\n        let isOpposed = axis.opposedPosition;\n        let tickSpace = axis.labelPosition === axis.tickPosition ? axis.majorTickLines.height : 0;\n        let padding = tickSpace + this.padding + axis.lineStyle.width / 2;\n        padding = (axis.opposedPosition) ? padding : -padding;\n        let anchor = ((isOpposed && isLabelInside) || (!isOpposed && !isLabelInside)) ? 'end' : 'start';\n        let labelElement = chart.renderer.createGroup({ id: chart.element.id + 'AxisLabels' + index });\n        for (let i = 0, len = axis.visibleLabels.length; i < len; i++) {\n            pointX = isLabelInside ? (rect.x - padding) : (rect.x + padding);\n            elementSize = axis.visibleLabels[i].size;\n            pointY = valueToCoefficient(axis.visibleLabels[i].value, axis) * rect.height;\n            pointY = Math.floor((pointY * -1) + (rect.y + rect.height));\n            options = new TextOption(chart.element.id + index + '_AxisLabel_' + i, pointX, pointY + (elementSize.height / 4), anchor, axis.visibleLabels[i].text);\n            if (axis.edgeLabelPlacement) {\n                switch (axis.edgeLabelPlacement) {\n                    case 'None':\n                        break;\n                    case 'Hide':\n                        if (((i === 0 || (axis.isInversed && i === len - 1)) && options.y > rect.y + rect.height) ||\n                            (((i === len - 1) || (axis.isInversed && i === 0)) && options.y - elementSize.height / 2 < rect.y)) {\n                            options.text = '';\n                        }\n                        break;\n                    case 'Shift':\n                        if ((i === 0 || (axis.isInversed && i === len - 1)) && options.y > rect.y + rect.height) {\n                            options.y = pointY = rect.y + rect.height;\n                        }\n                        else if (((i === len - 1) || (axis.isInversed && i === 0)) && (options.y - elementSize.height / 2 < rect.y)) {\n                            options.y = pointY = rect.y + elementSize.height / 2;\n                        }\n                        break;\n                }\n            }\n            textElement(options, axis.labelStyle, axis.labelStyle.color || chart.themeStyle.axisLabel, labelElement);\n        }\n        if (!chart.delayRedraw) {\n            parent.appendChild(labelElement);\n        }\n        else if (axis.visible) {\n            this.createZoomingLabel(this.chart, labelElement, axis, index, rect);\n        }\n    }\n    /**\n     * To render the axis label border.\n     * @return {void}\n     * @private\n     */\n    drawYAxisBorder(axis, index, parent, rect) {\n        if (axis.border.width > 0) {\n            let startY;\n            let pointY;\n            let gap = (rect.height / axis.visibleRange.delta) * (axis.valueType === 'DateTime' ? axis.dateTimeInterval\n                : axis.visibleRange.interval);\n            let endY;\n            let length = axis.maxLabelSize.width + 10 + ((axis.tickPosition === axis.labelPosition) ?\n                axis.majorTickLines.height : 0);\n            let labelBorder = '';\n            let ticksbwtLabel = (axis.valueType === 'Category' && axis.labelPlacement === 'BetweenTicks') ? -0.5 : 0;\n            let endX = ((axis.opposedPosition && axis.labelPosition === 'Inside') ||\n                (!axis.opposedPosition && axis.labelPosition === 'Outside')) ? rect.x - length : rect.x + length;\n            for (let i = 0; i < axis.visibleLabels.length; i++) {\n                pointY = valueToCoefficient(axis.visibleLabels[i].value + ticksbwtLabel, axis);\n                pointY = (axis.isInversed ? (1 - pointY) : pointY) * rect.height;\n                if (axis.valueType === 'Category' && axis.labelPlacement === 'BetweenTicks') {\n                    startY = Math.floor((pointY * -1) + (rect.y + rect.height));\n                    endY = Math.floor((pointY * -1) - (gap) + (rect.y + rect.height));\n                }\n                else {\n                    startY = Math.floor((pointY * -1) + gap / 2 + (rect.y + rect.height));\n                    endY = Math.floor((pointY * -1) - gap / 2 + (rect.y + rect.height));\n                }\n                switch (axis.border.type) {\n                    case 'Rectangle':\n                    case 'WithoutTopBorder':\n                        if (startY > (rect.y + rect.height)) {\n                            labelBorder += ('M' + ' ' + endX + ' ' + (rect.y + rect.height) + ' ' + 'L' + ' ' + endX + ' ' + endY + ' ');\n                        }\n                        else if (Math.floor(rect.y) > (endY)) {\n                            labelBorder += ('M' + ' ' + rect.x + ' ' + startY + ' ' + 'L' + ' ' + endX\n                                + ' ' + startY + ' ' + 'L' + ' ' + endX + ' ' + (rect.y) + ' ');\n                        }\n                        else {\n                            labelBorder += ('M' + ' ' + rect.x + ' ' + startY + ' ' + 'L' + ' ' + endX +\n                                ' ' + startY + ' ' + 'L' + ' ' + endX + ' ' + endY + ' ');\n                            if (i === axis.visibleLabels.length - 1) {\n                                labelBorder += ('M' + ' ' + rect.x + ' ' + endY + ' ' + 'L' + ' ' +\n                                    endX + ' ' + endY + ' ');\n                            }\n                        }\n                        break;\n                    case 'WithoutTopandBottomBorder':\n                        if (!(startY > rect.y + rect.height) && !((endY) < Math.floor(rect.y))) {\n                            labelBorder += ('M' + ' ' + rect.x + ' ' + startY + ' ' + 'L' + ' ' + endX +\n                                ' ' + startY + ' ' + 'M' + ' ' + endX + ' ' + endY + ' ' +\n                                'L' + ' ' + rect.x + ' ' + endY);\n                        }\n                        break;\n                }\n            }\n            labelBorder += (axis.border.type === 'Rectangle') ? ('M' + ' ' + rect.x + ' ' + rect.y + ' ' + 'L' + ' ' +\n                rect.x + ' ' + (rect.y + rect.height) + ' ') : '';\n            if (labelBorder !== '') {\n                this.createAxisBorderElement(axis, index, labelBorder, parent);\n            }\n        }\n        if (axis.multiLevelLabels.length > 0 && this.chart.multiLevelLabelModule) {\n            this.chart.multiLevelLabelModule.renderYAxisMultiLevelLabels(axis, index, parent, rect);\n        }\n    }\n    drawYAxisTitle(axis, index, parent, rect) {\n        let chart = this.chart;\n        let labelRotation = (axis.opposedPosition) ? 90 : -90;\n        let elementSize = measureText(axis.title, axis.titleStyle);\n        let padding = (axis.tickPosition === 'Inside' ? 0 : axis.majorTickLines.height + this.padding) +\n            (axis.labelPosition === 'Inside' ? 0 :\n                (axis.maxLabelSize.width + axis.multiLevelLabelHeight + this.padding));\n        padding = axis.opposedPosition ? padding : -padding;\n        let x = rect.x + padding;\n        let y = rect.y + rect.height / 2;\n        let options = new TextOption(chart.element.id + '_AxisTitle_' + index, x, y - this.padding, 'middle', axis.title, 'rotate(' + labelRotation + ',' + (x) + ',' + (y) + ')');\n        let element = textElement(options, axis.titleStyle, axis.titleStyle.color || chart.themeStyle.axisTitle, parent);\n        element.setAttribute('aria-label', axis.description || axis.title);\n        element.setAttribute('tabindex', axis.tabIndex.toString());\n    }\n    drawXAxisGridLine(axis, index, parent, rect) {\n        let chart = this.chart;\n        let tempInterval;\n        let pointX = 0;\n        let majorGrid = '';\n        let majorTick = '';\n        let minorGird = '';\n        let minorTick = '';\n        let minorDirection;\n        let tickSize = (axis.opposedPosition) ? -axis.majorTickLines.height : axis.majorTickLines.height;\n        let axisLineSize = (axis.opposedPosition) ? -axis.lineStyle.width / 2 : axis.lineStyle.width / 2;\n        let ticksbwtLabel = (axis.valueType.indexOf('Category') > -1 && axis.labelPlacement === 'BetweenTicks') ?\n            0.5 : 0;\n        let length = axis.visibleLabels.length;\n        let ticks = axis.tickPosition === 'Inside' ? (rect.y - tickSize - axisLineSize) : (rect.y + tickSize + axisLineSize);\n        if (axis.valueType.indexOf('Category') > -1 && length > 0 && axis.labelPlacement === 'BetweenTicks') {\n            length += 1;\n        }\n        //Gridlines\n        for (let i = 0; i < length; i++) {\n            if (axis.valueType !== 'DateTimeCategory') {\n                tempInterval = axis.visibleLabels[i] ? axis.visibleLabels[i].value - ticksbwtLabel\n                    : (axis.visibleLabels[i - 1].value + axis.visibleRange.interval) - ticksbwtLabel;\n            }\n            else {\n                tempInterval = axis.visibleLabels[i] ?\n                    axis.visibleLabels[i].value - ticksbwtLabel : axis.visibleRange.max;\n            }\n            pointX = (valueToCoefficient(tempInterval, axis) * rect.width) + rect.x;\n            if (pointX >= rect.x && (rect.x + rect.width) >= pointX) {\n                if (inside(tempInterval, axis.visibleRange) || this.isBorder(axis, i, pointX)) {\n                    majorGrid = majorGrid.concat('M ' + pointX + ' ' + (this.seriesClipRect.y + this.seriesClipRect.height) +\n                        ' L ' + pointX + ' ' + this.seriesClipRect.y + ' ');\n                }\n                majorTick = majorTick.concat('M ' + (pointX) + ' ' + (rect.y + axisLineSize) +\n                    ' L ' + (pointX) + ' ' + ticks + ' ');\n            }\n            if (axis.minorTicksPerInterval > 0 && (axis.minorGridLines.width > 0 || axis.minorTickLines.width > 0)) {\n                minorDirection = this.drawAxisMinorLine(axis, tempInterval, minorGird, minorTick, rect, i);\n                minorGird = minorDirection[0];\n                minorTick = minorDirection[1];\n            }\n        }\n        this.renderGridLine(axis, index, majorGrid, minorGird);\n        this.renderTickLine(axis, index, majorTick, minorTick, parent);\n    }\n    drawAxisMinorLine(axis, tempInterval, minorGird, minorTick, rect, labelIndex) {\n        let value = tempInterval;\n        let coor = 0;\n        let position = 0;\n        let range = axis.visibleRange;\n        let isTickInside = axis.tickPosition === 'Inside';\n        let direction = [];\n        let tickSize = axis.opposedPosition ? -axis.minorTickLines.height : axis.minorTickLines.height;\n        let logStart;\n        let logEnd;\n        let logInterval = 1;\n        let logPosition = 1;\n        let ticksX = isTickInside ? (rect.y - tickSize) : (rect.y + tickSize);\n        let ticksY = isTickInside ? (rect.x + tickSize) : (rect.x - tickSize);\n        if (axis.valueType === 'Logarithmic') {\n            logStart = Math.pow(axis.logBase, value - range.interval);\n            logEnd = Math.pow(axis.logBase, value);\n            logInterval = (logEnd - logStart) / (axis.minorTicksPerInterval + 1);\n            logPosition = logStart + logInterval;\n        }\n        if (axis.orientation === 'Horizontal') {\n            for (let j = 0; j < axis.minorTicksPerInterval; j++) {\n                value = this.findLogNumeric(axis, logPosition, logInterval, value, labelIndex);\n                logPosition += logInterval;\n                if (inside(value, range)) {\n                    position = ((value - range.min) / (range.max - range.min));\n                    position = Math.ceil((axis.isInversed ? (1 - position) : position) * rect.width);\n                    coor = (Math.floor(position + rect.x));\n                    minorGird = minorGird.concat('M' + ' ' + coor + ' ' + (this.seriesClipRect.y)\n                        + 'L ' + coor + ' ' + (this.seriesClipRect.y + this.seriesClipRect.height));\n                    coor = (Math.floor(position + rect.x));\n                    minorTick = minorTick.concat('M' + ' ' + coor + ' ' + (rect.y)\n                        + 'L ' + coor + ' ' + ticksX);\n                }\n            }\n        }\n        else {\n            tickSize = axis.opposedPosition ? axis.minorTickLines.height : -axis.minorTickLines.height;\n            for (let j = 0; j < axis.minorTicksPerInterval; j++) {\n                value = this.findLogNumeric(axis, logPosition, logInterval, value, labelIndex);\n                if (inside(value, range)) {\n                    position = Math.ceil(((value - range.min) / (range.max - range.min)) * rect.height) * -1;\n                    coor = (Math.floor(position + rect.y + rect.height));\n                    minorGird = minorGird.concat('M' + ' ' + (this.seriesClipRect.x) + ' ' + coor\n                        + 'L ' + (this.seriesClipRect.x + this.seriesClipRect.width) + ' ' + coor);\n                    coor = (Math.floor(position + rect.y + rect.height));\n                    minorTick = minorTick.concat('M' + ' ' + rect.x + ' ' + coor + 'L ' + ticksY + ' ' + coor);\n                }\n                logPosition += logInterval;\n            }\n        }\n        direction.push(minorGird);\n        direction.push(minorTick);\n        return direction;\n    }\n    findLogNumeric(axis, logPosition, logInterval, value, labelIndex) {\n        let range = axis.visibleRange;\n        if (axis.valueType === 'Logarithmic') {\n            value = logBase(logPosition, axis.logBase);\n        }\n        else if (axis.valueType === 'DateTime') {\n            value += axis.dateTimeInterval / (axis.minorTicksPerInterval + 1);\n        }\n        else if (axis.valueType === 'DateTimeCategory') {\n            let padding = axis.labelPlacement === 'BetweenTicks' ? 0.5 : 0;\n            value += ((axis.visibleLabels[labelIndex + 1] ?\n                axis.visibleLabels[labelIndex + 1].value - padding : axis.visibleRange.max) -\n                (axis.visibleLabels[labelIndex] ?\n                    axis.visibleLabels[labelIndex].value - padding : axis.visibleRange.min)) /\n                (axis.minorTicksPerInterval + 1);\n        }\n        else {\n            value += range.interval / (axis.minorTicksPerInterval + 1);\n        }\n        return value;\n    }\n    /**\n     * To render the axis label.\n     * @return {void}\n     * @private\n     */\n    drawXAxisLabels(axis, index, parent, rect) {\n        let chart = this.chart;\n        let pointX = 0;\n        let pointY = 0;\n        let elementSize;\n        let labelElement = chart.renderer.createGroup({ id: chart.element.id + 'AxisLabels' + index });\n        let labelPosition = axis.labelPosition;\n        let islabelInside = axis.labelPosition === 'Inside';\n        let isTickInside = axis.tickPosition === 'Inside';\n        let isOpposed = axis.opposedPosition;\n        let tickSpace = axis.labelPosition === axis.tickPosition ? axis.majorTickLines.height : 0;\n        let labelPadding;\n        let padding = tickSpace + this.padding + axis.lineStyle.width / 2;\n        let rotateSize;\n        let diffHeight;\n        let angle;\n        let anglePadding = ((axis.angle === 90 || axis.angle === -90)) ? -2 : 0;\n        let options;\n        let yLocation;\n        let previousEnd = axis.isInversed ? (rect.x + rect.width) : rect.x;\n        let width = 0;\n        let length = axis.visibleLabels.length;\n        let intervalLength;\n        let label;\n        for (let i = 0, len = length; i < len; i++) {\n            label = axis.visibleLabels[i];\n            pointX = (valueToCoefficient(label.value, axis) * rect.width) + rect.x;\n            elementSize = label.size;\n            intervalLength = rect.width / length;\n            width = ((axis.labelIntersectAction === 'Trim' || axis.labelIntersectAction === 'Wrap')\n                && elementSize.width > intervalLength) ? intervalLength : elementSize.width;\n            pointX -= width / 2;\n            if (islabelInside && axis.angle) {\n                pointY = isOpposed ? (rect.y + padding) : (rect.y - padding);\n            }\n            else {\n                labelPadding = (isOpposed && !islabelInside) || (!isOpposed && islabelInside) ?\n                    -(padding + (axis.angle ? (3 * (elementSize.height / 4) + (2 * axis.maxLabelSize.height / 5)) :\n                        (label.index > 1 ? (2 * (elementSize.height / 4)) : 0)))\n                    : padding + (axis.angle ? (3 * (elementSize.height / 4)) + (2 * axis.maxLabelSize.height / 5)\n                        : (3 * (elementSize.height / 4)));\n                pointY = (rect.y + (labelPadding * label.index));\n            }\n            options = new TextOption(chart.element.id + index + '_AxisLabel_' + i, pointX, pointY, '');\n            if (axis.edgeLabelPlacement) {\n                switch (axis.edgeLabelPlacement) {\n                    case 'None':\n                        break;\n                    case 'Hide':\n                        if (((i === 0 || (axis.isInversed && i === len - 1)) && options.x < rect.x) ||\n                            ((i === len - 1 || (axis.isInversed && i === 0)) && (options.x + width > rect.x + rect.width))) {\n                            continue;\n                        }\n                        break;\n                    case 'Shift':\n                        if ((i === 0 || (axis.isInversed && i === len - 1)) && options.x < rect.x) {\n                            intervalLength -= (rect.x - options.x);\n                            options.x = pointX = rect.x;\n                        }\n                        else if ((i === len - 1 || (axis.isInversed && i === 0)) && ((options.x + width) > rect.x + rect.width)) {\n                            if (elementSize.width > intervalLength && axis.labelIntersectAction === 'Trim') {\n                                intervalLength -= (options.x + width - (rect.x + rect.width));\n                            }\n                            else {\n                                intervalLength = width;\n                            }\n                            options.x = pointX = rect.x + rect.width - intervalLength;\n                        }\n                        break;\n                }\n            }\n            options.text = this.findAxisLabel(axis, label.text, intervalLength);\n            if (axis.angle % 360 === 0 && axis.labelIntersectAction === 'Hide' && i !== 0 &&\n                (!axis.isInversed ? options.x <= previousEnd : options.x + width >= previousEnd)) {\n                continue;\n            }\n            previousEnd = axis.isInversed ? options.x : options.x + width;\n            if (axis.angle !== 0) {\n                angle = (axis.angle > 360) ? axis.angle % 360 : axis.angle;\n                rotateSize = rotateTextSize(axis.labelStyle, label.text, angle, chart);\n                diffHeight = islabelInside ? rotateSize.height :\n                    axis.maxLabelSize.height - Math.ceil(rotateSize.height - elementSize.height);\n                yLocation = axis.opposedPosition ? diffHeight / 2 : -diffHeight / 2;\n                options.transform = 'rotate(' + angle + ',' + (pointX + width / 2 + anglePadding) + ','\n                    + (pointY + yLocation) + ')';\n                options.y += yLocation;\n            }\n            textElement(options, axis.labelStyle, axis.labelStyle.color || chart.themeStyle.axisLabel, labelElement, (axis.opposedPosition !== (axis.labelPosition === 'Inside'))).setAttribute('style', 'cursor: default');\n        }\n        if (!chart.delayRedraw) {\n            parent.appendChild(labelElement);\n        }\n        else if (axis.visible) {\n            this.createZoomingLabel(this.chart, labelElement, axis, index, rect);\n        }\n    }\n    /**\n     * To render the axis label border.\n     * @return {void}\n     * @private\n     */\n    drawXAxisBorder(axis, index, parent, axisRect) {\n        if (axis.border.width > 0) {\n            let startX;\n            let startY = axisRect.y;\n            let padding = 10;\n            let pointX;\n            let gap = (axisRect.width / axis.visibleRange.delta) * (axis.valueType === 'DateTime' ? axis.dateTimeInterval\n                : axis.visibleRange.interval);\n            let endX;\n            let length = axis.maxLabelSize.height +\n                ((axis.tickPosition === axis.labelPosition) ? axis.majorTickLines.height : 0);\n            let labelBorder = '';\n            let ticksbwtLabel = (axis.valueType === 'Category' && axis.labelPlacement === 'BetweenTicks') ? -0.5 : 0;\n            let endY = ((axis.opposedPosition && axis.labelPosition === 'Inside') ||\n                (!axis.opposedPosition && axis.labelPosition === 'Outside')) ?\n                (axisRect.y + length + padding) : (axisRect.y - length - padding);\n            for (let i = 0; i < axis.visibleLabels.length; i++) {\n                pointX = valueToCoefficient(axis.visibleLabels[i].value + ticksbwtLabel, axis);\n                pointX = (axis.isInversed ? (1 - pointX) : pointX) * axisRect.width;\n                if (axis.valueType === 'Category' && axis.labelPlacement === 'BetweenTicks') {\n                    startX = pointX + axisRect.x;\n                    endX = pointX + (gap) + axisRect.x;\n                }\n                else {\n                    startX = pointX - gap / 2 + axisRect.x;\n                    endX = pointX + gap / 2 + axisRect.x;\n                }\n                switch (axis.border.type) {\n                    case 'Rectangle':\n                    case 'WithoutTopBorder':\n                        if (startX < axisRect.x) {\n                            labelBorder += ('M' + ' ' + axisRect.x + ' ' + endY + ' ' + 'L' + ' ' + endX + ' ' + endY + ' ');\n                        }\n                        else if (Math.floor(endX) > axisRect.width + axisRect.x) {\n                            labelBorder += ('M' + ' ' + startX + ' ' + startY + ' ' + 'L' + ' ' + startX + ' ' + endY + ' ' +\n                                'L' + ' ' + (axisRect.width + axisRect.x) + ' ' + endY + ' ');\n                        }\n                        else {\n                            labelBorder += ('M' + ' ' + startX + ' ' + startY + ' ' + 'L' + ' ' + startX + ' ' +\n                                endY + ' ' + 'L' + ' ' + endX + ' ' + endY + ' ');\n                            if (i === axis.visibleLabels.length - 1) {\n                                labelBorder += ('M' + ' ' + endX + ' ' + startY + ' ' + 'L' + ' ' + endX + ' ' + endY + ' ' +\n                                    'M ' + endX + ' ' + endY + ' L ' + (axisRect.width + axisRect.x) + ' ' + endY);\n                            }\n                        }\n                        break;\n                    case 'WithoutTopandBottomBorder':\n                        if (!(startX < axisRect.x) && !(Math.floor(endX) > axisRect.width + axisRect.x)) {\n                            labelBorder += ('M' + ' ' + startX + ' ' + startY + ' ' + 'L' + ' ' + startX + ' ' + endY + ' ' +\n                                'M ' + endX + ' ' + startY + ' L ' + endX + ' ' + endY);\n                        }\n                        break;\n                }\n            }\n            labelBorder += (axis.border.type === 'Rectangle' ? ('M ' + ' ' + axisRect.x + ' ' + startY + 'L' + ' ' +\n                (axisRect.x + axisRect.width) + ' ' + startY) : '');\n            if (labelBorder !== '') {\n                this.createAxisBorderElement(axis, index, labelBorder, parent);\n            }\n        }\n        if (this.chart.multiLevelLabelModule && axis.multiLevelLabels.length > 0) {\n            this.chart.multiLevelLabelModule.renderXAxisMultiLevelLabels(axis, index, parent, axisRect);\n        }\n    }\n    /**\n     * To create border element for axis.\n     * @return {void}\n     * @private\n     */\n    createAxisBorderElement(axis, index, labelBorder, parent) {\n        let borderElement = this.chart.renderer.drawPath(new PathOption(this.chart.element.id + '_BorderLine_' + index, 'transparent', axis.border.width, axis.border.color || this.chart.themeStyle.axisLine, 1, '', labelBorder));\n        borderElement.setAttribute('style', 'pointer-events: none');\n        parent.appendChild(borderElement);\n    }\n    findAxisLabel(axis, label, width) {\n        switch (axis.labelIntersectAction) {\n            case 'Trim':\n                return textTrim(width, label, axis.labelStyle);\n            default:\n                return label;\n        }\n    }\n    drawXAxisTitle(axis, index, parent, rect) {\n        let chart = this.chart;\n        let elementSize = measureText(axis.title, axis.titleStyle);\n        let padding = (axis.tickPosition === 'Inside' ? 0 : axis.majorTickLines.height + this.padding) +\n            (axis.labelPosition === 'Inside' ? 0 :\n                axis.maxLabelSize.height + axis.multiLevelLabelHeight + this.padding);\n        padding = axis.opposedPosition ? -(padding + elementSize.height / 4) : (padding + (3 * elementSize.height / 4));\n        let options = new TextOption(chart.element.id + '_AxisTitle_' + index, rect.x + rect.width / 2, rect.y + padding, 'middle', axis.title);\n        let element = textElement(options, axis.titleStyle, axis.titleStyle.color || chart.themeStyle.axisTitle, parent);\n        element.setAttribute('aria-label', axis.description || axis.title);\n        element.setAttribute('tabindex', axis.tabIndex.toString());\n    }\n    renderTickLine(axis, index, majorTick, minorTick, parent) {\n        let options;\n        let chart = this.chart;\n        if (axis.majorTickLines.width > 0 && axis.visible) {\n            options = new PathOption(chart.element.id + '_MajorTickLine_' + index, 'transparent', axis.majorTickLines.width, axis.majorTickLines.color || chart.themeStyle.majorTickLine, null, null, majorTick);\n            this.htmlObject = chart.renderer.drawPath(options);\n            parent.appendChild(this.htmlObject);\n        }\n        if (axis.minorTickLines.width > 0 && axis.visible) {\n            options = new PathOption(chart.element.id + '_MinorTickLine_' + index, 'transparent', axis.minorTickLines.width, axis.minorTickLines.color || chart.themeStyle.minorTickLine, null, null, minorTick);\n            this.htmlObject = chart.renderer.drawPath(options);\n            parent.appendChild(this.htmlObject);\n        }\n    }\n    renderGridLine(axis, index, majorGrid, minorGird) {\n        let chart = this.chart;\n        let options;\n        if (axis.majorGridLines.width > 0) {\n            options = new PathOption(chart.element.id + '_MajorGridLine_' + index, 'transparent', axis.majorGridLines.width, axis.majorGridLines.color || chart.themeStyle.majorGridLine, null, axis.majorGridLines.dashArray, majorGrid);\n            this.htmlObject = chart.renderer.drawPath(options);\n            this.element.appendChild(this.htmlObject);\n        }\n        if (axis.minorGridLines.width > 0) {\n            options = new PathOption(chart.element.id + '_MinorGridLine_' + index, 'transparent', axis.minorGridLines.width, axis.minorGridLines.color || chart.themeStyle.minorGridLine, null, axis.minorGridLines.dashArray, minorGird);\n            this.htmlObject = chart.renderer.drawPath(options);\n            this.element.appendChild(this.htmlObject);\n        }\n    }\n    findParentNode(chart, label, axis, index) {\n        if (axis.crossAt === null) {\n            return document.getElementById(chart.element.id + 'AxisGroup' + index + 'Inside');\n        }\n        if (document.getElementById(chart.element.id + 'AxisGroup' + index + 'Inside').contains(document.getElementById(label.id))) {\n            return document.getElementById(chart.element.id + 'AxisGroup' + index + 'Inside');\n        }\n        else {\n            return document.getElementById(chart.element.id + 'AxisGroup' + index + 'Outside');\n        }\n    }\n    createZoomingLabel(chart, labelElement, axis, index, rect) {\n        let parentNode = this.findParentNode(chart, labelElement, axis, index);\n        labelElement.setAttribute('opacity', '0.3');\n        let zoomElement = chart.renderer.createGroup({\n            id: chart.element.id + 'AxisLabels_Zoom' + index\n        });\n        zoomElement = createZoomingLabels(chart, axis, zoomElement, index, axis.orientation === 'Vertical', rect);\n        parentNode.replaceChild(labelElement, document.getElementById(labelElement.id));\n        if (getElement(chart.element.id + 'AxisLabels_Zoom' + index)) {\n            parentNode.replaceChild(zoomElement, document.getElementById(zoomElement.id));\n        }\n        else {\n            parentNode.appendChild(zoomElement);\n        }\n    }\n}\n\n/**\n * To get the data on mouse move.\n * @private\n */\nclass ChartData {\n    /**\n     * Constructor for the data.\n     * @private\n     */\n    constructor(chart) {\n        /** @private */\n        this.currentPoints = [];\n        /** @private */\n        this.previousPoints = [];\n        this.chart = chart;\n        this.lierIndex = 0;\n    }\n    /**\n     * Method to get the Data.\n     * @private\n     */\n    getData() {\n        let chart = this.chart;\n        let point = null;\n        let series = null;\n        let width;\n        let height;\n        for (let len = chart.visibleSeries.length, i = len - 1; i >= 0; i--) {\n            series = chart.visibleSeries[i];\n            width = (series.type === 'Scatter' || series.drawType === 'Scatter' || (!series.isRectSeries && series.marker.visible))\n                ? (series.marker.height + 5) / 2 : 0;\n            height = (series.type === 'Scatter' || series.drawType === 'Scatter' || (!series.isRectSeries && series.marker.visible))\n                ? (series.marker.width + 5) / 2 : 0;\n            if (series.visible && withInBounds(chart.mouseX, chart.mouseY, series.clipRect, width, height)) {\n                point = this.getRectPoint(series, series.clipRect, chart.mouseX, chart.mouseY);\n            }\n            if (point) {\n                return new PointData(point, series);\n            }\n        }\n        return new PointData(point, series);\n    }\n    isSelected(chart) {\n        return (chart.selectionMode.indexOf('Drag') > -1 && chart.selectionModule && chart.selectionModule.rectPoints !== null);\n    }\n    getRectPoint(series, rect, x, y) {\n        let fromCenterX;\n        let fromCenterY;\n        let clickAngle;\n        let arcAngle = 0;\n        let startAngle;\n        let endAngle;\n        let distanceFromCenter;\n        for (let point of series.points) {\n            if (!point.regionData) {\n                if (!point.regions || !point.regions.length) {\n                    continue;\n                }\n            }\n            if (point.regionData && this.chart.chartAreaType === 'PolarRadar' && series.drawType.indexOf('Column') > -1) {\n                fromCenterX = x - (series.clipRect.width / 2 + series.clipRect.x);\n                fromCenterY = y - (series.clipRect.height / 2 + series.clipRect.y);\n                arcAngle = 2 * Math.PI * (point.regionData.currentXPosition < 0 ? 1 + point.regionData.currentXPosition\n                    : point.regionData.currentXPosition);\n                clickAngle = (Math.atan2(fromCenterY, fromCenterX) + 0.5 * Math.PI - arcAngle) % (2 * Math.PI);\n                clickAngle = clickAngle < 0 ? 2 * Math.PI + clickAngle : clickAngle;\n                clickAngle = clickAngle + 2 * Math.PI * series.chart.primaryXAxis.startAngle;\n                startAngle = point.regionData.startAngle;\n                startAngle -= arcAngle;\n                startAngle = startAngle < 0 ? 2 * Math.PI + startAngle : startAngle;\n                endAngle = point.regionData.endAngle;\n                endAngle -= arcAngle;\n                endAngle = endAngle < 0 ? 2 * Math.PI + endAngle : endAngle;\n                distanceFromCenter = Math.sqrt(Math.pow(Math.abs(fromCenterX), 2) + Math.pow(Math.abs(fromCenterY), 2));\n                if (clickAngle >= startAngle && clickAngle <= endAngle &&\n                    (((distanceFromCenter >= point.regionData.innerRadius && distanceFromCenter <= point.regionData.radius) ||\n                        (distanceFromCenter <= point.regionData.innerRadius && distanceFromCenter >= point.regionData.radius))\n                        && distanceFromCenter <= series.chart.radius)) {\n                    return point;\n                }\n            }\n            else if (this.checkRegionContainsPoint(point.regions, rect, x, y)) {\n                return point;\n            }\n        }\n        return null;\n    }\n    /**\n     * Checks whether the region contains a point\n     */\n    checkRegionContainsPoint(regionRect, rect, x, y) {\n        return regionRect.some((region, index) => {\n            this.lierIndex = index;\n            return withInBounds(x, y, new Rect((this.chart.chartAreaType === 'Cartesian' ? rect.x : 0) + region.x, (this.chart.chartAreaType === 'Cartesian' ? rect.y : 0) + region.y, region.width, region.height));\n        });\n    }\n    getClosest(series, value) {\n        let xData = series.xData;\n        let closest;\n        if (value >= series.xMin - 0.5 && value <= series.xMax + 0.5) {\n            for (let data of xData) {\n                if (closest == null || Math.abs(data - value) < Math.abs(closest - value)) {\n                    closest = data;\n                }\n            }\n        }\n        return closest;\n    }\n    getClosestX(chart, series) {\n        let value;\n        let rect = series.clipRect;\n        if (!chart.requireInvertedAxis) {\n            value = getValueXByPoint(chart.mouseX - rect.x, rect.width, series.xAxis);\n        }\n        else {\n            value = getValueYByPoint(chart.mouseY - rect.y, rect.height, series.xAxis);\n        }\n        let closest = this.getClosest(series, value);\n        for (let point of series.points) {\n            if (closest === point.xValue && point.visible) {\n                return new PointData(point, series);\n            }\n        }\n        return null;\n    }\n}\n\nvar __decorate$4 = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n/**\n * Configures the data label in the series.\n */\nclass DataLabelSettings extends ChildProperty {\n}\n__decorate$4([\n    Property(false)\n], DataLabelSettings.prototype, \"visible\", void 0);\n__decorate$4([\n    Property(null)\n], DataLabelSettings.prototype, \"name\", void 0);\n__decorate$4([\n    Property('transparent')\n], DataLabelSettings.prototype, \"fill\", void 0);\n__decorate$4([\n    Property(1)\n], DataLabelSettings.prototype, \"opacity\", void 0);\n__decorate$4([\n    Property('Auto')\n], DataLabelSettings.prototype, \"position\", void 0);\n__decorate$4([\n    Property(5)\n], DataLabelSettings.prototype, \"rx\", void 0);\n__decorate$4([\n    Property(5)\n], DataLabelSettings.prototype, \"ry\", void 0);\n__decorate$4([\n    Property('Center')\n], DataLabelSettings.prototype, \"alignment\", void 0);\n__decorate$4([\n    Complex({ width: null, color: null }, Border)\n], DataLabelSettings.prototype, \"border\", void 0);\n__decorate$4([\n    Complex({ left: 5, right: 5, top: 5, bottom: 5 }, Margin)\n], DataLabelSettings.prototype, \"margin\", void 0);\n__decorate$4([\n    Complex({ size: '11px', color: null }, Font)\n], DataLabelSettings.prototype, \"font\", void 0);\n__decorate$4([\n    Property(null)\n], DataLabelSettings.prototype, \"template\", void 0);\n/**\n *  Configures the marker in the series.\n */\nclass MarkerSettings extends ChildProperty {\n}\n__decorate$4([\n    Property(false)\n], MarkerSettings.prototype, \"visible\", void 0);\n__decorate$4([\n    Property('Circle')\n], MarkerSettings.prototype, \"shape\", void 0);\n__decorate$4([\n    Property('')\n], MarkerSettings.prototype, \"imageUrl\", void 0);\n__decorate$4([\n    Property(5)\n], MarkerSettings.prototype, \"height\", void 0);\n__decorate$4([\n    Property(5)\n], MarkerSettings.prototype, \"width\", void 0);\n__decorate$4([\n    Complex({ width: 2, color: null }, Border)\n], MarkerSettings.prototype, \"border\", void 0);\n__decorate$4([\n    Property(null)\n], MarkerSettings.prototype, \"fill\", void 0);\n__decorate$4([\n    Property(1)\n], MarkerSettings.prototype, \"opacity\", void 0);\n__decorate$4([\n    Complex({}, DataLabelSettings)\n], MarkerSettings.prototype, \"dataLabel\", void 0);\n/**\n * Points model for the series.\n * @private\n */\nclass Points {\n    constructor() {\n        this.symbolLocations = null;\n        this.regions = null;\n        this.regionData = null;\n        this.marker = {\n            visible: true\n        };\n    }\n}\n/**\n * Defines the behavior of the Trendlines\n */\nclass Trendline extends ChildProperty {\n    constructor() {\n        super(...arguments);\n        /** @private */\n        this.clipRect = new Rect(0, 0, 0, 0);\n    }\n    /** @private */\n    setDataSource(series, chart) {\n        if (series) {\n            this.points = series.points;\n        }\n        let type = firstToLowerCase(this.type);\n        chart.trendLineModule.initDataSource(this, chart);\n        chart.visibleSeriesCount++;\n    }\n}\n__decorate$4([\n    Property('')\n], Trendline.prototype, \"name\", void 0);\n__decorate$4([\n    Property('Linear')\n], Trendline.prototype, \"type\", void 0);\n__decorate$4([\n    Property(2)\n], Trendline.prototype, \"period\", void 0);\n__decorate$4([\n    Property(2)\n], Trendline.prototype, \"polynomialOrder\", void 0);\n__decorate$4([\n    Property(0)\n], Trendline.prototype, \"backwardForecast\", void 0);\n__decorate$4([\n    Property(0)\n], Trendline.prototype, \"forwardForecast\", void 0);\n__decorate$4([\n    Complex({}, Animation$1)\n], Trendline.prototype, \"animation\", void 0);\n__decorate$4([\n    Complex({}, MarkerSettings)\n], Trendline.prototype, \"marker\", void 0);\n__decorate$4([\n    Property(true)\n], Trendline.prototype, \"enableTooltip\", void 0);\n__decorate$4([\n    Property(null)\n], Trendline.prototype, \"intercept\", void 0);\n__decorate$4([\n    Property('')\n], Trendline.prototype, \"fill\", void 0);\n__decorate$4([\n    Property(1)\n], Trendline.prototype, \"width\", void 0);\n__decorate$4([\n    Property('SeriesType')\n], Trendline.prototype, \"legendShape\", void 0);\n/**\n * Configures Error bar in series.\n */\nclass ErrorBarCapSettings extends ChildProperty {\n}\n__decorate$4([\n    Property(1)\n], ErrorBarCapSettings.prototype, \"width\", void 0);\n__decorate$4([\n    Property(10)\n], ErrorBarCapSettings.prototype, \"length\", void 0);\n__decorate$4([\n    Property(null)\n], ErrorBarCapSettings.prototype, \"color\", void 0);\n__decorate$4([\n    Property(1)\n], ErrorBarCapSettings.prototype, \"opacity\", void 0);\nclass ChartSegment extends ChildProperty {\n}\n__decorate$4([\n    Property(null)\n], ChartSegment.prototype, \"value\", void 0);\n__decorate$4([\n    Property(null)\n], ChartSegment.prototype, \"color\", void 0);\n__decorate$4([\n    Property('0')\n], ChartSegment.prototype, \"dashArray\", void 0);\nclass ErrorBarSettings extends ChildProperty {\n}\n__decorate$4([\n    Property(false)\n], ErrorBarSettings.prototype, \"visible\", void 0);\n__decorate$4([\n    Property('Fixed')\n], ErrorBarSettings.prototype, \"type\", void 0);\n__decorate$4([\n    Property('Both')\n], ErrorBarSettings.prototype, \"direction\", void 0);\n__decorate$4([\n    Property('Vertical')\n], ErrorBarSettings.prototype, \"mode\", void 0);\n__decorate$4([\n    Property(null)\n], ErrorBarSettings.prototype, \"color\", void 0);\n__decorate$4([\n    Property(1)\n], ErrorBarSettings.prototype, \"verticalError\", void 0);\n__decorate$4([\n    Property(1)\n], ErrorBarSettings.prototype, \"width\", void 0);\n__decorate$4([\n    Property(1)\n], ErrorBarSettings.prototype, \"horizontalError\", void 0);\n__decorate$4([\n    Property(3)\n], ErrorBarSettings.prototype, \"verticalPositiveError\", void 0);\n__decorate$4([\n    Property(3)\n], ErrorBarSettings.prototype, \"verticalNegativeError\", void 0);\n__decorate$4([\n    Property(1)\n], ErrorBarSettings.prototype, \"horizontalPositiveError\", void 0);\n__decorate$4([\n    Property(1)\n], ErrorBarSettings.prototype, \"horizontalNegativeError\", void 0);\n__decorate$4([\n    Complex(null, ErrorBarCapSettings)\n], ErrorBarSettings.prototype, \"errorBarCap\", void 0);\n/**\n * Defines the common behavior of Series and Technical Indicators\n */\nclass SeriesBase extends ChildProperty {\n    constructor() {\n        /**\n         * The DataSource field that contains the x value.\n         * It is applicable for series and technical indicators\n         * @default ''\n         */\n        super(...arguments);\n        /** @private */\n        this.currentViewData = [];\n        /** @private */\n        this.clipRect = new Rect(0, 0, 0, 0);\n        /** @private */\n        this.seriesType = 'XY';\n    }\n    /**\n     * Process data for the series.\n     * @hidden\n     */\n    processJsonData() {\n        let i = 0;\n        let len = Object.keys(this.currentViewData).length;\n        let point = new Points();\n        let textMappingName = this instanceof Series && this.marker.dataLabel.name ?\n            this.marker.dataLabel.name : '';\n        if (this instanceof Series && this.type === 'Waterfall') {\n            this.chart[firstToLowerCase(this.type) + 'SeriesModule'].\n                processWaterfallData(this.currentViewData, this);\n        }\n        this.points = [];\n        this.xMin = Infinity;\n        this.xMax = -Infinity;\n        this.yMin = Infinity;\n        this.yMax = -Infinity;\n        this.sizeMax = -Infinity;\n        this.getSeriesType();\n        if (this.xAxis.valueType === 'Category') {\n            while (i < len) {\n                point = this.dataPoint(i, textMappingName);\n                this.pushCategoryData(point, i, point.x);\n                this.pushData(point, i);\n                this.setEmptyPoint(point, i);\n                i++;\n            }\n        }\n        else if (this.xAxis.valueType.indexOf('DateTime') > -1) {\n            let option = {\n                skeleton: 'full',\n                type: 'dateTime'\n            };\n            let dateParser = this.chart.intl.getDateParser(option);\n            let dateFormatter = this.chart.intl.getDateFormat(option);\n            while (i < len) {\n                point = this.dataPoint(i, textMappingName);\n                point.x = new Date(DataUtil.parse.parseJson({ val: point.x }).val);\n                if (this.xAxis.valueType === 'DateTime') {\n                    point.xValue = Date.parse(dateParser(dateFormatter(point.x)));\n                }\n                else {\n                    this.pushCategoryData(point, i, Date.parse(dateParser(dateFormatter(point.x))).toString());\n                }\n                this.pushData(point, i);\n                this.setEmptyPoint(point, i);\n                i++;\n            }\n        }\n        else {\n            while (i < len) {\n                point = this.dataPoint(i, textMappingName);\n                point.xValue = point.x;\n                this.pushData(point, i);\n                this.setEmptyPoint(point, i);\n                i++;\n            }\n        }\n        if (this instanceof Series) {\n            if (this.type.indexOf('Spline') > -1 || (this.drawType.indexOf('Spline') > -1 && this.chart.chartAreaType === 'PolarRadar')) {\n                let isArea = (this.type.indexOf('Area') > -1 || this.drawType === 'Area');\n                this.chart['spline' + (isArea ? 'Area' : '') + 'SeriesModule'].findSplinePoint(this);\n            }\n        }\n    }\n    pushData(point, i) {\n        point.index = i;\n        point.yValue = point.y;\n        // To find the min, max for the axis range.\n        this.xMin = Math.min(this.xMin, point.xValue);\n        this.xMax = Math.max(this.xMax, point.xValue);\n        this.xData.push(point.xValue);\n    }\n    /** @private */\n    dataPoint(i, textMappingName) {\n        let point;\n        this.points[i] = new Points();\n        point = this.points[i];\n        let currentViewData = this.currentViewData;\n        point.x = getValue(this.xName, currentViewData[i]);\n        point.high = getValue(this.high, currentViewData[i]);\n        point.low = getValue(this.low, currentViewData[i]);\n        point.open = getValue(this.open, currentViewData[i]);\n        point.close = getValue(this.close, currentViewData[i]);\n        point.volume = getValue(this.volume, currentViewData[i]);\n        point.interior = getValue(this.pointColorMapping, currentViewData[i]);\n        if (this instanceof Series) {\n            point.y = getValue(this.yName, currentViewData[i]);\n            point.size = getValue(this.size, currentViewData[i]);\n            point.text = getValue(textMappingName, currentViewData[i]);\n        }\n        return point;\n    }\n    /**\n     * To set empty point value based on empty point mode\n     * @private\n     */\n    setEmptyPoint(point, i) {\n        if (!this.findVisibility(point)) {\n            point.visible = true;\n            return null;\n        }\n        point.isEmpty = true;\n        let mode = this instanceof Series ? this.emptyPointSettings.mode : 'Drop';\n        switch (mode) {\n            case 'Zero':\n                point.visible = true;\n                if (this instanceof Series && this.seriesType.indexOf('HighLow') > -1) {\n                    point.high = point.low = 0;\n                    if (this.seriesType.indexOf('HighLowOpenClose') > -1) {\n                        point.open = point.close = 0;\n                    }\n                }\n                else {\n                    point.y = point.yValue = this.yData[i] = 0;\n                }\n                break;\n            case 'Average':\n                if (this instanceof Series) {\n                    if (this.seriesType.indexOf('HighLow') > -1) {\n                        point.high = (isNullOrUndefined(point.high) || isNaN(+point.high)) ? this.getAverage(this.high, i) : point.high;\n                        point.low = (isNullOrUndefined(point.low) || isNaN(+point.low)) ? this.getAverage(this.low, i) : point.low;\n                        if (this.seriesType.indexOf('HighLowOpenClose') > -1) {\n                            point.open = (isNullOrUndefined(point.open) || isNaN(+point.open)) ? this.getAverage(this.open, i) : point.open;\n                            point.close = (isNullOrUndefined(point.close) || isNaN(+point.close)) ? this.getAverage(this.close, i) :\n                                point.close;\n                        }\n                    }\n                    else {\n                        point.y = point.yValue = this.yData[i] = this.getAverage(this.yName, i);\n                    }\n                }\n                point.visible = true;\n                break;\n            case 'Drop':\n            case 'Gap':\n                this.yData[i] = null;\n                point.visible = false;\n                break;\n        }\n    }\n    findVisibility(point) {\n        let type = this instanceof Series ? this.seriesType : 'HighLowOpenClose';\n        let yValues;\n        switch (type) {\n            case 'XY':\n                this.setXYMinMax(point.yValue);\n                this.yData.push(point.yValue);\n                if (this instanceof Series && this.type === 'Bubble') {\n                    this.sizeMax = Math.max(this.sizeMax, (isNullOrUndefined(point.size) || isNaN(+point.size)) ? this.sizeMax\n                        : point.size);\n                }\n                return isNullOrUndefined(point.x) || (isNullOrUndefined(point.y) || isNaN(+point.y));\n            case 'HighLow':\n                this.setHiloMinMax(point.high, point.low);\n                return isNullOrUndefined(point.x) || (isNullOrUndefined(point.low) || isNaN(+point.low)) ||\n                    (isNullOrUndefined(point.high) || isNaN(+point.high));\n            case 'HighLowOpenClose':\n                this.setHiloMinMax(point.high, point.low);\n                return isNullOrUndefined(point.x) || (isNullOrUndefined(point.low) || isNaN(+point.low)) ||\n                    (isNullOrUndefined(point.open) || isNaN(+point.open)) || (isNullOrUndefined(point.close) || isNaN(+point.close))\n                    || (isNullOrUndefined(point.high) || isNaN(+point.high));\n            case 'BoxPlot':\n                yValues = (point.y || [null]).filter((value) => {\n                    return !isNullOrUndefined(value) && !isNaN(value);\n                }).sort((a, b) => {\n                    return a - b;\n                });\n                point.y = yValues;\n                this.yMin = Math.min(this.yMin, Math.min(...yValues));\n                this.yMax = Math.max(this.yMax, Math.max(...yValues));\n                return !yValues.length;\n        }\n    }\n    /**\n     * To get Y min max for the provided point seriesType XY\n     */\n    setXYMinMax(yValue) {\n        this.yMin = Math.min(this.yMin, (isNullOrUndefined(yValue) || isNaN(yValue)) ? this.yMin : yValue);\n        this.yMax = Math.max(this.yMax, (isNullOrUndefined(yValue) || isNaN(yValue)) ? this.yMax : yValue);\n    }\n    /**\n     * To get Y min max for the provided point seriesType XY\n     */\n    setHiloMinMax(high, low) {\n        this.yMin = Math.min(this.yMin, Math.min((isNullOrUndefined(low) || isNaN(low)) ? this.yMin : low, (isNullOrUndefined(high) || isNaN(high)) ? this.yMin : high));\n        this.yMax = Math.max(this.yMax, Math.max((isNullOrUndefined(low) || isNaN(low)) ? this.yMax : low, (isNullOrUndefined(high) || isNaN(high)) ? this.yMax : high));\n    }\n    /**\n     * Finds the type of the series\n     * @private\n     */\n    getSeriesType() {\n        let type;\n        if (this instanceof Series) {\n            let seriesType = this.chart.chartAreaType === 'PolarRadar' ? this.drawType : this.type;\n            if (seriesType) {\n                switch (seriesType) {\n                    case 'RangeColumn':\n                    case 'RangeArea':\n                    case 'Hilo':\n                        type = 'HighLow';\n                        break;\n                    case 'HiloOpenClose':\n                    case 'Candle':\n                        type = 'HighLowOpenClose';\n                        break;\n                    case 'BoxAndWhisker':\n                        type = 'BoxPlot';\n                        break;\n                    default:\n                        type = 'XY';\n                }\n            }\n        }\n        this.seriesType = type;\n    }\n    /** @private */\n    pushCategoryData(point, index, pointX) {\n        if (!this.xAxis.isIndexed) {\n            if (this.xAxis.labels.indexOf(pointX) < 0) {\n                this.xAxis.labels.push(pointX);\n            }\n            point.xValue = this.xAxis.labels.indexOf(pointX);\n        }\n        else {\n            this.xAxis.labels[index] ? this.xAxis.labels[index] += ', ' + pointX :\n                this.xAxis.labels.push(pointX);\n            point.xValue = index;\n        }\n    }\n    /**\n     * To find average of given property\n     */\n    getAverage(member, i, data = this.currentViewData) {\n        let previous = data[i - 1] ? (data[i - 1][member] || 0) : 0;\n        let next = data[i + 1] ? (data[i + 1][member] || 0) : 0;\n        return (previous + next) / 2;\n    }\n    /**\n     * To find the control points for spline.\n     * @return {void}\n     * @private\n     */\n    refreshDataManager(chart) {\n        this.chart = chart;\n        if (isNullOrUndefined(this.query) && !isNullOrUndefined(this.dataSource)) {\n            this.dataManagerSuccess({ result: this.dataSource, count: this.dataSource.length }, chart, false);\n            return;\n        }\n        let dataManager = this.dataModule.getData(this.dataModule.generateQuery().requiresCount());\n        dataManager.then((e) => this.dataManagerSuccess(e, chart));\n    }\n    dataManagerSuccess(e, chart, isRemoteData = true) {\n        this.currentViewData = e.result !== '' ? e.result : [];\n        if (this instanceof Series) {\n            let argsData = {\n                name: seriesRender, series: this, data: this.currentViewData, fill: this.interior\n            };\n            this.chart.trigger(seriesRender, argsData);\n            this.interior = argsData.fill;\n            this.currentViewData = argsData.data;\n        }\n        this.processJsonData();\n        this.recordsCount = e.count;\n        this.refreshChart(isRemoteData);\n    }\n    refreshChart(isRemoteData) {\n        let chart = this.chart;\n        if (this instanceof Series) {\n            chart.visibleSeriesCount += isRemoteData ? 1 : 0;\n        }\n        chart.refreshTechnicalIndicator(this);\n        if (this instanceof Series && this.category !== 'TrendLine') {\n            for (let trendline of this.trendlines) {\n                trendline.setDataSource(this, chart);\n            }\n        }\n        //if (chart.visibleSeries.length === (chart.visibleSeriesCount - chart.indicators.length)) {\n        if (chart.visibleSeries.length === (chart.visibleSeriesCount)) {\n            chart.refreshBound();\n            chart.trigger('loaded', { chart: chart });\n        }\n        if (this instanceof Series) {\n            chart.visibleSeriesCount += isRemoteData ? 0 : 1;\n        }\n    }\n}\n__decorate$4([\n    Property('')\n], SeriesBase.prototype, \"xName\", void 0);\n__decorate$4([\n    Property('')\n], SeriesBase.prototype, \"high\", void 0);\n__decorate$4([\n    Property('')\n], SeriesBase.prototype, \"low\", void 0);\n__decorate$4([\n    Property('')\n], SeriesBase.prototype, \"open\", void 0);\n__decorate$4([\n    Property('')\n], SeriesBase.prototype, \"close\", void 0);\n__decorate$4([\n    Property('')\n], SeriesBase.prototype, \"volume\", void 0);\n__decorate$4([\n    Property('')\n], SeriesBase.prototype, \"pointColorMapping\", void 0);\n__decorate$4([\n    Property(null)\n], SeriesBase.prototype, \"xAxisName\", void 0);\n__decorate$4([\n    Property(null)\n], SeriesBase.prototype, \"yAxisName\", void 0);\n__decorate$4([\n    Complex(null, Animation$1)\n], SeriesBase.prototype, \"animation\", void 0);\n__decorate$4([\n    Property(null)\n], SeriesBase.prototype, \"fill\", void 0);\n__decorate$4([\n    Property(1)\n], SeriesBase.prototype, \"width\", void 0);\n__decorate$4([\n    Property('0')\n], SeriesBase.prototype, \"dashArray\", void 0);\n__decorate$4([\n    Property('')\n], SeriesBase.prototype, \"dataSource\", void 0);\n__decorate$4([\n    Property()\n], SeriesBase.prototype, \"query\", void 0);\n__decorate$4([\n    Collection([], ChartSegment)\n], SeriesBase.prototype, \"segments\", void 0);\n__decorate$4([\n    Property('X')\n], SeriesBase.prototype, \"segmentAxis\", void 0);\n/**\n *  Configures the series in charts.\n */\nclass Series extends SeriesBase {\n    // tslint:disable-next-line:no-any\n    constructor(parent, propName, defaultValue, isArray) {\n        super(parent, propName, defaultValue, isArray);\n        this.visibleSeriesCount = 0;\n        /** @private */\n        this.category = 'Series';\n        /** @private */\n        this.isRectSeries = false;\n        /** @private */\n        this.drawPoints = [];\n        /** @private */\n        this.delayedAnimation = false;\n    }\n    /**\n     * Refresh the axis label.\n     * @return {boolean}\n     * @private\n     */\n    refreshAxisLabel() {\n        if (this.xAxis.valueType !== 'Category') {\n            return null;\n        }\n        this.xAxis.labels = [];\n        for (let item of this.xAxis.series) {\n            if (item.visible) {\n                item.xMin = Infinity;\n                item.xMax = -Infinity;\n                for (let point of item.points) {\n                    item.pushCategoryData(point, point.index, point.x);\n                    item.xMin = Math.min(item.xMin, point.xValue);\n                    item.xMax = Math.max(item.xMax, point.xValue);\n                }\n            }\n        }\n    }\n    /**\n     * To get the series collection.\n     * @return {void}\n     * @private\n     */\n    findSeriesCollection(column, row, isStack) {\n        let seriesCollection = [];\n        for (let rowAxis of row.axes) {\n            for (let rowSeries of rowAxis.series) {\n                for (let axis of column.axes) {\n                    for (let series of axis.series) {\n                        if (series === rowSeries && series.visible && this.rectSeriesInChart(series, isStack)) {\n                            seriesCollection.push(series);\n                        }\n                    }\n                }\n            }\n        }\n        return seriesCollection;\n    }\n    /**\n     * To get the column type series.\n     * @return {void}\n     * @private\n     */\n    rectSeriesInChart(series, isStack) {\n        let type = (series.type).toLowerCase();\n        return (type.indexOf('column') !== -1 || type.indexOf('bar') !== -1 ||\n            type.indexOf('hiloopenclose') !== -1 || type.indexOf('candle') !== -1 ||\n            type.indexOf('hilo') !== -1 || series.drawType.indexOf('Column') !== -1 ||\n            type.indexOf('waterfall') !== -1 || type.indexOf('boxandwhisker') !== -1 || isStack);\n    }\n    /**\n     * To calculate the stacked values.\n     * @return {void}\n     * @private\n     */\n    calculateStackedValue(isStacking100, chart) {\n        for (let columnItem of chart.columns) {\n            for (let item of chart.rows) {\n                this.calculateStackingValues(this.findSeriesCollection(columnItem, item, true), isStacking100);\n            }\n        }\n    }\n    calculateStackingValues(seriesCollection, isStacking100) {\n        let startValues;\n        let endValues;\n        let yValues = [];\n        let lastPositive = [];\n        let lastNegative = [];\n        let stackingGroup;\n        let lastValue;\n        let value;\n        let frequencies = [];\n        if (isStacking100) {\n            frequencies = this.findFrequencies(seriesCollection);\n        }\n        for (let series of seriesCollection) {\n            if (series.type.indexOf('Stacking') !== -1 || (series.drawType.indexOf('Stacking') !== -1 &&\n                (series.chart.chartAreaType === 'PolarRadar'))) {\n                stackingGroup = (series.type.indexOf('StackingArea') !== -1) ? 'StackingArea100' : series.stackingGroup;\n                if (!lastPositive[stackingGroup]) {\n                    lastPositive[stackingGroup] = [];\n                    lastNegative[stackingGroup] = [];\n                }\n                yValues = series.yData;\n                startValues = [];\n                endValues = [];\n                for (let j = 0, pointsLength = series.points.length; j < pointsLength; j++) {\n                    lastValue = 0;\n                    value = yValues[j];\n                    if (lastPositive[stackingGroup][series.points[j].xValue] === undefined) {\n                        lastPositive[stackingGroup][series.points[j].xValue] = 0;\n                    }\n                    if (lastNegative[stackingGroup][series.points[j].xValue] === undefined) {\n                        lastNegative[stackingGroup][series.points[j].xValue] = 0;\n                    }\n                    if (isStacking100) {\n                        value = value / frequencies[stackingGroup][series.points[j].xValue] * 100;\n                        value = !isNaN(value) ? value : 0;\n                        series.points[j].percent = value.toFixed(2);\n                    }\n                    if (value >= 0) {\n                        lastValue = lastPositive[stackingGroup][series.points[j].xValue];\n                        lastPositive[stackingGroup][series.points[j].xValue] += value;\n                    }\n                    else {\n                        lastValue = lastNegative[stackingGroup][series.points[j].xValue];\n                        lastNegative[stackingGroup][series.points[j].xValue] += value;\n                    }\n                    startValues.push(lastValue);\n                    endValues.push(value + lastValue);\n                    if (isStacking100 && (endValues[j] > 100)) {\n                        endValues[j] = 100;\n                    }\n                }\n                series.stackedValues = new StackValues(startValues, endValues);\n                series.yMin = Math.min.apply(0, startValues);\n                series.yMax = Math.max.apply(0, endValues);\n                if (series.yMin > Math.min.apply(0, endValues)) {\n                    series.yMin = (isStacking100) ? -100 : Math.min.apply(0, endValues);\n                }\n                if (series.yMax < Math.max.apply(0, startValues)) {\n                    series.yMax = 0;\n                }\n            }\n        }\n    }\n    findFrequencies(seriesCollection) {\n        let frequencies = [];\n        let stackingGroup;\n        for (let series of seriesCollection) {\n            series.yAxis.isStack100 = series.type.indexOf('100') !== -1 ? true : false;\n            if (series.type.indexOf('Stacking') !== -1) {\n                stackingGroup = (series.type.indexOf('StackingArea') !== -1) ? 'StackingArea100' : series.stackingGroup;\n                if (!frequencies[stackingGroup]) {\n                    frequencies[stackingGroup] = [];\n                }\n                for (let j = 0, pointsLength = series.points.length; j < pointsLength; j++) {\n                    if (frequencies[stackingGroup][series.points[j].xValue] === undefined) {\n                        frequencies[stackingGroup][series.points[j].xValue] = 0;\n                    }\n                    if (series.yData[j] > 0) {\n                        frequencies[stackingGroup][series.points[j].xValue] += series.yData[j];\n                    }\n                    else {\n                        frequencies[stackingGroup][series.points[j].xValue] -= series.yData[j];\n                    }\n                }\n            }\n        }\n        return frequencies;\n    }\n    /**\n     * To find the log values.\n     * @return {void}\n     * @private\n     */\n    logWithIn(value, axis) {\n        if (axis.valueType === 'Logarithmic') {\n            value = logBase(value, axis.logBase);\n        }\n        else {\n            value = value;\n        }\n        return value;\n    }\n    /* private dataManagerFailure(e: { result: Object[] }): void {\n         this.currentViewData = [];\n         this.refreshChart();\n     }*/\n    /** @private */\n    renderSeries(chart, index) {\n        let seriesType = firstToLowerCase(this.type);\n        if (seriesType.indexOf('100') !== -1) {\n            seriesType = seriesType.replace('100', '');\n        }\n        if (chart[seriesType + 'SeriesModule']) {\n            if (this.category !== 'Indicator' && this.category !== 'TrendLine') {\n                this.createSeriesElements(chart);\n            }\n            chart[seriesType + 'SeriesModule'].render(this, this.xAxis, this.yAxis, chart.requireInvertedAxis);\n            if (this.category !== 'Indicator') {\n                if (this.errorBar.visible) {\n                    this.chart.errorBarModule.render(this);\n                }\n                if (this.marker.dataLabel.visible) {\n                    chart.dataLabelModule.render(this, this.chart, this.marker.dataLabel);\n                }\n                this.appendSeriesElement(chart.seriesElements, chart);\n            }\n            this.performAnimation(chart, seriesType, this.errorBar, this.marker, this.marker.dataLabel);\n        }\n    }\n    /**\n     * To create seris element.\n     * @return {void}\n     * @private\n     */\n    createSeriesElements(chart) {\n        if (this.category !== 'Indicator') {\n            let elementId = chart.element.id;\n            let xAxisRect = this.xAxis.rect;\n            // 8 for extend border value 5 for extend size value\n            let explodeValue = this.marker.border.width + 8 + 5;\n            let yAxisRect = this.yAxis.rect;\n            let marker = this.marker;\n            let render = chart.renderer;\n            let index = this.index;\n            let markerHeight = (this.type === 'Scatter') ? (this.marker.height + explodeValue) / 2 : 0;\n            let markerWidth = (this.type === 'Scatter') ? (this.marker.width + explodeValue) / 2 : 0;\n            if (chart.chartAreaType === 'PolarRadar') {\n                this.clipRectElement = render.drawCircularClipPath(new CircleOption(elementId + '_ChartSeriesClipRect_' + index, 'transparent', { width: 1, color: 'Gray' }, 1, this.clipRect.width / 2 + this.clipRect.x, this.clipRect.height / 2 + this.clipRect.y, chart.radius));\n            }\n            else {\n                this.clipRectElement = render.drawClipPath(new RectOption(elementId + '_ChartSeriesClipRect_' + index, 'transparent', { width: 1, color: 'Gray' }, 1, {\n                    x: -markerWidth, y: -markerHeight,\n                    width: this.clipRect.width + markerWidth * 2,\n                    height: this.clipRect.height + markerHeight * 2\n                }));\n            }\n            let transform;\n            transform = chart.chartAreaType === 'Cartesian' ? 'translate(' + this.clipRect.x + ',' + (this.clipRect.y) + ')' : '';\n            this.symbolElement = null;\n            this.seriesElement = render.createGroup({\n                'id': elementId + 'SeriesGroup' + index,\n                'transform': transform,\n                'clip-path': 'url(#' + elementId + '_ChartSeriesClipRect_' + index + ')'\n            });\n            this.seriesElement.appendChild(this.clipRectElement);\n        }\n    }\n    /**\n     * To append the series.\n     * @return {void}\n     * @private\n     */\n    appendSeriesElement(element, chart) {\n        let marker = this.marker;\n        let dataLabel = marker.dataLabel;\n        if (this.category !== 'TrendLine') {\n            chart.seriesElements.appendChild(this.seriesElement);\n            let errorBar = this.errorBar;\n            if (errorBar.visible) {\n                if (chart.chartAreaType === 'PolarRadar') {\n                    chart.seriesElements.appendChild(this.seriesElement);\n                }\n                else {\n                    chart.seriesElements.appendChild(this.errorBarElement);\n                }\n            }\n            if (this.type === 'Scatter' || this.type === 'Bubble') {\n                chart.seriesElements.appendChild(this.seriesElement);\n            }\n        }\n        if (marker.visible && ((chart.chartAreaType === 'Cartesian' && (!this.isRectSeries || this.type === 'BoxAndWhisker'))\n            || ((this.drawType !== 'Scatter' && !this.isRectSeries) && chart.chartAreaType === 'PolarRadar')) &&\n            this.type !== 'Scatter' && this.type !== 'Bubble') {\n            chart.seriesElements.appendChild(this.symbolElement);\n        }\n        if (dataLabel.visible) {\n            chart.dataLabelElements.appendChild(this.shapeElement);\n            chart.dataLabelElements.appendChild(this.textElement);\n        }\n        if (chart.dataLabelElements.hasChildNodes()) {\n            chart.seriesElements.appendChild(chart.dataLabelElements);\n        }\n    }\n    /**\n     * To perform animation for chart series.\n     * @return {void}\n     * @private\n     */\n    performAnimation(chart, type, errorBar, marker, dataLabel) {\n        if (this.animation.enable && chart.animateSeries) {\n            chart[type + 'SeriesModule'].doAnimation(this);\n            if (errorBar.visible) {\n                chart.errorBarModule.doErrorBarAnimation(this);\n            }\n            if (marker.visible) {\n                chart.markerRender.doMarkerAnimation(this);\n            }\n            if (dataLabel.visible) {\n                chart.dataLabelModule.doDataLabelAnimation(this);\n            }\n        }\n    }\n    /**\n     * To set border color for empty point\n     * @private\n     */\n    setPointColor(point, color) {\n        color = point.interior || color;\n        return point.isEmpty ? (this.emptyPointSettings.fill || color) : color;\n    }\n    /**\n     * To set border color for empty point\n     * @private\n     */\n    setBorderColor(point, border) {\n        border.width = point.isEmpty ? (this.emptyPointSettings.border.width || border.width) : border.width;\n        border.color = point.isEmpty ? (this.emptyPointSettings.border.color || border.color) : border.color;\n        return border;\n    }\n}\n__decorate$4([\n    Property('')\n], Series.prototype, \"name\", void 0);\n__decorate$4([\n    Property('')\n], Series.prototype, \"yName\", void 0);\n__decorate$4([\n    Property('Line')\n], Series.prototype, \"drawType\", void 0);\n__decorate$4([\n    Property(true)\n], Series.prototype, \"isClosed\", void 0);\n__decorate$4([\n    Property('#2ecd71')\n], Series.prototype, \"bearFillColor\", void 0);\n__decorate$4([\n    Property('#e74c3d')\n], Series.prototype, \"bullFillColor\", void 0);\n__decorate$4([\n    Property(false)\n], Series.prototype, \"enableSolidCandles\", void 0);\n__decorate$4([\n    Property('')\n], Series.prototype, \"size\", void 0);\n__decorate$4([\n    Property('')\n], Series.prototype, \"stackingGroup\", void 0);\n__decorate$4([\n    Property(true)\n], Series.prototype, \"visible\", void 0);\n__decorate$4([\n    Complex({ color: 'transparent', width: 0 }, Border)\n], Series.prototype, \"border\", void 0);\n__decorate$4([\n    Property(1)\n], Series.prototype, \"opacity\", void 0);\n__decorate$4([\n    Property('Line')\n], Series.prototype, \"type\", void 0);\n__decorate$4([\n    Complex(null, ErrorBarSettings)\n], Series.prototype, \"errorBar\", void 0);\n__decorate$4([\n    Complex(null, MarkerSettings)\n], Series.prototype, \"marker\", void 0);\n__decorate$4([\n    Collection([], Trendline)\n], Series.prototype, \"trendlines\", void 0);\n__decorate$4([\n    Property(true)\n], Series.prototype, \"enableTooltip\", void 0);\n__decorate$4([\n    Property('SeriesType')\n], Series.prototype, \"legendShape\", void 0);\n__decorate$4([\n    Property(null)\n], Series.prototype, \"selectionStyle\", void 0);\n__decorate$4([\n    Property(1)\n], Series.prototype, \"minRadius\", void 0);\n__decorate$4([\n    Property(3)\n], Series.prototype, \"maxRadius\", void 0);\n__decorate$4([\n    Property('Natural')\n], Series.prototype, \"splineType\", void 0);\n__decorate$4([\n    Property(0.5)\n], Series.prototype, \"cardinalSplineTension\", void 0);\n__decorate$4([\n    Complex(null, EmptyPointSettings)\n], Series.prototype, \"emptyPointSettings\", void 0);\n__decorate$4([\n    Property(true)\n], Series.prototype, \"showMean\", void 0);\n__decorate$4([\n    Property('Normal')\n], Series.prototype, \"boxPlotMode\", void 0);\n__decorate$4([\n    Property(0.7)\n], Series.prototype, \"columnWidth\", void 0);\n__decorate$4([\n    Property(0)\n], Series.prototype, \"columnSpacing\", void 0);\n__decorate$4([\n    Property('#C64E4A')\n], Series.prototype, \"negativeFillColor\", void 0);\n__decorate$4([\n    Property('#4E81BC')\n], Series.prototype, \"summaryFillColor\", void 0);\n__decorate$4([\n    Property()\n], Series.prototype, \"intermediateSumIndexes\", void 0);\n__decorate$4([\n    Property()\n], Series.prototype, \"sumIndexes\", void 0);\n__decorate$4([\n    Complex({ color: 'black', width: 2 }, Connector)\n], Series.prototype, \"connector\", void 0);\n__decorate$4([\n    Complex(null, CornerRadius)\n], Series.prototype, \"cornerRadius\", void 0);\n\n/**\n * data module is used to generate query and dataSource\n */\nclass Data {\n    /**\n     * Constructor for data module\n     * @private\n     */\n    constructor(dataSource, query) {\n        this.initDataManager(dataSource, query);\n    }\n    /**\n     * The function used to initialize dataManager and query\n     * @return {void}\n     * @private\n     */\n    initDataManager(dataSource, query) {\n        this.dataManager = dataSource instanceof DataManager ? dataSource : new DataManager(dataSource);\n        this.query = query instanceof Query ? query : new Query();\n    }\n    /**\n     * The function used to generate updated Query from chart model\n     * @return {void}\n     * @private\n     */\n    generateQuery() {\n        let query = this.query.clone();\n        return query;\n    }\n    /**\n     * The function used to get dataSource by executing given Query\n     * @param  {Query} query - A Query that specifies to generate dataSource\n     * @return {void}\n     * @private\n     */\n    getData(query) {\n        return this.dataManager.executeQuery(query);\n    }\n}\n\n/**\n * Marker Module used to render the marker for line type series.\n */\nclass MarkerExplode extends ChartData {\n    /**\n     * Constructor for the marker module.\n     * @private\n     */\n    constructor(chart) {\n        super(chart);\n        this.addEventListener();\n        this.elementId = chart.element.id;\n    }\n    /**\n     * @hidden\n     */\n    addEventListener() {\n        if (this.chart.isDestroyed) {\n            return;\n        }\n        this.chart.on(Browser.touchMoveEvent, this.mouseMoveHandler, this);\n        this.chart.on(Browser.touchEndEvent, this.mouseUpHandler, this);\n    }\n    /**\n     * @hidden\n     */\n    /* public removeEventListener(): void {\n         if (this.chart.isDestroyed) { return; }\n         this.chart.off(Browser.touchMoveEvent, this.mouseMoveHandler);\n    }*/\n    /**\n     * @hidden\n     */\n    mouseUpHandler() {\n        let chart = this.chart;\n        if (chart.isTouch && !chart.crosshair.enable && !this.isSelected(chart)) {\n            this.markerMove(true);\n        }\n    }\n    /**\n     * @hidden\n     */\n    mouseMoveHandler() {\n        let chart = this.chart;\n        if ((!chart.crosshair.enable || (chart.tooltip.enable)) && (!chart.isTouch || chart.startMove) && !this.isSelected(chart)) {\n            this.markerMove(false);\n        }\n    }\n    markerMove(remove$$1) {\n        let chart = this.chart;\n        this.currentPoints = [];\n        let data;\n        let previous;\n        let explodeSeries;\n        if (!chart.tooltip.shared || !chart.tooltip.enable) {\n            data = this.getData();\n            previous = this.previousPoints[0];\n            explodeSeries = data.series && (data.series.type === 'BoxAndWhisker' || data.series.type === 'Bubble' || data.series.drawType === 'Scatter'\n                || data.series.type === 'Scatter' || (!data.series.isRectSeries && data.series.marker.visible));\n            data.lierIndex = this.lierIndex;\n            if (data.point && explodeSeries && ((!previous || (previous.point !== data.point)) ||\n                (previous && previous.lierIndex > 3 && previous.lierIndex !== this.lierIndex))) {\n                this.currentPoints.push(data);\n            }\n        }\n        else {\n            if (!withInBounds(chart.mouseX, chart.mouseY, chart.chartAxisLayoutPanel.seriesClipRect)) {\n                return null;\n            }\n            if (chart.tooltip.enable) {\n                let pointData = chart.chartAreaType === 'PolarRadar' ? this.getData() : null;\n                for (let chartSeries of chart.visibleSeries) {\n                    if (!chartSeries.enableTooltip || chartSeries.category === 'Indicator') {\n                        continue;\n                    }\n                    if (chart.chartAreaType === 'Cartesian' && chartSeries.visible) {\n                        data = this.getClosestX(chart, chartSeries);\n                    }\n                    else if (chart.chartAreaType === 'PolarRadar' && chartSeries.visible && pointData.point !== null) {\n                        data = new PointData(chartSeries.points[pointData.point.index], chartSeries);\n                    }\n                    if (data) {\n                        this.currentPoints.push(data);\n                        data = null;\n                    }\n                }\n            }\n        }\n        let length = this.previousPoints.length;\n        if (this.currentPoints.length > 0) {\n            if (length === 0 || (length > 0 && this.previousPoints[0].point !== this.currentPoints[0].point)) {\n                if (this.previousPoints.length > 0) {\n                    this.removeHighlightedMarker();\n                }\n                for (let data of this.currentPoints) {\n                    if (data && data.point &&\n                        (!data.series.isRectSeries || data.series.type === 'BoxAndWhisker')) {\n                        stopTimer(this.markerExplode);\n                        this.isRemove = true;\n                        data.point.symbolLocations.map((location, index) => {\n                            if (data.point.marker.visible) {\n                                this.drawTrackBall(data.series, data.point, location, index);\n                            }\n                        });\n                    }\n                }\n                this.previousPoints = extend([], this.currentPoints, null, true);\n            }\n        }\n        if (!chart.tooltip.enable && ((this.currentPoints.length === 0 && this.isRemove) || (remove$$1 && this.isRemove) ||\n            !withInBounds(chart.mouseX, chart.mouseY, chart.chartAxisLayoutPanel.seriesClipRect))) {\n            this.isRemove = false;\n            this.markerExplode = setTimeout(() => {\n                this.removeHighlightedMarker();\n            }, 2000);\n        }\n        this.currentPoints = [];\n    }\n    drawTrackBall(series, point, location, index) {\n        let marker = point.marker;\n        let seriesMarker = series.marker;\n        let shape = marker.shape || seriesMarker.shape;\n        let element = series.symbolElement || series.seriesElement;\n        let symbolId = this.elementId + '_Series_' + series.index + '_Point_' + point.index + '_Trackball' +\n            (index ? index : '');\n        let size = new Size((marker.width || seriesMarker.width) + 5, (marker.height || seriesMarker.height) + 5);\n        let border = (marker.border || series.border);\n        let explodeSeries = (series.type === 'BoxAndWhisker' || series.type === 'Bubble' || series.type === 'Scatter');\n        let borderColor = (border.color && border.color !== 'transparent') ? border.color :\n            marker.fill || point.interior || (explodeSeries ? point.color : series.interior);\n        let colorValue = convertHexToColor(colorNameToHex(borderColor));\n        let borderWidth = marker.border ? marker.border.width : seriesMarker.border.width;\n        let markerShadow = series.chart.themeStyle.markerShadow ||\n            'rgba(' + colorValue.r + ',' + colorValue.g + ',' + colorValue.b + ',0.2)';\n        for (let i = 0; i < 2; i++) {\n            let options = new PathOption(symbolId + '_' + i, i ? (marker.fill || point.color || (explodeSeries ? series.interior : '#ffffff')) : 'transparent', borderWidth + (i ? 0 : 8), i ? borderColor : markerShadow, (marker.opacity || seriesMarker.opacity), null, null);\n            let symbol = drawSymbol(location, shape, size, seriesMarker.imageUrl, options, '');\n            symbol.setAttribute('style', 'pointer-events:none');\n            symbol.setAttribute('class', 'EJ2-Trackball');\n            element.appendChild(symbol);\n        }\n    }\n    /**\n     * @hidden\n     */\n    removeHighlightedMarker() {\n        let elements = document.getElementsByClassName('EJ2-Trackball');\n        for (let i = 0, len = elements.length; i < len; i++) {\n            remove(elements[0]);\n        }\n        this.previousPoints = [];\n    }\n}\n\n/**\n * Marker module used to render the marker for line type series.\n */\nclass Marker extends MarkerExplode {\n    /**\n     * Constructor for the marker module.\n     * @private\n     */\n    constructor(chart) {\n        super(chart);\n        this.addEventListener();\n    }\n    /**\n     * Render the marker for series.\n     * @return {void}\n     * @private\n     */\n    render(series) {\n        this.createElement(series);\n        for (let point of series.points) {\n            if (point.visible && point.symbolLocations.length) {\n                point.symbolLocations.map((location, index) => {\n                    this.renderMarker(series, point, location, index);\n                });\n            }\n        }\n    }\n    renderMarker(series, point, location, index) {\n        let seriesIndex = series.index;\n        let marker = series.marker;\n        let border = {\n            color: marker.border.color,\n            width: marker.border.width\n        };\n        let borderColor = marker.border.color;\n        let symbolId;\n        let shapeOption;\n        let isBoxPlot = series.type === 'BoxAndWhisker';\n        let fill = marker.fill || (isBoxPlot ? point.interior || series.interior : '#ffffff');\n        let argsData;\n        let parentElement = isBoxPlot ?\n            findlElement(series.seriesElement.childNodes, 'Series_' + series.index + '_Point_' + point.index)\n            : series.symbolElement;\n        border.color = borderColor || series.setPointColor(point, series.interior);\n        symbolId = this.elementId + '_Series_' + seriesIndex + '_Point_' + point.index + '_Symbol' +\n            (index ? index : '');\n        argsData = {\n            cancel: false, name: pointRender, series: series, point: point,\n            fill: point.isEmpty ? (series.emptyPointSettings.fill || fill) : fill,\n            border: {\n                color: series.type === 'BoxAndWhisker' ?\n                    (!isNullOrUndefined(borderColor) && borderColor !== 'transparent') ? borderColor :\n                        getSaturationColor(fill, -0.6)\n                    : border.color,\n                width: border.width\n            },\n            height: marker.height,\n            width: marker.width,\n            shape: marker.shape\n        };\n        argsData.border = series.setBorderColor(point, { width: argsData.border.width, color: argsData.border.color });\n        this.chart.trigger(pointRender, argsData);\n        point.color = argsData.fill;\n        if (!argsData.cancel) {\n            let y;\n            if (series.type === 'RangeArea') {\n                y = index ? point.low : point.high;\n            }\n            else if (isBoxPlot) {\n                y = point.outliers[index];\n            }\n            else {\n                y = point.y;\n            }\n            shapeOption = new PathOption(symbolId, argsData.fill, argsData.border.width, argsData.border.color, marker.opacity, null);\n            if (parentElement !== undefined && parentElement !== null) {\n                parentElement.appendChild(drawSymbol(location, argsData.shape, new Size(argsData.width, argsData.height), marker.imageUrl, shapeOption, point.x.toString() + ':' + y.toString()));\n            }\n            point.marker = {\n                border: argsData.border,\n                fill: argsData.fill,\n                height: argsData.height,\n                visible: true,\n                shape: argsData.shape,\n                width: argsData.width\n            };\n        }\n        else {\n            location = null;\n            point.marker = {\n                visible: false\n            };\n        }\n    }\n    createElement(series) {\n        let markerClipRect;\n        let marker = series.marker;\n        // 8 for extend border value 5 for extend size value\n        let explodeValue = marker.border.width + 8 + 5;\n        let render = series.chart.renderer;\n        let transform;\n        transform = series.chart.chartAreaType === 'Cartesian' ? 'translate(' + series.clipRect.x + ',' + (series.clipRect.y) + ')' : '';\n        if (marker.visible) {\n            let markerHeight = (marker.height + explodeValue) / 2;\n            let markerWidth = (marker.width + explodeValue) / 2;\n            if (series.chart.chartAreaType === 'Cartesian') {\n                markerClipRect = render.drawClipPath(new RectOption(this.elementId + '_ChartMarkerClipRect_' + series.index, 'transparent', { width: 1, color: 'Gray' }, 1, {\n                    x: -markerWidth, y: -markerHeight,\n                    width: series.clipRect.width + markerWidth * 2,\n                    height: series.clipRect.height + markerHeight * 2\n                }));\n            }\n            else {\n                markerClipRect = render.drawCircularClipPath(new CircleOption(this.elementId + '_ChartMarkerClipRect_' + series.index, 'transparent', { width: 1, color: 'Gray' }, 1, series.clipRect.width / 2 + series.clipRect.x, series.clipRect.height / 2 + series.clipRect.y, series.chart.radius + Math.max(markerHeight, markerWidth)));\n            }\n            series.symbolElement = render.createGroup({\n                'id': this.elementId + 'SymbolGroup' + series.index,\n                'transform': transform,\n                'clip-path': 'url(#' + this.elementId + '_ChartMarkerClipRect_' + series.index + ')'\n            });\n            series.symbolElement.appendChild(markerClipRect);\n        }\n    }\n    getRangeLowPoint(region, series) {\n        let x = region.x;\n        let y = region.y;\n        if (series.chart.requireInvertedAxis) {\n            y += region.height / 2;\n            x += series.yAxis.isInversed ? region.width : 0;\n        }\n        else {\n            y += series.yAxis.isInversed ? 0 : region.height;\n            x += region.width / 2;\n        }\n        return { x: x, y: y };\n    }\n    /**\n     * Animates the marker.\n     * @return {void}.\n     * @private\n     */\n    doMarkerAnimation(series) {\n        if (!(series.isRectSeries || series.type === 'Scatter' || series.type === 'Bubble' ||\n            (series.chart.chartAreaType === 'PolarRadar' && (series.drawType === 'Scatter' || series.drawType.indexOf('Column') > -1)))) {\n            let markerElements = series.symbolElement.childNodes;\n            let delay = series.animation.delay + series.animation.duration;\n            let j = 1;\n            let incFactor = series.type === 'RangeArea' ? 2 : 1;\n            for (let i = 0; i < series.points.length; i++) {\n                if (!series.points[i].symbolLocations.length || !markerElements[j]) {\n                    continue;\n                }\n                markerAnimate(markerElements[j], delay, 200, series, i, series.points[i].symbolLocations[0], false);\n                if (incFactor === 2) {\n                    let lowPoint = this.getRangeLowPoint(series.points[i].regions[0], series);\n                    markerAnimate(markerElements[j + 1], delay, 200, series, i, lowPoint, false);\n                }\n                j += incFactor;\n            }\n        }\n    }\n}\n\nvar __decorate$5 = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n/**\n * Configures the location for the legend.\n */\nclass Location extends ChildProperty {\n}\n__decorate$5([\n    Property(0)\n], Location.prototype, \"x\", void 0);\n__decorate$5([\n    Property(0)\n], Location.prototype, \"y\", void 0);\n/**\n * Configures the legends in charts.\n */\nclass LegendSettings extends ChildProperty {\n}\n__decorate$5([\n    Property(true)\n], LegendSettings.prototype, \"visible\", void 0);\n__decorate$5([\n    Property(null)\n], LegendSettings.prototype, \"height\", void 0);\n__decorate$5([\n    Property(null)\n], LegendSettings.prototype, \"width\", void 0);\n__decorate$5([\n    Complex({ x: 0, y: 0 }, Location)\n], LegendSettings.prototype, \"location\", void 0);\n__decorate$5([\n    Property('Auto')\n], LegendSettings.prototype, \"position\", void 0);\n__decorate$5([\n    Property(8)\n], LegendSettings.prototype, \"padding\", void 0);\n__decorate$5([\n    Property('Center')\n], LegendSettings.prototype, \"alignment\", void 0);\n__decorate$5([\n    Complex(Theme.legendLabelFont, Font)\n], LegendSettings.prototype, \"textStyle\", void 0);\n__decorate$5([\n    Property(10)\n], LegendSettings.prototype, \"shapeHeight\", void 0);\n__decorate$5([\n    Property(10)\n], LegendSettings.prototype, \"shapeWidth\", void 0);\n__decorate$5([\n    Complex({}, Border)\n], LegendSettings.prototype, \"border\", void 0);\n__decorate$5([\n    Property(5)\n], LegendSettings.prototype, \"shapePadding\", void 0);\n__decorate$5([\n    Property('transparent')\n], LegendSettings.prototype, \"background\", void 0);\n__decorate$5([\n    Property(1)\n], LegendSettings.prototype, \"opacity\", void 0);\n__decorate$5([\n    Property(true)\n], LegendSettings.prototype, \"toggleVisibility\", void 0);\n__decorate$5([\n    Property(null)\n], LegendSettings.prototype, \"description\", void 0);\n__decorate$5([\n    Property(3)\n], LegendSettings.prototype, \"tabIndex\", void 0);\n/**\n * Legend base class for Chart and Accumulation chart.\n * @private\n */\nclass BaseLegend {\n    /**\n     * Constructor for the dateTime module.\n     * @private\n     */\n    constructor(chart) {\n        this.rowCount = 0; // legend row counts per page \n        this.columnCount = 0; // legend column counts per page \n        this.pageButtonSize = 8;\n        this.pageXCollections = []; // pages of x locations\n        this.maxColumns = 0;\n        this.isTrimmed = false;\n        this.maxWidth = 0;\n        this.currentPage = 1;\n        this.chart = chart;\n        this.legend = chart.legendSettings;\n        this.legendID = chart.element.id + '_chart_legend';\n        this.isChartControl = (chart.getModuleName() === 'chart');\n    }\n    /**\n     * Calculate the bounds for the legends.\n     * @return {void}\n     * @private\n     */\n    calculateLegendBounds(rect, availableSize) {\n        let legend = this.legend;\n        this.getPosition(legend.position, availableSize);\n        this.legendBounds = new Rect(rect.x, rect.y, 0, 0);\n        this.isVertical = (this.position === 'Left' || this.position === 'Right');\n        if (this.isVertical) {\n            this.legendBounds.height = stringToNumber(legend.height, availableSize.height - (rect.y - this.chart.margin.top)) || rect.height;\n            this.legendBounds.width = stringToNumber(legend.width || '20%', availableSize.width);\n        }\n        else {\n            this.legendBounds.width = stringToNumber(legend.width, availableSize.width) || rect.width;\n            this.legendBounds.height = stringToNumber(legend.height || '20%', availableSize.height);\n        }\n        this.library.getLegendBounds(availableSize, this.legendBounds, legend);\n        this.getLocation(this.position, legend.alignment, this.legendBounds, rect, availableSize);\n    }\n    /**\n     * To find legend position based on available size for chart and accumulation chart\n     */\n    getPosition(position, availableSize) {\n        if (this.isChartControl) {\n            this.position = (position !== 'Auto') ? position : 'Bottom';\n        }\n        else {\n            if (position === 'Auto' && this.chart.visibleSeries &&\n                (this.chart.visibleSeries[0].type === 'Funnel' || this.chart.visibleSeries[0].type === 'Pyramid')) {\n                position = 'Top';\n            }\n            this.position = (position !== 'Auto') ? position :\n                (availableSize.width > availableSize.height ? 'Right' : 'Bottom');\n        }\n    }\n    /**\n     * To set bounds for chart and accumulation chart\n     */\n    setBounds(computedWidth, computedHeight, legend, legendBounds) {\n        computedWidth = computedWidth < legendBounds.width ? computedWidth : legendBounds.width;\n        computedHeight = computedHeight < legendBounds.height ? computedHeight : legendBounds.height;\n        legendBounds.width = !legend.width ? computedWidth : legendBounds.width;\n        legendBounds.height = !legend.height ? computedHeight : legendBounds.height;\n        this.rowCount = Math.max(1, Math.ceil((legendBounds.height - legend.padding) / (this.maxItemHeight + legend.padding)));\n    }\n    /**\n     * To find legend location based on position, alignment for chart and accumulation chart\n     */\n    getLocation(position, alignment, legendBounds, rect, availableSize) {\n        let padding = this.legend.border.width;\n        let legendHeight = legendBounds.height + padding;\n        let legendWidth = legendBounds.width + padding;\n        let marginBottom = this.chart.margin.bottom;\n        if (position === 'Bottom') {\n            legendBounds.x = this.alignLegend(legendBounds.x, availableSize.width, legendBounds.width, alignment);\n            legendBounds.y = rect.y + (rect.height - legendHeight) + padding;\n            subtractThickness(rect, new Thickness(0, 0, 0, legendHeight));\n        }\n        else if (position === 'Top') {\n            legendBounds.x = this.alignLegend(legendBounds.x, availableSize.width, legendBounds.width, alignment);\n            legendBounds.y = rect.y + padding;\n            subtractThickness(rect, new Thickness(0, 0, legendHeight, 0));\n        }\n        else if (position === 'Right') {\n            legendBounds.x = rect.x + (rect.width - legendBounds.width);\n            legendBounds.y = rect.y + this.alignLegend(0, availableSize.height - (rect.y + marginBottom), legendBounds.height, alignment);\n            subtractThickness(rect, new Thickness(0, legendWidth, 0, 0));\n        }\n        else if (position === 'Left') {\n            legendBounds.y = rect.y + this.alignLegend(0, availableSize.height - (rect.y + marginBottom), legendBounds.height, alignment);\n            subtractThickness(rect, new Thickness(legendWidth, 0, 0, 0));\n        }\n        else {\n            legendBounds.x = this.legend.location.x;\n            legendBounds.y = this.legend.location.y;\n            subtractThickness(rect, new Thickness(0, 0, 0, 0));\n        }\n    }\n    /**\n     * To find legend alignment for chart and accumulation chart\n     */\n    alignLegend(start, size, legendSize, alignment) {\n        switch (alignment) {\n            case 'Far':\n                start = (size - legendSize) - start;\n                break;\n            case 'Center':\n                start = ((size - legendSize) / 2);\n                break;\n        }\n        return start;\n    }\n    /**\n     * Renders the legend.\n     * @return {void}\n     * @private\n     */\n    renderLegend(chart, legend, legendBounds) {\n        let firstLegend = this.findFirstLegendPosition(this.legendCollections);\n        let padding = legend.padding;\n        this.maxItemHeight = Math.max(this.legendCollections[0].textSize.height, legend.shapeHeight);\n        let legendGroup = chart.renderer.createGroup({ id: this.legendID + '_g' });\n        let legendTranslateGroup = this.createLegendElements(chart, legendBounds, legendGroup, legend, this.legendID);\n        if (firstLegend !== this.legendCollections.length) {\n            let legendSeriesGroup; // legendItem group for each series group element\n            let start; // starting shape center x,y position && to resolve lint error used new line for declaration\n            start = new ChartLocation(legendBounds.x + padding + (legend.shapeWidth / 2), legendBounds.y + padding + this.maxItemHeight / 2);\n            let textOptions = new TextOption('', start.x, start.y, 'start');\n            //  initialization for totalPages legend click totalpage again calculate\n            this.totalPages = this.isChartControl ? this.totalPages : 0;\n            let textPadding = legend.shapePadding + padding + legend.shapeWidth;\n            let count = 0;\n            this.pageXCollections = [];\n            this.legendCollections[firstLegend].location = start;\n            let previousLegend = this.legendCollections[firstLegend];\n            for (let legendOption of this.legendCollections) {\n                if (legendOption.render && legendOption.text !== '') {\n                    legendSeriesGroup = chart.renderer.createGroup({\n                        id: this.legendID + this.generateId(legendOption, '_g_', count)\n                    });\n                    legendSeriesGroup.setAttribute('tabindex', legend.tabIndex.toString());\n                    legendSeriesGroup.setAttribute('aria-label', legend.description || 'Click to show or hide the ' + legendOption.text + ' series');\n                    this.library.getRenderPoint(legendOption, start, textPadding, previousLegend, legendBounds, count, firstLegend);\n                    this.renderSymbol(legendOption, legendSeriesGroup, count);\n                    this.renderText(chart, legendOption, legendSeriesGroup, textOptions, count);\n                    legendSeriesGroup.setAttribute('style', 'cursor: ' + ((!legend.toggleVisibility && chart.selectionMode === 'None') ? 'auto' : 'pointer'));\n                    legendTranslateGroup.appendChild(legendSeriesGroup);\n                    previousLegend = legendOption;\n                }\n                count++;\n            }\n            if (this.isPaging) {\n                this.renderPagingElements(chart, legendBounds, textOptions, legendGroup);\n            }\n        }\n        chart.svgObject.appendChild(legendGroup);\n    }\n    /**\n     * To find first valid legend text index for chart and accumulation chart\n     */\n    findFirstLegendPosition(legendCollection) {\n        let count = 0;\n        for (let legend of legendCollection) {\n            if (legend.render && legend.text !== '') {\n                break;\n            }\n            count++;\n        }\n        return count;\n    }\n    /**\n     * To create legend rendering elements for chart and accumulation chart\n     */\n    createLegendElements(chart, legendBounds, legendGroup, legend, id) {\n        let padding = legend.padding;\n        let options = new RectOption(id + '_element', legend.background, legend.border, legend.opacity, legendBounds);\n        legendGroup.appendChild(chart.renderer.drawRectangle(options));\n        let legendItemsGroup = chart.renderer.createGroup({ id: id + '_collections' });\n        legendGroup.appendChild(legendItemsGroup);\n        this.legendTranslateGroup = chart.renderer.createGroup({ id: id + '_translate_g' });\n        legendItemsGroup.appendChild(this.legendTranslateGroup);\n        let clippath = chart.renderer.createClipPath({ id: id + '_clipPath' });\n        options.y += padding;\n        options.id += '_clipPath_rect';\n        options.width = (!this.isChartControl && this.isVertical) ? this.maxWidth - padding : legendBounds.width;\n        this.clipRect = chart.renderer.drawRectangle(options);\n        clippath.appendChild(this.clipRect);\n        chart.svgObject.appendChild(clippath);\n        legendItemsGroup.setAttribute('style', 'clip-path:url(#' + clippath.id + ')');\n        return this.legendTranslateGroup;\n    }\n    /**\n     * To render legend symbols for chart and accumulation chart\n     */\n    renderSymbol(legendOption, group, i) {\n        let symbolColor = legendOption.visible ? legendOption.fill : '#D3D3D3';\n        let shape = (legendOption.shape === 'SeriesType') ? legendOption.type : legendOption.shape;\n        shape = shape === 'Scatter' ? legendOption.markerShape : shape;\n        let symbolOption = new PathOption(this.legendID + this.generateId(legendOption, '_shape_', i), symbolColor, 1, symbolColor, 1, '', '');\n        group.appendChild(drawSymbol(legendOption.location, shape, new Size(this.legend.shapeWidth, this.legend.shapeHeight), '', symbolOption, 'Click to show or hide the ' + legendOption.text + ' series'));\n        if (shape === 'Line' && legendOption.markerVisibility && legendOption.markerShape !== 'Image' ||\n            legendOption.type === 'Doughnut') {\n            symbolOption.id = this.legendID + this.generateId(legendOption, '_shape_marker_', i);\n            shape = legendOption.type === 'Doughnut' ? 'Circle' : legendOption.markerShape;\n            symbolOption.fill = legendOption.type === 'Doughnut' ? '#FFFFFF' : symbolOption.fill;\n            group.appendChild(drawSymbol(legendOption.location, shape, new Size(this.legend.shapeWidth / 2, this.legend.shapeHeight / 2), '', symbolOption, 'Click to show or hide the ' + legendOption.text + ' series'));\n        }\n    }\n    /**\n     * To render legend text for chart and accumulation chart\n     */\n    renderText(chart, legendOption, group, textOptions, i) {\n        let legend = chart.legendSettings;\n        let hiddenColor = '#D3D3D3';\n        textOptions.id = this.legendID + this.generateId(legendOption, '_text_', i);\n        let fontcolor = legendOption.visible ? legend.textStyle.color || chart.themeStyle.legendLabel : hiddenColor;\n        textOptions.text = legendOption.text;\n        textOptions.x = legendOption.location.x + (legend.shapeWidth / 2) + legend.shapePadding;\n        textOptions.y = legendOption.location.y + this.maxItemHeight / 4;\n        let element = textElement(textOptions, legend.textStyle, fontcolor, group);\n        element.setAttribute('aria-label', legend.description || 'Click to show or hide the ' + legendOption.text + ' series');\n    }\n    /**\n     * To render legend paging elements for chart and accumulation chart\n     */\n    renderPagingElements(chart, bounds, textOption, legendGroup) {\n        let paginggroup = chart.renderer.createGroup({ id: this.legendID + '_navigation' });\n        legendGroup.appendChild(paginggroup);\n        let grayColor = '#545454';\n        let legend = chart.legendSettings; // to solve parameter lint error, legend declaration is here\n        let padding = 8; // const padding for paging elements\n        if (this.isChartControl || !this.isVertical) {\n            this.totalPages = Math.ceil(this.totalPages / Math.max(1, this.rowCount - 1));\n        }\n        else {\n            this.totalPages = Math.ceil(this.totalPages / this.maxColumns);\n        }\n        let symbolOption = new PathOption(this.legendID + '_pageup', 'transparent', 5, grayColor, 1, '', '');\n        let iconSize = this.pageButtonSize;\n        paginggroup.setAttribute('style', 'cursor: pointer');\n        // Page left arrow drawing calculation started here\n        this.clipPathHeight = (this.rowCount - 1) * (this.maxItemHeight + legend.padding);\n        this.clipRect.setAttribute('height', this.clipPathHeight.toString());\n        let x = bounds.x + iconSize / 2;\n        let y = bounds.y + this.clipPathHeight + ((bounds.height - this.clipPathHeight) / 2);\n        paginggroup.appendChild(drawSymbol({ x: x, y: y }, 'LeftArrow', new Size(iconSize, iconSize), '', symbolOption, 'LeftArrow'));\n        // Page numbering rendering calculation started here\n        textOption.x = x + (iconSize / 2) + padding;\n        let size = measureText(this.totalPages + '/' + this.totalPages, legend.textStyle);\n        textOption.y = y + (size.height / 4);\n        textOption.id = this.legendID + '_pagenumber';\n        textOption.text = '1/' + this.totalPages;\n        let pageTextElement = textElement(textOption, legend.textStyle, legend.textStyle.color, paginggroup);\n        // Page right arrow rendering calculation started here\n        x = (textOption.x + padding + (iconSize / 2) + size.width);\n        symbolOption.id = this.legendID + '_pagedown';\n        paginggroup.appendChild(drawSymbol({ x: x, y: y }, 'RightArrow', new Size(iconSize, iconSize), '', symbolOption, 'RightArrow'));\n        // placing the navigation buttons and page numbering in legend right corner\n        paginggroup.setAttribute('transform', 'translate(' + (bounds.width - (2 * (iconSize + padding) +\n            padding + size.width)) + ', ' + 0 + ')');\n        this.translatePage(pageTextElement, this.currentPage - 1, this.currentPage);\n    }\n    /**\n     * To translate legend pages for chart and accumulation chart\n     */\n    translatePage(pagingText, page, pageNumber) {\n        let size = (this.clipPathHeight) * page;\n        let translate = 'translate(0,-' + size + ')';\n        if (!this.isChartControl && this.isVertical) {\n            let pageLength = page * this.maxColumns;\n            size = this.pageXCollections[page * this.maxColumns] - this.legendBounds.x;\n            size = size < 0 ? 0 : size; // to avoid small pixel variation\n            translate = 'translate(-' + size + ',0)';\n        }\n        this.legendTranslateGroup.setAttribute('transform', translate);\n        pagingText.textContent = (pageNumber) + '/' + this.totalPages;\n        this.currentPage = pageNumber;\n    }\n    /**\n     * To change legend pages for chart and accumulation chart\n     */\n    changePage(event, pageUp) {\n        let pageText = document.getElementById(this.legendID + '_pagenumber');\n        let page = parseInt(pageText.textContent.split('/')[0], 10);\n        if (pageUp && page > 1) {\n            this.translatePage(pageText, (page - 2), (page - 1));\n        }\n        else if (!pageUp && page < this.totalPages) {\n            this.translatePage(pageText, page, (page + 1));\n        }\n    }\n    /**\n     * To find legend elements id based on chart or accumulation chart\n     * @private\n     */\n    generateId(option, prefix, count) {\n        if (this.isChartControl) {\n            return prefix + count;\n        }\n        else {\n            return prefix + option.pointIndex;\n        }\n    }\n    /**\n     * To show or hide trimmed text tooltip for legend.\n     * @return {void}\n     * @private\n     */\n    move(event) {\n        let x = this.chart.mouseX;\n        let y = this.chart.mouseY;\n        if (event.target.textContent.indexOf('...') > -1) {\n            let targetId = event.target.id.split(this.legendID + '_text_');\n            if (targetId.length === 2) {\n                let index = parseInt(targetId[1], 10);\n                let element = this.chart.element;\n                if (!isNaN(index)) {\n                    if (this.chart.isTouch) {\n                        removeElement(this.chart.element.id + '_EJ2_Legend_Tooltip');\n                    }\n                    if (this.isChartControl) {\n                        showTooltip(this.chart.series[index].name, x, y, element.offsetWidth, element.id + '_EJ2_Legend_Tooltip', getElement(this.chart.element.id + '_Secondary_Element'));\n                    }\n                    else {\n                        showTooltip(this.chart.visibleSeries[0].points[index].x.toString(), x + 10, y + 10, element.offsetWidth, element.id + '_EJ2_Legend_Tooltip', getElement(this.chart.element.id + '_Secondary_Element'));\n                    }\n                }\n            }\n        }\n        else {\n            removeElement(this.chart.element.id + '_EJ2_Legend_Tooltip');\n        }\n        if (this.chart.isTouch) {\n            clearTimeout(this.clearTooltip);\n            this.clearTooltip = setTimeout(() => { removeElement(this.chart.element.id + '_EJ2_Legend_Tooltip'); }, 1000);\n        }\n    }\n}\n/**\n * Class for legend options\n * @private\n */\nclass LegendOptions {\n    constructor(text, fill, shape, visible, type, markerShape, markerVisibility, pointIndex, seriesIndex) {\n        this.location = { x: 0, y: 0 };\n        this.text = text;\n        this.fill = fill;\n        this.shape = shape;\n        this.visible = visible;\n        this.type = type;\n        this.markerVisibility = markerVisibility;\n        this.markerShape = markerShape;\n        this.pointIndex = pointIndex;\n        this.seriesIndex = seriesIndex;\n    }\n}\n\nvar __decorate$6 = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n/// <reference path='../series/chart-series-model.d.ts' />\n/**\n * Defines how to represent the market trend using technical indicators\n */\nclass TechnicalIndicator extends SeriesBase {\n    constructor() {\n        super(...arguments);\n        /** @private */\n        this.clipRect = new Rect(0, 0, 0, 0);\n    }\n    /** @private */\n    setDataSource(series, chart) {\n        if (series) {\n            this.xData = series.xData;\n            this.yData = series.yData;\n            this.points = series.points;\n        }\n        let type = firstToLowerCase(this.type);\n        chart[type + 'IndicatorModule'].initDataSource(this, chart);\n        chart.visibleSeriesCount += this.targetSeries.length;\n    }\n}\n__decorate$6([\n    Property('Sma')\n], TechnicalIndicator.prototype, \"type\", void 0);\n__decorate$6([\n    Property(14)\n], TechnicalIndicator.prototype, \"period\", void 0);\n__decorate$6([\n    Property(14)\n], TechnicalIndicator.prototype, \"kPeriod\", void 0);\n__decorate$6([\n    Property(3)\n], TechnicalIndicator.prototype, \"dPeriod\", void 0);\n__decorate$6([\n    Property(80)\n], TechnicalIndicator.prototype, \"overBought\", void 0);\n__decorate$6([\n    Property(20)\n], TechnicalIndicator.prototype, \"overSold\", void 0);\n__decorate$6([\n    Property(2)\n], TechnicalIndicator.prototype, \"standardDeviation\", void 0);\n__decorate$6([\n    Property('Close')\n], TechnicalIndicator.prototype, \"field\", void 0);\n__decorate$6([\n    Property(12)\n], TechnicalIndicator.prototype, \"slowPeriod\", void 0);\n__decorate$6([\n    Property(26)\n], TechnicalIndicator.prototype, \"fastPeriod\", void 0);\n__decorate$6([\n    Property(true)\n], TechnicalIndicator.prototype, \"showZones\", void 0);\n__decorate$6([\n    Complex({ color: '#ff9933', width: 2 }, Connector)\n], TechnicalIndicator.prototype, \"macdLine\", void 0);\n__decorate$6([\n    Property('Both')\n], TechnicalIndicator.prototype, \"macdType\", void 0);\n__decorate$6([\n    Property('#2ecd71')\n], TechnicalIndicator.prototype, \"macdPositiveColor\", void 0);\n__decorate$6([\n    Property('#e74c3d')\n], TechnicalIndicator.prototype, \"macdNegativeColor\", void 0);\n__decorate$6([\n    Property('rgba(211,211,211,0.25)')\n], TechnicalIndicator.prototype, \"bandColor\", void 0);\n__decorate$6([\n    Complex({ color: '#ffb735', width: 1 }, Connector)\n], TechnicalIndicator.prototype, \"upperLine\", void 0);\n__decorate$6([\n    Complex({ color: '#f2ec2f', width: 1 }, Connector)\n], TechnicalIndicator.prototype, \"lowerLine\", void 0);\n__decorate$6([\n    Complex({ color: '#f2ec2f', width: 1 }, Connector)\n], TechnicalIndicator.prototype, \"periodLine\", void 0);\n__decorate$6([\n    Property('')\n], TechnicalIndicator.prototype, \"seriesName\", void 0);\n\n/**\n * Annotation Module handles the Annotation for chart and accumulation series.\n */\nclass ExportUtils {\n    /**\n     * Constructor for chart and accumulation annotation\n     * @param control\n     */\n    constructor(control) {\n        this.control = control;\n    }\n    /**\n     * To print the accumulation and chart elements\n     * @param elements\n     */\n    print(elements) {\n        this.printWindow = window.open('', 'print', 'height=' + window.outerHeight + ',width=' + window.outerWidth + ',tabbar=no');\n        this.printWindow.moveTo(0, 0);\n        this.printWindow.resizeTo(screen.availWidth, screen.availHeight);\n        let argsData = {\n            cancel: false, htmlContent: this.getHTMLContent(elements), name: beforePrint\n        };\n        this.control.trigger(beforePrint, argsData);\n        if (!argsData.cancel) {\n            print(argsData.htmlContent, this.printWindow);\n        }\n    }\n    /**\n     * To get the html string of the chart and accumulation\n     * @param elements\n     * @private\n     */\n    getHTMLContent(elements) {\n        let div = createElement('div');\n        if (elements) {\n            if (elements instanceof Array) {\n                elements.forEach((value) => {\n                    div.appendChild(getElement(value).cloneNode(true));\n                });\n            }\n            else if (elements instanceof Element) {\n                div.appendChild(elements.cloneNode(true));\n            }\n            else {\n                div.appendChild(getElement(elements).cloneNode(true));\n            }\n        }\n        else {\n            div.appendChild(this.control.element.cloneNode(true));\n        }\n        return div;\n    }\n    /**\n     * To export the file as image/svg format\n     * @param type\n     * @param fileName\n     */\n    export(type, fileName, orientation) {\n        let element = createElement('canvas', {\n            id: 'ej2-canvas',\n            attrs: {\n                'width': this.control.availableSize.width.toString(),\n                'height': this.control.availableSize.height.toString()\n            }\n        });\n        let isDownload = !(Browser.userAgent.toString().indexOf('HeadlessChrome') > -1);\n        orientation = isNullOrUndefined(orientation) ? PdfPageOrientation.Landscape : orientation;\n        let svgData = '<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">' +\n            this.control.svgObject.outerHTML +\n            '</svg>';\n        let url = window.URL.createObjectURL(new Blob(type === 'SVG' ? [svgData] :\n            [(new XMLSerializer()).serializeToString(this.control.svgObject)], { type: 'image/svg+xml' }));\n        if (type === 'SVG') {\n            this.triggerDownload(fileName, type, url, isDownload);\n        }\n        else {\n            let image = new Image();\n            let ctx = element.getContext('2d');\n            image.onload = (() => {\n                ctx.drawImage(image, 0, 0);\n                window.URL.revokeObjectURL(url);\n                if (type === 'PDF') {\n                    let document = new PdfDocument();\n                    let imageString = element.toDataURL('image/jpeg').replace('image/jpeg', 'image/octet-stream');\n                    document.pageSettings.orientation = orientation;\n                    imageString = imageString.slice(imageString.indexOf(',') + 1);\n                    document.pages.add().graphics.drawImage(new PdfBitmap(imageString), 0, 0, this.control.availableSize.width, this.control.availableSize.height);\n                    if (isDownload) {\n                        document.save(fileName + '.pdf');\n                        document.destroy();\n                    }\n                }\n                else {\n                    if (window.navigator.msSaveOrOpenBlob) {\n                        window.navigator.msSaveOrOpenBlob(element.msToBlob(), fileName + '.' + type.toLocaleLowerCase());\n                    }\n                    else {\n                        this.triggerDownload(fileName, type, element.toDataURL('image/png').replace('image/png', 'image/octet-stream'), isDownload);\n                    }\n                }\n            });\n            image.src = url;\n        }\n    }\n    /**\n     * To trigger the download element\n     * @param fileName\n     * @param type\n     * @param url\n     */\n    triggerDownload(fileName, type, url, isDownload) {\n        createElement('a', {\n            attrs: {\n                'download': fileName + '.' + type.toLocaleLowerCase(),\n                'href': url\n            }\n        }).dispatchEvent(new MouseEvent(isDownload ? 'click' : 'move', {\n            view: window,\n            bubbles: false,\n            cancelable: true\n        }));\n    }\n}\n\nvar __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n/**\n * Configures the crosshair in the chart.\n */\nclass CrosshairSettings extends ChildProperty {\n}\n__decorate([\n    Property(false)\n], CrosshairSettings.prototype, \"enable\", void 0);\n__decorate([\n    Complex({ color: null, width: 1 }, Border)\n], CrosshairSettings.prototype, \"line\", void 0);\n__decorate([\n    Property('Both')\n], CrosshairSettings.prototype, \"lineType\", void 0);\n/**\n * Configures the zooming behavior for the chart.\n */\nclass ZoomSettings extends ChildProperty {\n}\n__decorate([\n    Property(false)\n], ZoomSettings.prototype, \"enableSelectionZooming\", void 0);\n__decorate([\n    Property(false)\n], ZoomSettings.prototype, \"enablePinchZooming\", void 0);\n__decorate([\n    Property(false)\n], ZoomSettings.prototype, \"enableMouseWheelZooming\", void 0);\n__decorate([\n    Property(true)\n], ZoomSettings.prototype, \"enableDeferredZooming\", void 0);\n__decorate([\n    Property('XY')\n], ZoomSettings.prototype, \"mode\", void 0);\n__decorate([\n    Property(['Zoom', 'ZoomIn', 'ZoomOut', 'Pan', 'Reset'])\n], ZoomSettings.prototype, \"toolbarItems\", void 0);\n__decorate([\n    Property(false)\n], ZoomSettings.prototype, \"enablePan\", void 0);\n/**\n * Represents the Chart control.\n * ```html\n * <div id=\"chart\"/>\n * <script>\n *   var chartObj = new Chart({ isResponsive : true });\n *   chartObj.appendTo(\"#chart\");\n * </script>\n * ```\n */\nlet Chart = class Chart extends Component {\n    /**\n     * Constructor for creating the widget\n     * @hidden\n     */\n    constructor(options, element) {\n        super(options, element);\n        /** @private */\n        this.chartAreaType = 'Cartesian';\n    }\n    /**\n     * Initialize the event handler.\n     */\n    preRender() {\n        this.unWireEvents();\n        this.initPrivateVariable();\n        this.setCulture();\n        this.wireEvents();\n    }\n    initPrivateVariable() {\n        this.animateSeries = true;\n        this.delayRedraw = false;\n        this.horizontalAxes = [];\n        this.verticalAxes = [];\n        this.refreshAxis();\n        this.refreshDefinition(this.rows);\n        this.refreshDefinition(this.columns);\n        if (this.tooltipModule) {\n            this.tooltipModule.previousPoints = [];\n        }\n    }\n    /**\n     * To Initialize the control rendering.\n     */\n    render() {\n        this.trigger(load, { chart: this });\n        this.createChartSvg();\n        this.setTheme();\n        this.markerRender = new Marker(this);\n        this.calculateAreaType();\n        this.calculateVisibleSeries();\n        this.initTechnicalIndicators();\n        this.initTrendLines();\n        this.calculateVisibleAxis();\n        this.processData();\n    }\n    /**\n     * Gets the localized label by locale keyword.\n     * @param  {string} key\n     * @return {string}\n     */\n    getLocalizedLabel(key) {\n        return this.localeObject.getConstant(key);\n    }\n    /**\n     * Refresh the chart bounds.\n     * @private\n     */\n    refreshBound() {\n        if (this.legendModule && this.legendSettings.visible) {\n            this.legendModule.getLegendOptions(this.visibleSeries, this);\n        }\n        let isCalculateStacking = false;\n        let series;\n        for (let i = 0, len = this.visibleSeries.length; i < len; i++) {\n            series = this.visibleSeries[i];\n            series.position = series.rectCount = undefined;\n            if (((series.type.indexOf('Stacking') !== -1) || (series.drawType.indexOf('Stacking') !== -1\n                && this.chartAreaType === 'PolarRadar')) && !isCalculateStacking) {\n                series.calculateStackedValue(series.type.indexOf('100') > -1, this);\n                isCalculateStacking = true;\n            }\n        }\n        this.calculateBounds();\n        this.renderElements();\n    }\n    renderElements() {\n        this.renderBorder();\n        this.renderTitle();\n        this.renderAreaBorder();\n        let axisElement = this.renderAxes();\n        this.renderSeriesElements(axisElement);\n        this.renderLegend();\n        this.applyZoomkit();\n        this.performSelection();\n        this.setSecondaryElementPosition();\n        this.renderAnnotation();\n    }\n    /**\n     * To render the legend\n     */\n    renderAxes() {\n        this.yAxisElements = this.renderer.createGroup({ id: this.element.id + 'yAxisCollection' });\n        let axisElement;\n        if (this.rows.length > 0 && this.columns.length > 0) {\n            axisElement = this.chartAxisLayoutPanel.renderAxes();\n        }\n        if (this.stripLineModule) {\n            this.stripLineModule.renderStripLine(this, 'Behind', this.axisCollections);\n        }\n        return axisElement;\n    }\n    /**\n     * To render the legend\n     */\n    renderLegend() {\n        if (this.legendModule && this.legendModule.legendCollections.length) {\n            this.legendModule.renderLegend(this, this.legendSettings, this.legendModule.legendBounds);\n        }\n        this.element.appendChild(this.svgObject);\n    }\n    /**\n     * To set the left and top position for data label template for center aligned chart\n     */\n    setSecondaryElementPosition() {\n        let element = getElement(this.element.id + '_Secondary_Element');\n        if (!element) {\n            return;\n        }\n        let rect = this.element.getBoundingClientRect();\n        let svgRect = getElement(this.element.id + '_svg').getBoundingClientRect();\n        element.style.left = Math.max(svgRect.left - rect.left, 0) + 'px';\n        element.style.top = Math.max(svgRect.top - rect.top, 0) + 'px';\n    }\n    initializeModuleElements() {\n        this.dataLabelCollections = [];\n        this.seriesElements = this.renderer.createGroup({ id: this.element.id + 'SeriesCollection' });\n        if (this.indicators.length) {\n            this.indicatorElements = this.renderer.createGroup({ id: this.element.id + 'IndicatorCollection' });\n        }\n        if (this.hasTrendlines()) {\n            this.trendLineElements = this.renderer.createGroup({ id: this.element.id + 'TrendLineCollection' });\n        }\n        this.dataLabelElements = this.renderer.createGroup({ id: this.element.id + 'DataLabelCollection' });\n    }\n    hasTrendlines() {\n        let isTrendline;\n        for (let series of this.series) {\n            isTrendline = series.trendlines.length ? true : false;\n            if (isTrendline) {\n                break;\n            }\n        }\n        return isTrendline;\n    }\n    renderSeriesElements(axisElement) {\n        // Initialize the series elements values\n        this.initializeModuleElements();\n        let tooltipDiv = document.createElement('div');\n        tooltipDiv.id = this.element.id + '_Secondary_Element';\n        tooltipDiv.setAttribute('style', 'position: relative');\n        this.element.appendChild(tooltipDiv);\n        // For userInteraction\n        if (this.tooltip.enable) {\n            this.svgObject.appendChild(this.renderer.createGroup({ id: this.element.id + '_UserInteraction', style: 'pointer-events:none;' }));\n        }\n        if (this.rows.length > 0 && this.columns.length > 0) {\n            this.initializeIndicator();\n            this.initializeTrendLine();\n            this.renderSeries();\n            this.appendElementsAfterSeries(axisElement);\n        }\n    }\n    renderSeries() {\n        for (let item of this.visibleSeries) {\n            if (item.visible) {\n                findClipRect(item);\n                item.renderSeries(this, item.index);\n            }\n        }\n        let clipRect = this.renderer.drawClipPath({\n            'id': this.element.id + '_ChartAreaClipRect_',\n            'x': this.chartAxisLayoutPanel.seriesClipRect.x,\n            'y': this.chartAxisLayoutPanel.seriesClipRect.y,\n            'width': this.chartAxisLayoutPanel.seriesClipRect.width,\n            'height': this.chartAxisLayoutPanel.seriesClipRect.height,\n            'fill': 'transparent',\n            'stroke-width': 1,\n            'stroke': 'Gray'\n        });\n        this.seriesElements.appendChild(clipRect);\n        this.svgObject.appendChild(this.seriesElements);\n    }\n    initializeIndicator() {\n        for (let indicator of this.indicators) {\n            if (this[firstToLowerCase(indicator.type) + 'IndicatorModule']) {\n                this[firstToLowerCase(indicator.type) + 'IndicatorModule'].createIndicatorElements(this, indicator, indicator.index);\n            }\n        }\n        if (this.indicatorElements) {\n            this.svgObject.appendChild(this.indicatorElements);\n        }\n    }\n    initializeTrendLine() {\n        for (let series of this.visibleSeries) {\n            if (series.trendlines.length) {\n                this.trendLineModule.getTrendLineElements(series, this);\n            }\n        }\n        if (this.trendLineElements) {\n            this.svgObject.appendChild(this.trendLineElements);\n        }\n    }\n    appendElementsAfterSeries(axisElement) {\n        if (this.chartAreaType === 'PolarRadar') {\n            this.svgObject.appendChild(this.yAxisElements);\n        }\n        this.svgObject.appendChild(axisElement);\n        if (this.stripLineModule) {\n            this.stripLineModule.renderStripLine(this, 'Over', this.axisCollections);\n        }\n        if (!this.tooltip.enable) {\n            this.svgObject.appendChild(this.renderer.createGroup({ id: this.element.id + '_UserInteraction', style: 'pointer-events:none;' }));\n        }\n    }\n    applyZoomkit() {\n        if (this.zoomModule && this.zoomModule.isZoomed && (!this.zoomSettings.enablePan || this.zoomModule.performedUI)) {\n            this.zoomModule.applyZoomToolkit(this, this.axisCollections);\n        }\n    }\n    renderAnnotation() {\n        if (this.annotationModule) {\n            this.annotationModule.renderAnnotations(getElement(this.element.id + '_Secondary_Element'));\n        }\n    }\n    performSelection() {\n        let selectedDataIndexes = [];\n        if (this.selectionModule) {\n            selectedDataIndexes = extend([], this.selectionModule.selectedDataIndexes, null, true);\n            this.selectionModule.invokeSelection(this);\n        }\n        if (selectedDataIndexes.length > 0) {\n            this.selectionModule.selectedDataIndexes = selectedDataIndexes;\n            this.selectionModule.redrawSelection(this, this.selectionMode);\n        }\n    }\n    processData() {\n        this.visibleSeriesCount = 0;\n        let check = true;\n        for (let series of this.visibleSeries) {\n            if (!series.visible && !this.legendSettings.visible) {\n                this.visibleSeriesCount++;\n                continue;\n            }\n            if (series.category !== 'Indicator' && series.category !== 'TrendLine') {\n                this.initializeDataModule(series);\n            }\n        }\n        for (let indicator of this.indicators) {\n            if (indicator.dataSource) {\n                let techIndicator = indicator;\n                this.initializeDataModule(techIndicator);\n                check = false;\n            }\n        }\n        if (!this.visibleSeries.length || this.visibleSeriesCount === this.visibleSeries.length && check) {\n            this.refreshBound();\n            this.trigger('loaded', { chart: this });\n        }\n    }\n    initializeDataModule(series) {\n        series.xData = [];\n        series.yData = [];\n        series.dataModule = new Data(series.dataSource, series.query);\n        series.points = [];\n        series.refreshDataManager(this);\n    }\n    calculateBounds() {\n        let margin = this.margin;\n        // Title Height;\n        let titleHeight = 0;\n        let padding = 15;\n        let left = margin.left;\n        let width = this.availableSize.width - left - margin.right - this.border.width;\n        this.titleCollection = [];\n        if (this.title) {\n            this.titleCollection = getTitle(this.title, this.titleStyle, width);\n            titleHeight = (measureText(this.title, this.titleStyle).height * this.titleCollection.length) + padding;\n        }\n        let top = margin.top + titleHeight + this.chartArea.border.width / 2;\n        let height = this.availableSize.height - top - this.border.width - margin.bottom;\n        this.initialClipRect = new Rect(left, top, width, height);\n        if (this.legendModule) {\n            this.legendModule.calculateLegendBounds(this.initialClipRect, this.availableSize);\n        }\n        this.chartAxisLayoutPanel.measureAxis(this.initialClipRect);\n    }\n    /**\n     * Handles the print method for chart control.\n     */\n    print(id) {\n        let exportChart = new ExportUtils(this);\n        exportChart.print(id);\n    }\n    /**\n     * Handles the export method for chart control.\n     * @param type\n     * @param fileName\n     */\n    export(type, fileName, orientation) {\n        let exportChart = new ExportUtils(this);\n        exportChart.export(type, fileName, orientation);\n    }\n    /**\n     * Defines the trendline initialization\n     */\n    initTrendLines() {\n        for (let series of this.visibleSeries) {\n            let trendIndex = 0;\n            for (let trendline of series.trendlines) {\n                let trendLine = trendline;\n                let type = firstToLowerCase(trendLine.type);\n                if (this.trendLineModule) {\n                    trendLine.index = trendIndex;\n                    trendLine.sourceIndex = series.index;\n                    this.trendLineModule.initSeriesCollection(trendLine, this);\n                    if (trendLine.targetSeries) {\n                        trendLine.targetSeries.xAxisName = series.xAxisName;\n                        trendLine.targetSeries.yAxisName = series.yAxisName;\n                        this.visibleSeries.push(trendLine.targetSeries);\n                    }\n                }\n                trendIndex++;\n            }\n        }\n    }\n    calculateAreaType() {\n        let series = this.series[0];\n        if (series) {\n            this.requireInvertedAxis = ((series.type.indexOf('Bar') !== -1) && !this.isTransposed) ||\n                ((series.type.indexOf('Bar') === -1) && this.isTransposed && this.chartAreaType !== 'PolarRadar');\n        }\n        this.chartAxisLayoutPanel = this.chartAreaType === 'PolarRadar' ? (this.polarSeriesModule || this.radarSeriesModule)\n            : new CartesianAxisLayoutPanel(this);\n    }\n    calculateVisibleAxis() {\n        let axis;\n        let axes = [this.primaryXAxis, this.primaryYAxis];\n        axes = this.chartAreaType === 'Cartesian' ? axes.concat(this.axes) : axes;\n        this.axisCollections = [];\n        if (this.zoomModule) {\n            this.zoomModule.isPanning = this.zoomModule.isAxisZoomed(axes) && this.zoomSettings.enablePan;\n            this.svgObject.setAttribute('cursor', this.zoomModule.isPanning ? 'pointer' : 'auto');\n        }\n        for (let i = 0, len = axes.length; i < len; i++) {\n            axis = axes[i];\n            axis.series = [];\n            axis.labels = [];\n            for (let series of this.visibleSeries) {\n                this.initAxis(series, axis, true);\n            }\n            for (let indicator of this.indicators) {\n                this.initAxis(indicator, axis, false);\n            }\n            if (axis.orientation != null) {\n                this.axisCollections.push(axis);\n            }\n        }\n        if (this.rows.length > 0 && this.columns.length > 0) {\n            this.chartAxisLayoutPanel.measure();\n        }\n    }\n    initAxis(series, axis, isSeries) {\n        if (series.xAxisName === axis.name || (series.xAxisName == null && axis.name === 'primaryXAxis')) {\n            axis.orientation = this.requireInvertedAxis ? 'Vertical' : 'Horizontal';\n            series.xAxis = axis;\n            if (isSeries) {\n                axis.series.push(series);\n            }\n        }\n        else if (series.yAxisName === axis.name || (series.yAxisName == null && axis.name === 'primaryYAxis')) {\n            axis.orientation = this.requireInvertedAxis ? 'Horizontal' : 'Vertical';\n            series.yAxis = axis;\n            if (isSeries) {\n                axis.series.push(series);\n            }\n        }\n    }\n    initTechnicalIndicators() {\n        let i = 0;\n        for (let indicator of this.indicators) {\n            let techIndicator = indicator;\n            let type = firstToLowerCase(techIndicator.type);\n            if (this[type + 'IndicatorModule']) {\n                techIndicator.index = i;\n                this[type + 'IndicatorModule'].initSeriesCollection(techIndicator, this);\n                for (let targetSeries of techIndicator.targetSeries) {\n                    if (indicator.seriesName || indicator.dataSource) {\n                        this.visibleSeries.push(targetSeries);\n                    }\n                }\n            }\n            i++;\n        }\n    }\n    /** @private */\n    refreshTechnicalIndicator(series) {\n        if (this.indicators.length) {\n            let targetIndicator = null;\n            if (series instanceof Series && series.category !== 'Indicator') {\n                for (let indicator of this.indicators) {\n                    if (indicator.seriesName === series.name && !indicator.dataSource) {\n                        targetIndicator = indicator;\n                        targetIndicator.setDataSource(series, this);\n                    }\n                }\n            }\n            else if (series instanceof TechnicalIndicator) {\n                targetIndicator = series;\n                targetIndicator.setDataSource(series instanceof Series ? series : null, this);\n            }\n        }\n    }\n    calculateVisibleSeries() {\n        let series;\n        this.visibleSeries = [];\n        let colors = this.palettes.length ? this.palettes : getSeriesColor(this.theme);\n        let count = colors.length;\n        for (let i = 0, len = this.series.length; i < len; i++) {\n            series = this.series[i];\n            series.index = i;\n            series.interior = series.fill || colors[i % count];\n            switch (series.type) {\n                case 'Bar':\n                case 'StackingBar':\n                case 'StackingBar100':\n                    if (this.series[0].type.indexOf('Bar') === -1) {\n                        continue;\n                    }\n                    break;\n                case 'Polar':\n                case 'Radar':\n                    if (this.chartAreaType !== 'PolarRadar') {\n                        continue;\n                    }\n                    if (this.chartAreaType === 'PolarRadar' && ((series.xAxisName === null && series.yAxisName !== null) ||\n                        (series.xAxisName !== null && series.yAxisName === null) ||\n                        (series.xAxisName !== null && series.yAxisName !== null))) {\n                        continue;\n                    }\n                    break;\n                default:\n                    if (this.chartAreaType === 'PolarRadar' || this.series[0].type.indexOf('Bar') > -1) {\n                        continue;\n                    }\n                    break;\n            }\n            this.visibleSeries.push(series);\n            this.series[i] = series;\n        }\n    }\n    renderTitle() {\n        if (this.title) {\n            let anchor = this.titleStyle.textAlignment === 'Near' ? 'start' :\n                this.titleStyle.textAlignment === 'Far' ? 'end' : 'middle';\n            this.elementSize = measureText(this.title, this.titleStyle);\n            let options = new TextOption(this.element.id + '_ChartTitle', titlePositionX(this.availableSize, this.margin.left, this.margin.right, this.titleStyle), this.margin.top + ((this.elementSize.height) * 3 / 4), anchor, this.titleCollection, '', 'auto');\n            let element = textElement(options, this.titleStyle, this.titleStyle.color || this.themeStyle.chartTitle, this.svgObject);\n            element.setAttribute('aria-label', this.description || this.title);\n            element.setAttribute('tabindex', this.tabIndex.toString());\n        }\n    }\n    renderBorder() {\n        let width = this.border.width;\n        let rect = new RectOption(this.element.id + '_ChartBorder', this.background || this.themeStyle.background, this.border, 1, new Rect(width / 2, width / 2, this.availableSize.width - width, this.availableSize.height - width));\n        this.htmlObject = this.renderer.drawRectangle(rect);\n        this.svgObject.appendChild(this.htmlObject);\n    }\n    renderAreaBorder() {\n        if (this.chartAreaType === 'PolarRadar') {\n            return null;\n        }\n        else {\n            let rect = new RectOption(this.element.id + '_ChartAreaBorder', this.chartArea.background, { width: this.chartArea.border.width, color: this.chartArea.border.color || this.themeStyle.areaBorder }, this.chartArea.opacity, this.chartAxisLayoutPanel.seriesClipRect);\n            this.htmlObject = this.renderer.drawRectangle(rect);\n            this.svgObject.appendChild(this.htmlObject);\n        }\n    }\n    /**\n     * To add series for the chart\n     * @param {SeriesModel[]} seriesCollection - Defines the series collection to be added in chart.\n     * @return {void}.\n     */\n    addSeries(seriesCollection) {\n        for (let series of seriesCollection) {\n            series = new Series(this, 'series', series);\n            this.series.push(series);\n        }\n        this.refresh();\n    }\n    /**\n     * To Remove series for the chart\n     * @param index - Defines the series index to be remove in chart series\n     * @return {void}\n     */\n    removeSeries(index) {\n        this.series.splice(index, 1);\n        this.refresh();\n    }\n    /**\n     * To destroy the widget\n     * @method destroy\n     * @return {void}.\n     * @member of Chart\n     */\n    destroy() {\n        this.unWireEvents();\n        super.destroy();\n        this.element.classList.remove('e-chart');\n    }\n    /**\n     * Get component name\n     */\n    getModuleName() {\n        return 'chart';\n    }\n    /**\n     * Get the properties to be maintained in the persisted state.\n     * @private\n     */\n    getPersistData() {\n        let keyEntity = ['loaded', 'animationComplete'];\n        return this.addOnPersist(keyEntity);\n    }\n    /**\n     * Method to create SVG element.\n     */\n    createChartSvg() {\n        this.removeSvg();\n        createSvg(this);\n    }\n    /**\n     * Method to bind events for chart\n     */\n    unWireEvents() {\n        /*! Find the Events type */\n        let startEvent = Browser.touchStartEvent;\n        let moveEvent = Browser.touchMoveEvent;\n        let stopEvent = Browser.touchEndEvent;\n        let cancelEvent = Browser.isPointer ? 'pointerleave' : 'mouseleave';\n        /*! UnBind the Event handler */\n        EventHandler.remove(this.element, startEvent, this.chartOnMouseDown);\n        EventHandler.remove(this.element, moveEvent, this.mouseMove);\n        EventHandler.remove(this.element, stopEvent, this.mouseEnd);\n        EventHandler.remove(this.element, 'click', this.chartOnMouseClick);\n        EventHandler.remove(this.element, 'contextmenu', this.chartRightClick);\n        EventHandler.remove(this.element, cancelEvent, this.mouseLeave);\n        window.removeEventListener((Browser.isTouch && ('orientation' in window && 'onorientationchange' in window)) ? 'orientationchange' : 'resize', this.chartResize);\n    }\n    wireEvents() {\n        /*! Find the Events type */\n        let cancelEvent = Browser.isPointer ? 'pointerleave' : 'mouseleave';\n        /*! Bind the Event handler */\n        EventHandler.add(this.element, Browser.touchStartEvent, this.chartOnMouseDown, this);\n        EventHandler.add(this.element, Browser.touchMoveEvent, this.mouseMove, this);\n        EventHandler.add(this.element, Browser.touchEndEvent, this.mouseEnd, this);\n        EventHandler.add(this.element, 'click', this.chartOnMouseClick, this);\n        EventHandler.add(this.element, 'contextmenu', this.chartRightClick, this);\n        EventHandler.add(this.element, cancelEvent, this.mouseLeave, this);\n        window.addEventListener((Browser.isTouch && ('orientation' in window && 'onorientationchange' in window)) ? 'orientationchange' : 'resize', this.chartResize.bind(this));\n        this.longPress = this.longPress.bind(this);\n        new Touch(this.element, { tapHold: this.longPress, tapHoldThreshold: 500 });\n        /*! Apply the style for chart */\n        this.setStyle(this.element);\n    }\n    chartRightClick(event) {\n        if (this.crosshair.enable && this.crosshairModule &&\n            (event.buttons === 2 || event.which === 0 || event.pointerType === 'touch')) {\n            event.preventDefault();\n            event.stopPropagation();\n            return false;\n        }\n        return true;\n    }\n    setStyle(element) {\n        let zooming = this.zoomSettings;\n        let disableScroll = zooming.enableSelectionZooming || zooming.enableMouseWheelZooming || zooming.enablePinchZooming ||\n            this.selectionMode !== 'None' || this.crosshair.enable;\n        element.style.touchAction = disableScroll ? 'none' : 'element';\n        element.style.msTouchAction = disableScroll ? 'none' : 'element';\n        element.style.msContentZooming = 'none';\n        element.style.msUserSelect = 'none';\n        element.style.webkitUserSelect = 'none';\n        element.style.position = 'relative';\n        element.style.display = 'block';\n    }\n    /**\n     * Finds the orientation.\n     * @return {boolean}\n     * @private\n     */\n    isOrientation() {\n        return ('orientation' in window && 'onorientationchange' in window);\n    }\n    /**\n     * Handles the long press on chart.\n     * @return {boolean}\n     * @private\n     */\n    longPress(e) {\n        this.mouseX = (e && e.originalEvent.changedTouches) ? (e.originalEvent.changedTouches[0].clientX) : 0;\n        this.mouseY = (e && e.originalEvent.changedTouches) ? (e.originalEvent.changedTouches[0].clientY) : 0;\n        this.startMove = true;\n        this.setMouseXY(this.mouseX, this.mouseY);\n        this.notify('tapHold', e);\n        return false;\n    }\n    /**\n     * To find mouse x, y for aligned chart element svg position\n     */\n    setMouseXY(pageX, pageY) {\n        let rect = this.element.getBoundingClientRect();\n        let svgRect = getElement(this.element.id + '_svg').getBoundingClientRect();\n        this.mouseX = (pageX - rect.left) - Math.max(svgRect.left - rect.left, 0);\n        this.mouseY = (pageY - rect.top) - Math.max(svgRect.top - rect.top, 0);\n    }\n    /**\n     * Handles the chart resize.\n     * @return {boolean}\n     * @private\n     */\n    chartResize(e) {\n        this.animateSeries = false;\n        if (this.resizeTo) {\n            clearTimeout(this.resizeTo);\n        }\n        this.resizeTo = setTimeout(() => {\n            if (this.isDestroyed) {\n                clearTimeout(this.resizeTo);\n                return;\n            }\n            this.createChartSvg();\n            this.refreshAxis();\n            this.refreshBound();\n            this.trigger('loaded', { chart: this });\n        }, 500);\n        return false;\n    }\n    /**\n     * Handles the mouse move.\n     * @return {boolean}\n     * @private\n     */\n    mouseMove(e) {\n        let pageX;\n        let pageY;\n        let touchArg;\n        if (e.type === 'touchmove') {\n            this.isTouch = true;\n            touchArg = e;\n            pageX = touchArg.changedTouches[0].clientX;\n            pageY = touchArg.changedTouches[0].clientY;\n        }\n        else {\n            this.isTouch = e.pointerType === 'touch' || e.pointerType === '2' || this.isTouch;\n            pageX = e.clientX;\n            pageY = e.clientY;\n        }\n        this.setMouseXY(pageX, pageY);\n        this.chartOnMouseMove(e);\n        return false;\n    }\n    /**\n     * Handles the mouse leave.\n     * @return {boolean}\n     * @private\n     */\n    mouseLeave(e) {\n        let pageX;\n        let pageY;\n        let touchArg;\n        if (e.type === 'touchleave') {\n            this.isTouch = true;\n            touchArg = e;\n            pageX = touchArg.changedTouches[0].clientX;\n            pageY = touchArg.changedTouches[0].clientY;\n        }\n        else {\n            this.isTouch = e.pointerType === 'touch' || e.pointerType === '2';\n            pageX = e.clientX;\n            pageY = e.clientY;\n        }\n        this.setMouseXY(pageX, pageY);\n        this.chartOnMouseLeave(e);\n        return false;\n    }\n    /**\n     * Handles the mouse leave on chart.\n     * @return {boolean}\n     * @private\n     */\n    chartOnMouseLeave(e) {\n        let element = e.target;\n        let cancelEvent = Browser.isPointer ? 'pointerleave' : 'mouseleave';\n        this.trigger(chartMouseLeave, { target: element.id, x: this.mouseX, y: this.mouseY });\n        this.isChartDrag = false;\n        this.notify(cancelEvent, e);\n        return false;\n    }\n    /**\n     * Handles the mouse click on chart.\n     * @return {boolean}\n     * @private\n     */\n    chartOnMouseClick(e) {\n        let element = e.target;\n        this.trigger(chartMouseClick, { target: element.id, x: this.mouseX, y: this.mouseY });\n        if (this.pointClick) {\n            this.triggerPointEvent(pointClick);\n        }\n        this.notify('click', e);\n        return false;\n    }\n    triggerPointEvent(event) {\n        let data = new ChartData(this);\n        let pointData = data.getData();\n        if (pointData.series && pointData.point) {\n            this.trigger(event, { series: pointData.series,\n                point: pointData.point,\n                seriesIndex: pointData.series.index, pointIndex: pointData.point.index,\n                x: this.mouseX, y: this.mouseY });\n        }\n    }\n    /**\n     * Handles the mouse move on chart.\n     * @return {boolean}\n     * @private\n     */\n    chartOnMouseMove(e) {\n        let element = e.target;\n        this.trigger(chartMouseMove, { target: element.id, x: this.mouseX, y: this.mouseY });\n        if (this.pointMove) {\n            this.triggerPointEvent(pointMove);\n        }\n        // Tooltip for chart series.\n        if (!this.isTouch) {\n            this.titleTooltip(e, this.mouseX, this.mouseY);\n            this.axisTooltip(e, this.mouseX, this.mouseY);\n        }\n        this.notify(Browser.touchMoveEvent, e);\n        this.isTouch = false;\n        return false;\n    }\n    titleTooltip(event, x, y, isTouch) {\n        let targetId = event.target.id;\n        if ((targetId === (this.element.id + '_ChartTitle')) && (event.target.textContent.indexOf('...') > -1)) {\n            showTooltip(this.title, x, y, this.element.offsetWidth, this.element.id + '_EJ2_Title_Tooltip', getElement(this.element.id + '_Secondary_Element'), isTouch);\n        }\n        else {\n            removeElement(this.element.id + '_EJ2_Title_Tooltip');\n        }\n    }\n    axisTooltip(event, x, y, isTouch) {\n        let targetId = event.target.id;\n        if (((targetId.indexOf('AxisLabel') > -1) || targetId.indexOf('Axis_MultiLevelLabel') > -1) &&\n            (event.target.textContent.indexOf('...') > -1)) {\n            showTooltip(this.findAxisLabel(targetId), x, y, this.element.offsetWidth, this.element.id + '_EJ2_AxisLabel_Tooltip', getElement(this.element.id + '_Secondary_Element'), isTouch);\n        }\n        else {\n            removeElement(this.element.id + '_EJ2_AxisLabel_Tooltip');\n        }\n    }\n    findAxisLabel(text) {\n        let texts;\n        if (text.indexOf('AxisLabel') > -1) {\n            texts = ((text.replace(this.element.id, '')).replace('AxisLabel_', '')).split('_');\n            return this.axisCollections[parseInt(texts[0], 10)].visibleLabels[parseInt(texts[1], 10)].originalText;\n        }\n        else {\n            texts = ((text.replace(this.element.id, '')).replace('Axis_MultiLevelLabel_Level_', '').replace('Text_', '')).split('_');\n            return (this.axisCollections[parseInt(texts[0], 10)].multiLevelLabels[parseInt(texts[1], 10)]\n                .categories[parseInt(texts[2], 10)].text);\n        }\n    }\n    /**\n     * Handles the mouse down on chart.\n     * @return {boolean}\n     * @private\n     */\n    chartOnMouseDown(e) {\n        let pageX;\n        let pageY;\n        let target;\n        let touchArg;\n        let offset = Browser.isDevice ? 20 : 30;\n        let rect = this.element.getBoundingClientRect();\n        let element = e.target;\n        this.trigger(chartMouseDown, { target: element.id, x: this.mouseX, y: this.mouseY });\n        if (e.type === 'touchstart') {\n            this.isTouch = true;\n            touchArg = e;\n            pageX = touchArg.changedTouches[0].clientX;\n            pageY = touchArg.changedTouches[0].clientY;\n            target = touchArg.target;\n        }\n        else {\n            this.isTouch = e.pointerType === 'touch';\n            pageX = e.clientX;\n            pageY = e.clientY;\n            target = e.target;\n        }\n        let svgRect = getElement(this.element.id + '_svg').getBoundingClientRect();\n        this.mouseDownX = this.previousMouseMoveX = (pageX - rect.left) - Math.max(svgRect.left - rect.left, 0);\n        this.mouseDownY = this.previousMouseMoveY = (pageY - rect.top) - Math.max(svgRect.top - rect.top, 0);\n        if (this.isTouch) {\n            this.isDoubleTap = (new Date().getTime() < this.threshold && target.id.indexOf(this.element.id + '_Zooming_') === -1 &&\n                (this.mouseDownX - offset >= this.mouseX || this.mouseDownX + offset >= this.mouseX) &&\n                (this.mouseDownY - offset >= this.mouseY || this.mouseDownY + offset >= this.mouseY) &&\n                (this.mouseX - offset >= this.mouseDownX || this.mouseX + offset >= this.mouseDownX) &&\n                (this.mouseY - offset >= this.mouseDownY || this.mouseY + offset >= this.mouseDownY));\n        }\n        this.notify(Browser.touchStartEvent, e);\n        return false;\n    }\n    /**\n     * Handles the mouse up.\n     * @return {boolean}\n     * @private\n     */\n    mouseEnd(e) {\n        let pageY;\n        let pageX;\n        let touchArg;\n        if (e.type === 'touchend') {\n            touchArg = e;\n            pageX = touchArg.changedTouches[0].clientX;\n            this.isTouch = true;\n            pageY = touchArg.changedTouches[0].clientY;\n        }\n        else {\n            pageY = e.clientY;\n            pageX = e.clientX;\n            this.isTouch = e.pointerType === 'touch' || e.pointerType === '2';\n        }\n        this.setMouseXY(pageX, pageY);\n        this.chartOnMouseUp(e);\n        return false;\n    }\n    /**\n     * Handles the mouse up.\n     * @return {boolean}\n     * @private\n     */\n    chartOnMouseUp(e) {\n        let element = e.target;\n        this.trigger(chartMouseUp, { target: element.id, x: this.mouseX, y: this.mouseY });\n        this.isChartDrag = false;\n        if (this.isTouch) {\n            this.titleTooltip(e, this.mouseX, this.mouseY, this.isTouch);\n            this.axisTooltip(e, this.mouseX, this.mouseY, this.isTouch);\n            this.threshold = new Date().getTime() + 300;\n        }\n        this.seriesElements.removeAttribute('clip-path');\n        this.notify(Browser.touchEndEvent, e);\n        return false;\n    }\n    /**\n     * Method to set culture for chart\n     */\n    setCulture() {\n        this.intl = new Internationalization();\n        this.setLocaleConstants();\n        this.localeObject = new L10n(this.getModuleName(), this.defaultLocalConstants, this.locale);\n    }\n    /**\n     * Method to set the annotation content dynamically for chart.\n     */\n    setAnnotationValue(annotationIndex, content) {\n        let parentNode = getElement(this.element.id + '_Annotation_Collections');\n        let annotation = this.annotations[annotationIndex];\n        let element;\n        if (content !== null) {\n            annotation.content = content;\n            if (parentNode) {\n                removeElement(this.element.id + '_Annotation_' + annotationIndex);\n                element = createElement('div');\n                this.annotationModule.processAnnotation(annotation, annotationIndex, element);\n                parentNode.appendChild(element.children[0]);\n            }\n            else {\n                this.annotationModule.renderAnnotations(getElement(this.element.id + '_Secondary_Element'));\n            }\n        }\n    }\n    /**\n     * Method to set locale constants\n     */\n    setLocaleConstants() {\n        this.defaultLocalConstants = {\n            ZoomIn: 'ZoomIn',\n            Zoom: 'Zoom',\n            ZoomOut: 'ZoomOut',\n            Pan: 'Pan',\n            Reset: 'Reset',\n            ResetZoom: 'Reset Zoom'\n        };\n    }\n    /**\n     * Theming for chart\n     */\n    setTheme() {\n        /*! Set theme */\n        this.themeStyle = getThemeColor(this.theme);\n    }\n    /**\n     * To provide the array of modules needed for control rendering\n     * @return {ModuleDeclaration[]}\n     * @private\n     */\n    requiredModules() {\n        let modules = [];\n        let series = this.series;\n        let enableAnnotation = false;\n        let moduleName;\n        let errorBarVisible = false;\n        let dataLabelEnable = false;\n        let zooming = this.zoomSettings;\n        this.chartAreaType = (series.length > 0 && (series[0].type === 'Polar' || series[0].type === 'Radar')) ? 'PolarRadar' : 'Cartesian';\n        if (this.tooltip.enable) {\n            modules.push({\n                member: 'Tooltip',\n                args: [this]\n            });\n        }\n        series.map((value) => {\n            this.isLegend = (this.legendSettings.visible && ((value.name !== '') || !!this.isLegend));\n            moduleName = value.type.indexOf('100') !== -1 ? value.type.replace('100', '') + 'Series' : value.type + 'Series';\n            errorBarVisible = value.errorBar.visible || errorBarVisible;\n            dataLabelEnable = value.marker.dataLabel.visible || dataLabelEnable;\n            if (!modules.some((currentModule) => {\n                return currentModule.member === moduleName;\n            })) {\n                modules.push({\n                    member: moduleName,\n                    args: [this, series]\n                });\n            }\n            if (this.chartAreaType === 'PolarRadar') {\n                modules.push({\n                    member: value.drawType + 'Series',\n                    args: [this, series]\n                });\n            }\n        });\n        this.findIndicatorModules(modules);\n        this.findTrendLineModules(modules);\n        modules = this.findAxisModule(modules);\n        enableAnnotation = this.annotations.some((value) => {\n            return (value.content !== null);\n        });\n        if (errorBarVisible) {\n            modules.push({\n                member: 'ErrorBar',\n                args: [this, series]\n            });\n        }\n        if (this.isLegend) {\n            modules.push({\n                member: 'Legend',\n                args: [this]\n            });\n        }\n        if (this.chartAreaType !== 'PolarRadar' && (zooming.enableSelectionZooming\n            || zooming.enableMouseWheelZooming || zooming.enablePinchZooming || zooming.enablePan)) {\n            modules.push({\n                member: 'Zoom',\n                args: [this, this.zoomSettings]\n            });\n        }\n        if (this.selectionMode !== 'None' && !(this.chartAreaType === 'PolarRadar' &&\n            this.selectionMode.indexOf('Drag') > -1)) {\n            modules.push({\n                member: 'Selection',\n                args: [this]\n            });\n        }\n        if (dataLabelEnable) {\n            modules.push({\n                member: 'DataLabel',\n                args: [this, series]\n            });\n        }\n        if (enableAnnotation) {\n            modules.push({\n                member: 'Annotation',\n                args: [this, this.annotations]\n            });\n        }\n        if (this.chartAreaType !== 'PolarRadar' && this.crosshair.enable) {\n            modules.push({\n                member: 'Crosshair',\n                args: [this]\n            });\n        }\n        return modules;\n    }\n    findAxisModule(modules) {\n        let axisCollections = [];\n        axisCollections.push(this.primaryXAxis);\n        axisCollections.push(this.primaryYAxis);\n        axisCollections = axisCollections.concat(this.axes);\n        let datetimeEnabled = false;\n        let categoryEnabled = false;\n        let logarithmicEnabled = false;\n        let striplineEnabled = false;\n        let dateTimeCategoryEnabled = false;\n        let multiLevelEnabled = false;\n        for (let axis of axisCollections) {\n            datetimeEnabled = axis.valueType === 'DateTime' || datetimeEnabled;\n            categoryEnabled = axis.valueType === 'Category' || categoryEnabled;\n            logarithmicEnabled = axis.valueType === 'Logarithmic' || logarithmicEnabled;\n            dateTimeCategoryEnabled = axis.valueType === 'DateTimeCategory' || dateTimeCategoryEnabled;\n            striplineEnabled = this.findStriplineVisibility(axis.stripLines) || striplineEnabled;\n            multiLevelEnabled = axis.multiLevelLabels.length > 0 || multiLevelEnabled;\n        }\n        if (datetimeEnabled) {\n            modules.push({\n                member: 'DateTime',\n                args: [this]\n            });\n        }\n        if (categoryEnabled) {\n            modules.push({\n                member: 'Category',\n                args: [this]\n            });\n        }\n        if (logarithmicEnabled) {\n            modules.push({\n                member: 'Logarithmic',\n                args: [this]\n            });\n        }\n        if (striplineEnabled) {\n            modules.push({\n                member: 'StripLine',\n                args: [this]\n            });\n        }\n        if (multiLevelEnabled) {\n            modules.push({\n                member: 'MultiLevelLabel',\n                args: [this]\n            });\n        }\n        if (dateTimeCategoryEnabled) {\n            modules.push({\n                member: 'DateTimeCategory',\n                args: [this]\n            });\n        }\n        return modules;\n    }\n    findIndicatorModules(modules) {\n        let macdEnable;\n        let bandEnable;\n        let indicators = this.indicators;\n        if (this.indicators.length) {\n            modules.push({\n                member: 'LineSeries',\n                args: [this]\n            });\n            indicators.map((indicator) => {\n                macdEnable = macdEnable || indicator.type === 'Macd';\n                bandEnable = bandEnable || indicator.type === 'BollingerBands';\n            });\n            if (macdEnable) {\n                modules.push({\n                    member: 'ColumnSeries',\n                    args: [this]\n                });\n            }\n            if (bandEnable) {\n                modules.push({\n                    member: 'RangeAreaSeries',\n                    args: [this]\n                });\n            }\n            for (let indicator of this.indicators) {\n                modules.push({\n                    member: indicator.type + 'Indicator',\n                    args: [this]\n                });\n            }\n        }\n    }\n    findTrendLineModules(modules) {\n        let isLine;\n        let isSpline;\n        for (let series of this.series) {\n            let markerEnable;\n            series.trendlines.map((trendline) => {\n                markerEnable = markerEnable || trendline.marker.visible;\n                isLine = isLine || (trendline.type === 'Linear' || trendline.type === 'MovingAverage') ? true : false;\n                isSpline = isSpline || !isLine ? true : false;\n            });\n            if (markerEnable) {\n                modules.push({\n                    member: 'Marker',\n                    args: [this, series]\n                });\n            }\n        }\n        if (isLine || isSpline) {\n            modules.push({\n                member: 'TrendLine',\n                args: [this]\n            });\n        }\n        if (isLine) {\n            modules.push({\n                member: 'LineSeries',\n                args: [this]\n            });\n        }\n        if (isSpline) {\n            modules.push({\n                member: 'SplineSeries',\n                args: [this]\n            });\n        }\n    }\n    findStriplineVisibility(striplines) {\n        let visible = false;\n        for (let stripline of striplines) {\n            if (stripline.visible) {\n                visible = true;\n                break;\n            }\n        }\n        return visible;\n    }\n    /**\n     * To Remove the SVG.\n     * @return {boolean}\n     * @private\n     */\n    removeSvg() {\n        if (document.getElementById(this.element.id + '_Secondary_Element')) {\n            remove(document.getElementById(this.element.id + '_Secondary_Element'));\n        }\n        let removeLength = 0;\n        if (this.zoomModule && this.zoomModule.pinchTarget) {\n            this.zoomModule.pinchTarget.id = '';\n            this.zoomModule.pinchTarget.setAttribute('opacity', '0');\n            this.svgObject.appendChild(this.zoomModule.pinchTarget);\n            removeLength = 1;\n        }\n        if (this.svgObject) {\n            while (this.svgObject.childNodes.length > removeLength) {\n                this.svgObject.removeChild(this.svgObject.firstChild);\n            }\n            if (!this.svgObject.hasChildNodes() && this.svgObject.parentNode) {\n                remove(this.svgObject);\n            }\n        }\n    }\n    refreshDefinition(definitions) {\n        for (let item of definitions) {\n            item.axes = [];\n        }\n    }\n    /**\n     * Refresh the axis default value.\n     * @return {boolean}\n     * @private\n     */\n    refreshAxis() {\n        let axis = this.primaryXAxis;\n        axis.rect = new Rect(undefined, undefined, 0, 0);\n        axis = this.primaryYAxis;\n        axis.isStack100 = false;\n        axis.rect = new Rect(undefined, undefined, 0, 0);\n        for (let item of this.axes) {\n            axis = item;\n            axis.rect = new Rect(undefined, undefined, 0, 0);\n            axis.isStack100 = false;\n        }\n    }\n    axisChange(axis) {\n        if (!axis.name && !axis.valueType) {\n            return false;\n        }\n        this.refreshDefinition(this.columns);\n        this.refreshDefinition(this.rows);\n        this.calculateVisibleAxis();\n        this.processData();\n        return true;\n    }\n    /**\n     * Called internally if any of the property value changed.\n     * @private\n     */\n    // tslint:disable-next-line:max-func-body-length\n    onPropertyChanged(newProp, oldProp) {\n        let renderer = false;\n        let refreshBounds = false;\n        if (Object.keys(newProp).length === 1 && Object.keys(newProp)[0] === 'indicators') {\n            //add valid check, it should happen only when property change is triggered for target series\n            return;\n        }\n        this.animateSeries = false;\n        if (!this.delayRedraw) {\n            for (let prop of Object.keys(newProp)) {\n                switch (prop) {\n                    case 'primaryXAxis':\n                        refreshBounds = this.axisChange(newProp.primaryXAxis);\n                        if (newProp.primaryXAxis.edgeLabelPlacement) {\n                            renderer = true;\n                        }\n                        if (!newProp.primaryXAxis.crosshairTooltip) {\n                            refreshBounds = true;\n                        }\n                        break;\n                    case 'primaryYAxis':\n                        refreshBounds = this.axisChange(newProp.primaryYAxis);\n                        if (newProp.primaryYAxis.edgeLabelPlacement) {\n                            renderer = true;\n                        }\n                        if (!newProp.primaryYAxis.crosshairTooltip) {\n                            refreshBounds = true;\n                        }\n                        break;\n                    case 'height':\n                    case 'width':\n                        this.createChartSvg();\n                        refreshBounds = true;\n                        break;\n                    case 'title':\n                        refreshBounds = true;\n                        break;\n                    case 'titleStyle':\n                        if (newProp.titleStyle && (newProp.titleStyle.size || newProp.titleStyle.textOverflow)) {\n                            refreshBounds = true;\n                        }\n                        else {\n                            renderer = true;\n                        }\n                        break;\n                    case 'border':\n                        renderer = true;\n                        break;\n                    case 'zoomSettings':\n                    case 'background':\n                        renderer = true;\n                        break;\n                    case 'chartArea':\n                        if (newProp.chartArea.border && newProp.chartArea.border.width) {\n                            refreshBounds = true;\n                        }\n                        renderer = true;\n                        break;\n                    case 'legendSettings':\n                        if (!newProp.legendSettings.background || !newProp.legendSettings.opacity) {\n                            refreshBounds = true;\n                        }\n                        renderer = true;\n                        break;\n                    case 'palettes':\n                        this.calculateVisibleSeries();\n                        renderer = true;\n                        break;\n                    case 'selectedDataIndexes':\n                    case 'selectionMode':\n                        if (this.selectionModule && newProp.selectionMode && newProp.selectionMode.indexOf('Drag') === -1) {\n                            this.selectionModule.redrawSelection(this, oldProp.selectionMode);\n                        }\n                        break;\n                    case 'isMultiSelect':\n                        if (this.selectionModule && !newProp.isMultiSelect && this.selectionModule.selectedDataIndexes.length > 1) {\n                            this.selectionModule.redrawSelection(this, oldProp.selectionMode);\n                        }\n                        break;\n                    case 'theme':\n                        this.animateSeries = true;\n                        break;\n                    case 'locale':\n                    case 'currencyCode':\n                        super.refresh();\n                        break;\n                    case 'tooltip':\n                        this.tooltipModule.previousPoints = [];\n                        break;\n                }\n            }\n            if (!refreshBounds && renderer) {\n                this.removeSvg();\n                this.renderElements();\n                this.trigger('loaded', { chart: this });\n            }\n            if (refreshBounds) {\n                this.removeSvg();\n                this.refreshAxis();\n                this.refreshBound();\n                this.trigger('loaded', { chart: this });\n            }\n        }\n    }\n};\n__decorate([\n    Property(null)\n], Chart.prototype, \"width\", void 0);\n__decorate([\n    Property(null)\n], Chart.prototype, \"height\", void 0);\n__decorate([\n    Property('')\n], Chart.prototype, \"title\", void 0);\n__decorate([\n    Complex(Theme.chartTitleFont, Font)\n], Chart.prototype, \"titleStyle\", void 0);\n__decorate([\n    Complex({}, Margin)\n], Chart.prototype, \"margin\", void 0);\n__decorate([\n    Complex({ color: '#DDDDDD', width: 0 }, Border)\n], Chart.prototype, \"border\", void 0);\n__decorate([\n    Property(null)\n], Chart.prototype, \"background\", void 0);\n__decorate([\n    Complex({ border: { color: null, width: 0.5 }, background: 'transparent' }, ChartArea)\n], Chart.prototype, \"chartArea\", void 0);\n__decorate([\n    Complex({ name: 'primaryXAxis' }, Axis)\n], Chart.prototype, \"primaryXAxis\", void 0);\n__decorate([\n    Complex({ name: 'primaryYAxis' }, Axis)\n], Chart.prototype, \"primaryYAxis\", void 0);\n__decorate([\n    Collection([{}], Row)\n], Chart.prototype, \"rows\", void 0);\n__decorate([\n    Collection([{}], Column)\n], Chart.prototype, \"columns\", void 0);\n__decorate([\n    Collection([{}], Axis)\n], Chart.prototype, \"axes\", void 0);\n__decorate([\n    Collection([{}], Series)\n], Chart.prototype, \"series\", void 0);\n__decorate([\n    Collection([{}], ChartAnnotationSettings)\n], Chart.prototype, \"annotations\", void 0);\n__decorate([\n    Property([])\n], Chart.prototype, \"palettes\", void 0);\n__decorate([\n    Property('Material')\n], Chart.prototype, \"theme\", void 0);\n__decorate([\n    Complex({}, TooltipSettings)\n], Chart.prototype, \"tooltip\", void 0);\n__decorate([\n    Complex({}, CrosshairSettings)\n], Chart.prototype, \"crosshair\", void 0);\n__decorate([\n    Complex({}, LegendSettings)\n], Chart.prototype, \"legendSettings\", void 0);\n__decorate([\n    Complex({}, ZoomSettings)\n], Chart.prototype, \"zoomSettings\", void 0);\n__decorate([\n    Property('None')\n], Chart.prototype, \"selectionMode\", void 0);\n__decorate([\n    Property(false)\n], Chart.prototype, \"isMultiSelect\", void 0);\n__decorate([\n    Collection([], Indexes)\n], Chart.prototype, \"selectedDataIndexes\", void 0);\n__decorate([\n    Property(false)\n], Chart.prototype, \"useGroupingSeparator\", void 0);\n__decorate([\n    Property(false)\n], Chart.prototype, \"isTransposed\", void 0);\n__decorate([\n    Collection([], TechnicalIndicator)\n], Chart.prototype, \"indicators\", void 0);\n__decorate([\n    Property(null)\n], Chart.prototype, \"description\", void 0);\n__decorate([\n    Property(1)\n], Chart.prototype, \"tabIndex\", void 0);\n__decorate([\n    Property(true)\n], Chart.prototype, \"enableSideBySidePlacement\", void 0);\n__decorate([\n    Event()\n], Chart.prototype, \"annotationRender\", void 0);\n__decorate([\n    Event()\n], Chart.prototype, \"beforePrint\", void 0);\n__decorate([\n    Event()\n], Chart.prototype, \"loaded\", void 0);\n__decorate([\n    Event()\n], Chart.prototype, \"load\", void 0);\n__decorate([\n    Event()\n], Chart.prototype, \"animationComplete\", void 0);\n__decorate([\n    Event()\n], Chart.prototype, \"legendRender\", void 0);\n__decorate([\n    Event()\n], Chart.prototype, \"textRender\", void 0);\n__decorate([\n    Event()\n], Chart.prototype, \"pointRender\", void 0);\n__decorate([\n    Event()\n], Chart.prototype, \"seriesRender\", void 0);\n__decorate([\n    Event()\n], Chart.prototype, \"axisLabelRender\", void 0);\n__decorate([\n    Event()\n], Chart.prototype, \"axisRangeCalculated\", void 0);\n__decorate([\n    Event()\n], Chart.prototype, \"axisMultiLabelRender\", void 0);\n__decorate([\n    Event()\n], Chart.prototype, \"tooltipRender\", void 0);\n__decorate([\n    Event()\n], Chart.prototype, \"chartMouseMove\", void 0);\n__decorate([\n    Event()\n], Chart.prototype, \"chartMouseClick\", void 0);\n__decorate([\n    Event()\n], Chart.prototype, \"pointClick\", void 0);\n__decorate([\n    Event()\n], Chart.prototype, \"pointMove\", void 0);\n__decorate([\n    Event()\n], Chart.prototype, \"chartMouseLeave\", void 0);\n__decorate([\n    Event()\n], Chart.prototype, \"chartMouseDown\", void 0);\n__decorate([\n    Event()\n], Chart.prototype, \"chartMouseUp\", void 0);\n__decorate([\n    Event()\n], Chart.prototype, \"dragComplete\", void 0);\n__decorate([\n    Event()\n], Chart.prototype, \"zoomComplete\", void 0);\n__decorate([\n    Property('USD')\n], Chart.prototype, \"currencyCode\", void 0);\nChart = __decorate([\n    NotifyPropertyChanges\n], Chart);\n\n/**\n * Common axis classes\n * @private\n */\nclass NiceInterval extends Double {\n    /**\n     * Method to calculate numeric datetime interval\n     */\n    calculateDateTimeNiceInterval(axis, size, start, end) {\n        let oneDay = 24 * 60 * 60 * 1000;\n        let startDate = new Date(start);\n        let endDate = new Date(end);\n        //var axisInterval ;\n        let totalDays = (Math.abs((startDate.getTime() - endDate.getTime()) / (oneDay)));\n        let interval;\n        axis.actualIntervalType = axis.intervalType;\n        switch (axis.intervalType) {\n            case 'Years':\n                interval = this.calculateNumericNiceInterval(axis, totalDays / 365, size);\n                break;\n            case 'Months':\n                interval = this.calculateNumericNiceInterval(axis, totalDays / 30, size);\n                break;\n            case 'Days':\n                interval = this.calculateNumericNiceInterval(axis, totalDays, size);\n                break;\n            case 'Hours':\n                interval = this.calculateNumericNiceInterval(axis, totalDays * 24, size);\n                break;\n            case 'Minutes':\n                interval = this.calculateNumericNiceInterval(axis, totalDays * 24 * 60, size);\n                break;\n            case 'Seconds':\n                interval = this.calculateNumericNiceInterval(axis, totalDays * 24 * 60 * 60, size);\n                break;\n            case 'Auto':\n                interval = this.calculateNumericNiceInterval(axis, totalDays / 365, size);\n                if (interval >= 1) {\n                    axis.actualIntervalType = 'Years';\n                    return interval;\n                }\n                interval = this.calculateNumericNiceInterval(axis, totalDays / 30, size);\n                if (interval >= 1) {\n                    axis.actualIntervalType = 'Months';\n                    return interval;\n                }\n                interval = this.calculateNumericNiceInterval(axis, totalDays, size);\n                if (interval >= 1) {\n                    axis.actualIntervalType = 'Days';\n                    return interval;\n                }\n                interval = this.calculateNumericNiceInterval(axis, totalDays * 24, size);\n                if (interval >= 1) {\n                    axis.actualIntervalType = 'Hours';\n                    return interval;\n                }\n                interval = this.calculateNumericNiceInterval(axis, totalDays * 24 * 60, size);\n                if (interval >= 1) {\n                    axis.actualIntervalType = 'Minutes';\n                    return interval;\n                }\n                interval = this.calculateNumericNiceInterval(axis, totalDays * 24 * 60 * 60, size);\n                axis.actualIntervalType = 'Seconds';\n                return interval;\n        }\n        return interval;\n    }\n    /**\n     * To get the skeleton for the DateTime axis.\n     * @return {string}\n     *  @private\n     */\n    getSkeleton(axis) {\n        let skeleton;\n        if (axis.skeleton) {\n            return axis.skeleton;\n        }\n        if (axis.actualIntervalType === 'Years') {\n            skeleton = 'yMMM';\n        }\n        else if (axis.actualIntervalType === 'Months') {\n            skeleton = 'MMMd';\n        }\n        else if (axis.actualIntervalType === 'Days') {\n            skeleton = 'yMd';\n        }\n        else if (axis.actualIntervalType === 'Hours') {\n            skeleton = 'EHm';\n        }\n        else if (axis.actualIntervalType === 'Minutes' || axis.actualIntervalType === 'Seconds') {\n            skeleton = 'Hms';\n        }\n        else {\n            skeleton = 'Hms';\n        }\n        return skeleton;\n    }\n}\n\n/**\n * `DateTime` module is used to render datetime axis.\n */\nclass DateTime extends NiceInterval {\n    /**\n     * Constructor for the dateTime module.\n     * @private\n     */\n    constructor(chart) {\n        super(chart);\n    }\n    /**\n     * The function to calculate the range and labels for the axis.\n     * @return {void}\n     */\n    calculateRangeAndInterval(size, axis) {\n        this.calculateRange(axis, size);\n        this.getActualRange(axis, size);\n        this.applyRangePadding(axis, size);\n        this.calculateVisibleLabels(axis);\n    }\n    /**\n     * Actual Range for the axis.\n     * @private\n     */\n    getActualRange(axis, size) {\n        let option = {\n            skeleton: 'full',\n            type: 'dateTime'\n        };\n        let dateParser = this.chart.intl.getDateParser(option);\n        let dateFormatter = this.chart.intl.getDateFormat(option);\n        // Axis min\n        if ((axis.minimum) !== null) {\n            this.min = Date.parse(dateParser(dateFormatter(new Date(DataUtil.parse.parseJson({ val: axis.minimum }).val))));\n        }\n        else if (this.min === null || this.min === Number.POSITIVE_INFINITY) {\n            this.min = Date.parse(dateParser(dateFormatter(new Date(1970, 1, 1))));\n        }\n        // Axis Max\n        if ((axis.maximum) !== null) {\n            this.max = Date.parse(dateParser(dateFormatter(new Date(DataUtil.parse.parseJson({ val: axis.maximum }).val))));\n        }\n        else if (this.max === null || this.max === Number.NEGATIVE_INFINITY) {\n            this.max = Date.parse(dateParser(dateFormatter(new Date(1970, 5, 1))));\n        }\n        if (this.min === this.max) {\n            this.max = this.max + 2592000000;\n            this.min = this.min - 2592000000;\n        }\n        axis.actualRange = {};\n        axis.doubleRange = new DoubleRange(this.min, this.max);\n        let datetimeInterval = this.calculateDateTimeNiceInterval(axis, size, axis.doubleRange.start, axis.doubleRange.end);\n        if (!axis.interval) {\n            axis.actualRange.interval = datetimeInterval;\n        }\n        else {\n            axis.actualRange.interval = axis.interval;\n        }\n        axis.actualRange.min = axis.doubleRange.start;\n        axis.actualRange.max = axis.doubleRange.end;\n    }\n    /**\n     * Apply padding for the range.\n     * @private\n     */\n    applyRangePadding(axis, size) {\n        this.start = (axis.actualRange.min);\n        this.end = (axis.actualRange.max);\n        let minimum;\n        let maximum;\n        let interval = axis.actualRange.interval;\n        if (!axis.setRange()) {\n            let rangePadding = axis.getRangePadding(this.chart);\n            minimum = new Date(this.start);\n            maximum = new Date(this.end);\n            let intervalType = axis.actualIntervalType;\n            if (rangePadding === 'None') {\n                this.start = minimum.getTime();\n                this.end = maximum.getTime();\n            }\n            else if (rangePadding === 'Additional' || rangePadding === 'Round') {\n                switch (intervalType) {\n                    case 'Years':\n                        this.getYear(minimum, maximum, rangePadding, interval);\n                        break;\n                    case 'Months':\n                        this.getMonth(minimum, maximum, rangePadding, interval);\n                        break;\n                    case 'Days':\n                        this.getDay(minimum, maximum, rangePadding, interval);\n                        break;\n                    case 'Hours':\n                        this.getHour(minimum, maximum, rangePadding, interval);\n                        break;\n                    case 'Minutes':\n                        let minute = (minimum.getMinutes() / interval) * interval;\n                        let endMinute = maximum.getMinutes() + (minimum.getMinutes() - minute);\n                        if (rangePadding === 'Round') {\n                            this.start = (new Date(minimum.getFullYear(), minimum.getMonth(), minimum.getDate(), minimum.getHours(), minute, 0)).getTime();\n                            this.end = (new Date(maximum.getFullYear(), maximum.getMonth(), maximum.getDate(), maximum.getHours(), endMinute, 59)).getTime();\n                        }\n                        else {\n                            this.start = (new Date(minimum.getFullYear(), maximum.getMonth(), minimum.getDate(), minimum.getHours(), minute + (-interval), 0)).getTime();\n                            this.end = (new Date(maximum.getFullYear(), maximum.getMonth(), maximum.getDate(), maximum.getHours(), endMinute + (interval), 0)).getTime();\n                        }\n                        break;\n                    case 'Seconds':\n                        let second = (minimum.getSeconds() / interval) * interval;\n                        let endSecond = maximum.getSeconds() + (minimum.getSeconds() - second);\n                        if (rangePadding === 'Round') {\n                            this.start = (new Date(minimum.getFullYear(), minimum.getMonth(), minimum.getDate(), minimum.getHours(), minimum.getMinutes(), second, 0)).getTime();\n                            this.end = (new Date(maximum.getFullYear(), maximum.getMonth(), maximum.getDate(), maximum.getHours(), maximum.getMinutes(), endSecond, 0)).getTime();\n                        }\n                        else {\n                            this.start = (new Date(minimum.getFullYear(), minimum.getMonth(), minimum.getDate(), minimum.getHours(), minimum.getMinutes(), second + (-interval), 0)).getTime();\n                            this.end = (new Date(maximum.getFullYear(), maximum.getMonth(), maximum.getDate(), maximum.getHours(), maximum.getMinutes(), endSecond + (interval), 0)).getTime();\n                        }\n                        break;\n                }\n            }\n        }\n        axis.actualRange.min = (axis.minimum != null) ? this.min : this.start;\n        axis.actualRange.max = (axis.maximum != null) ? this.max : this.end;\n        axis.actualRange.delta = (axis.actualRange.max - axis.actualRange.min);\n        axis.doubleRange = new DoubleRange(axis.actualRange.min, axis.actualRange.max);\n        this.calculateVisibleRange(size, axis);\n    }\n    getYear(minimum, maximum, rangePadding, interval) {\n        let startYear = minimum.getFullYear();\n        let endYear = maximum.getFullYear();\n        if (rangePadding === 'Additional') {\n            this.start = (new Date(startYear - interval, 1, 1, 0, 0, 0)).getTime();\n            this.end = (new Date(endYear + interval, 1, 1, 0, 0, 0)).getTime();\n        }\n        else {\n            this.start = new Date(startYear, 0, 0, 0, 0, 0).getTime();\n            this.end = new Date(endYear, 11, 30, 23, 59, 59).getTime();\n        }\n    }\n    getMonth(minimum, maximum, rangePadding, interval) {\n        let month = minimum.getMonth();\n        let endMonth = maximum.getMonth();\n        if (rangePadding === 'Round') {\n            this.start = (new Date(minimum.getFullYear(), month, 0, 0, 0, 0)).getTime();\n            this.end = (new Date(maximum.getFullYear(), endMonth, new Date(maximum.getFullYear(), maximum.getMonth(), 0).getDate(), 23, 59, 59)).getTime();\n        }\n        else {\n            this.start = (new Date(minimum.getFullYear(), month + (-interval), 1, 0, 0, 0)).getTime();\n            this.end = (new Date(maximum.getFullYear(), endMonth + (interval), endMonth === 2 ? 28 : 30, 0, 0, 0)).getTime();\n        }\n    }\n    getDay(minimum, maximum, rangePadding, interval) {\n        let day = minimum.getDate();\n        let endDay = maximum.getDate();\n        if (rangePadding === 'Round') {\n            this.start = (new Date(minimum.getFullYear(), minimum.getMonth(), day, 0, 0, 0)).getTime();\n            this.end = (new Date(maximum.getFullYear(), maximum.getMonth(), endDay, 23, 59, 59)).getTime();\n        }\n        else {\n            this.start = (new Date(minimum.getFullYear(), minimum.getMonth(), day + (-interval), 0, 0, 0)).getTime();\n            this.end = (new Date(maximum.getFullYear(), maximum.getMonth(), endDay + (interval), 0, 0, 0)).getTime();\n        }\n    }\n    getHour(minimum, maximum, rangePadding, interval) {\n        let hour = (minimum.getHours() / interval) * interval;\n        let endHour = maximum.getHours() + (minimum.getHours() - hour);\n        if (rangePadding === 'Round') {\n            this.start = (new Date(minimum.getFullYear(), minimum.getMonth(), minimum.getDate(), hour, 0, 0)).getTime();\n            this.end = (new Date(maximum.getFullYear(), maximum.getMonth(), maximum.getDate(), endHour, 59, 59)).getTime();\n        }\n        else {\n            this.start = (new Date(minimum.getFullYear(), minimum.getMonth(), minimum.getDate(), hour + (-interval), 0, 0)).getTime();\n            this.end = (new Date(maximum.getFullYear(), maximum.getMonth(), maximum.getDate(), endHour + (interval), 0, 0)).getTime();\n        }\n    }\n    /**\n     * Calculate visible range for axis.\n     * @private\n     */\n    calculateVisibleRange(size, axis) {\n        axis.visibleRange = {\n            min: axis.actualRange.min,\n            max: axis.actualRange.max,\n            interval: axis.actualRange.interval,\n            delta: axis.actualRange.delta,\n        };\n        if (axis.zoomFactor < 1 || axis.zoomPosition > 0) {\n            axis.calculateVisibleRange(size);\n            axis.visibleRange.interval = (axis.enableAutoIntervalOnZooming) ?\n                this.calculateDateTimeNiceInterval(axis, size, axis.visibleRange.min, axis.visibleRange.max)\n                : axis.visibleRange.interval;\n        }\n        axis.dateTimeInterval = this.increaseDateTimeInterval(axis, axis.visibleRange.min, axis.visibleRange.interval).getTime()\n            - axis.visibleRange.min;\n        axis.triggerRangeRender(this.chart, axis.visibleRange.min, axis.visibleRange.max, axis.visibleRange.interval);\n    }\n    /**\n     * Calculate visible labels for the axis.\n     * @private\n     */\n    calculateVisibleLabels(axis) {\n        axis.visibleLabels = [];\n        let tempInterval = axis.visibleRange.min;\n        if (!axis.setRange()) {\n            tempInterval = this.alignRangeStart(axis, tempInterval, axis.visibleRange.interval, axis.actualIntervalType).getTime();\n        }\n        axis.format = this.chart.intl.getDateFormat({\n            format: axis.labelFormat, type: firstToLowerCase(axis.skeletonType), skeleton: this.getSkeleton(axis)\n        });\n        axis.startLabel = axis.format(new Date(axis.visibleRange.min));\n        axis.endLabel = axis.format(new Date(axis.visibleRange.max));\n        while (tempInterval <= axis.visibleRange.max) {\n            if (withIn(tempInterval, axis.visibleRange)) {\n                axis.triggerLabelRender(this.chart, tempInterval, axis.format(new Date(tempInterval)), axis.labelStyle);\n            }\n            tempInterval = this.increaseDateTimeInterval(axis, tempInterval, axis.visibleRange.interval).getTime();\n        }\n        axis.getMaxLabelWidth(this.chart);\n    }\n    /** @private */\n    increaseDateTimeInterval(axis, value, interval) {\n        let result = new Date(value);\n        interval = Math.ceil(interval);\n        switch (axis.actualIntervalType) {\n            case 'Years':\n                result.setFullYear(result.getFullYear() + interval);\n                return result;\n            case 'Months':\n                result.setMonth(result.getMonth() + interval);\n                return result;\n            case 'Days':\n                result.setDate(result.getDate() + interval);\n                return result;\n            case 'Hours':\n                result.setHours(result.getHours() + interval);\n                return result;\n            case 'Minutes':\n                result.setMinutes(result.getMinutes() + interval);\n                return result;\n            case 'Seconds':\n                result.setSeconds(result.getSeconds() + interval);\n                return result;\n        }\n        return result;\n    }\n    alignRangeStart(axis, sDate, intervalSize, intervalType) {\n        let sResult = new Date(sDate);\n        switch (axis.actualIntervalType) {\n            case 'Years':\n                let year = Math.floor(Math.floor(sResult.getFullYear() / intervalSize) * intervalSize);\n                sResult = new Date(year, sResult.getMonth(), sResult.getDate(), 0, 0, 0);\n                return sResult;\n            case 'Months':\n                let month = Math.floor(Math.floor((sResult.getMonth()) / intervalSize) * intervalSize);\n                sResult = new Date(sResult.getFullYear(), month, sResult.getDate(), 0, 0, 0);\n                return sResult;\n            case 'Days':\n                let day = Math.floor(Math.floor((sResult.getDate()) / intervalSize) * intervalSize);\n                sResult = new Date(sResult.getFullYear(), sResult.getMonth(), day, 0, 0, 0);\n                return sResult;\n            case 'Hours':\n                let hour = Math.floor(Math.floor((sResult.getHours()) / intervalSize) * intervalSize);\n                sResult = new Date(sResult.getFullYear(), sResult.getMonth(), sResult.getDate(), hour, 0, 0);\n                return sResult;\n            case 'Minutes':\n                let minutes = Math.floor(Math.floor((sResult.getMinutes()) / intervalSize) * intervalSize);\n                sResult = new Date(sResult.getFullYear(), sResult.getMonth(), sResult.getDate(), sResult.getHours(), minutes, 0, 0);\n                return sResult;\n            case 'Seconds':\n                let seconds = Math.floor(Math.floor((sResult.getSeconds()) / intervalSize) * intervalSize);\n                sResult = new Date(sResult.getFullYear(), sResult.getMonth(), sResult.getDate(), sResult.getHours(), sResult.getMinutes(), seconds, 0);\n                return sResult;\n        }\n        return sResult;\n    }\n    /**\n     * Get module name\n     */\n    getModuleName() {\n        /**\n         * Returns the module name\n         */\n        return 'DateTime';\n    }\n    /**\n     * To destroy the category axis.\n     * @return {void}\n     * @private\n     */\n    destroy(chart) {\n        /**\n         * Destroy method performed here\n         */\n    }\n}\n\n/**\n * `Category` module is used to render category axis.\n */\nclass Category extends NiceInterval {\n    /**\n     * Constructor for the category module.\n     * @private\n     */\n    constructor(chart) {\n        super(chart);\n    }\n    /**\n     * The function to calculate the range and labels for the axis.\n     * @return {void}\n     */\n    calculateRangeAndInterval(size, axis) {\n        this.calculateRange(axis, size);\n        this.getActualRange(axis, size);\n        this.applyRangePadding(axis, size);\n        this.calculateVisibleLabels(axis);\n    }\n    /**\n     * Actual Range for the axis.\n     * @private\n     */\n    getActualRange(axis, size) {\n        this.initializeDoubleRange(axis);\n        // axis.doubleRange = new DoubleRange(<number>this.min, <number>this.max);\n        axis.actualRange = {};\n        if (!axis.interval) {\n            axis.actualRange.interval = Math.max(1, Math.floor(axis.doubleRange.delta / axis.getActualDesiredIntervalsCount(size)));\n        }\n        else {\n            axis.actualRange.interval = Math.ceil(axis.interval);\n        }\n        axis.actualRange.min = axis.doubleRange.start;\n        axis.actualRange.max = axis.doubleRange.end;\n        axis.actualRange.delta = axis.doubleRange.delta;\n    }\n    /**\n     * Padding for the axis.\n     * @private\n     */\n    applyRangePadding(axis, size) {\n        let ticks = (axis.labelPlacement === 'BetweenTicks' && this.chart.chartAreaType !== 'PolarRadar') ? 0.5 : 0;\n        if (ticks > 0) {\n            axis.actualRange.min -= ticks;\n            axis.actualRange.max += ticks;\n        }\n        else {\n            axis.actualRange.max += axis.actualRange.max ? 0 : 0.5;\n        }\n        axis.doubleRange = new DoubleRange(axis.actualRange.min, axis.actualRange.max);\n        axis.actualRange.delta = axis.doubleRange.delta;\n        this.calculateVisibleRange(size, axis);\n    }\n    /**\n     * Calculate label for the axis.\n     * @private\n     */\n    calculateVisibleLabels(axis) {\n        /*! Generate axis labels */\n        axis.visibleLabels = [];\n        let tempInterval = Math.ceil(axis.visibleRange.min);\n        if (axis.zoomFactor < 1 || axis.zoomPosition > 0) {\n            tempInterval = axis.visibleRange.min - (axis.visibleRange.min % axis.visibleRange.interval);\n        }\n        let position;\n        axis.startLabel = axis.labels[Math.round(axis.visibleRange.min)];\n        axis.endLabel = axis.labels[Math.floor(axis.visibleRange.max)];\n        for (; tempInterval <= axis.visibleRange.max; tempInterval += axis.visibleRange.interval) {\n            if (withIn(tempInterval, axis.visibleRange) && axis.labels.length > 0) {\n                position = Math.round(tempInterval);\n                axis.triggerLabelRender(this.chart, position, axis.labels[position] ? axis.labels[position] : position.toString(), axis.labelStyle);\n            }\n        }\n        axis.getMaxLabelWidth(this.chart);\n    }\n    /**\n     * Get module name\n     */\n    getModuleName() {\n        /**\n         * Returns the module name\n         */\n        return 'Category';\n    }\n    /**\n     * To destroy the category axis.\n     * @return {void}\n     * @private\n     */\n    destroy(chart) {\n        /**\n         * Destroy method performed here\n         */\n    }\n}\n\n/**\n * `Logarithmic` module is used to render log axis.\n */\nclass Logarithmic extends Double {\n    /**\n     * Constructor for the logerithmic module.\n     * @private\n     */\n    constructor(chart) {\n        super(chart);\n    }\n    /**\n     * The method to calculate the range and labels for the axis.\n     * @return {void}\n     */\n    calculateRangeAndInterval(size, axis) {\n        this.calculateRange(axis, size);\n        this.getActualRange(axis, size);\n        this.calculateVisibleRange(size, axis);\n        this.calculateVisibleLabels(axis, this.chart);\n    }\n    /**\n     * Calculates actual range for the axis.\n     * @private\n     */\n    getActualRange(axis, size) {\n        this.initializeDoubleRange(axis);\n        this.min = this.min < 0 ? 0 : this.min;\n        let logStart = logBase(this.min, axis.logBase);\n        logStart = isFinite(logStart) ? logStart : this.min;\n        let logEnd = logBase(this.max, axis.logBase);\n        logEnd = isFinite(logStart) ? logEnd : this.max;\n        this.min = Math.floor(logStart / 1);\n        this.max = Math.ceil(logEnd / 1);\n        axis.actualRange.interval = axis.interval || this.calculateLogNiceInterval(this.max - this.min, size, axis);\n        axis.actualRange.min = this.min;\n        axis.actualRange.max = this.max;\n        axis.actualRange.delta = this.max - this.min;\n    }\n    /**\n     * Calculates visible range for the axis.\n     * @private\n     */\n    calculateVisibleRange(size, axis) {\n        axis.visibleRange = {\n            interval: axis.actualRange.interval, max: axis.actualRange.max,\n            min: axis.actualRange.min, delta: axis.actualRange.delta\n        };\n        if (axis.zoomFactor < 1 || axis.zoomPosition > 0) {\n            axis.calculateVisibleRange(size);\n            axis.visibleRange.interval = (axis.enableAutoIntervalOnZooming) ?\n                this.calculateLogNiceInterval(axis.doubleRange.delta, size, axis)\n                : axis.visibleRange.interval;\n            axis.visibleRange.interval = Math.floor(axis.visibleRange.interval) === 0 ? 1 : Math.floor(axis.visibleRange.interval);\n            axis.triggerRangeRender(this.chart, axis.visibleRange.min, axis.visibleRange.max, axis.visibleRange.interval);\n        }\n    }\n    /**\n     * Calculates log iInteval for the axis.\n     * @private\n     */\n    calculateLogNiceInterval(delta, size, axis) {\n        let actualDesiredIntervalsCount = axis.getActualDesiredIntervalsCount(size);\n        let niceInterval = delta;\n        let minInterval = Math.pow(10, Math.floor(logBase(niceInterval, 10)));\n        for (let j = 0, len = axis.intervalDivs.length; j < len; j++) {\n            let currentInterval = minInterval * axis.intervalDivs[j];\n            if (actualDesiredIntervalsCount < (delta / currentInterval)) {\n                break;\n            }\n            niceInterval = currentInterval;\n        }\n        return niceInterval;\n    }\n    /**\n     * Calculates labels for the axis.\n     * @private\n     */\n    calculateVisibleLabels(axis, chart) {\n        /*! Generate axis labels */\n        let tempInterval = axis.visibleRange.min;\n        axis.visibleLabels = [];\n        if (axis.zoomFactor < 1 || axis.zoomPosition > 0) {\n            tempInterval = axis.visibleRange.min - (axis.visibleRange.min % axis.visibleRange.interval);\n        }\n        let axisFormat = this.getFormat(axis);\n        let isCustomFormat = axisFormat.match('{value}') !== null;\n        axis.format = chart.intl.getNumberFormat({\n            format: isCustomFormat ? '' : axisFormat,\n            useGrouping: chart.useGroupingSeparator\n        });\n        axis.startLabel = axis.format(Math.pow(axis.logBase, axis.visibleRange.min));\n        axis.endLabel = axis.format(Math.pow(axis.logBase, axis.visibleRange.max));\n        for (; tempInterval <= axis.visibleRange.max; tempInterval += axis.visibleRange.interval) {\n            if (withIn(tempInterval, axis.visibleRange)) {\n                axis.triggerLabelRender(this.chart, tempInterval, this.formatValue(axis, isCustomFormat, axisFormat, Math.pow(axis.logBase, tempInterval)), axis.labelStyle);\n            }\n        }\n        axis.getMaxLabelWidth(this.chart);\n    }\n    /**\n     * Get module name\n     */\n    getModuleName() {\n        /**\n         * Returns the module name\n         */\n        return 'Logarithmic';\n    }\n    /**\n     * To destroy the category axis.\n     * @return {void}\n     * @private\n     */\n    destroy(chart) {\n        /**\n         * Destroy method performed here\n         */\n    }\n}\n\n/**\n * Category module is used to render category axis.\n */\nclass DateTimeCategory extends Category {\n    /**\n     * Constructor for the category module.\n     * @private\n     */\n    constructor(chart) {\n        super(chart);\n    }\n    /**\n     * The function to calculate the range and labels for the axis.\n     * @return {void}\n     * @private\n     */\n    calculateRangeAndInterval(size, axis) {\n        this.axisSize = size;\n        this.calculateRange(axis, size);\n        this.getActualRange(axis, size);\n        this.applyRangePadding(axis, size);\n        this.calculateVisibleLabels(axis);\n    }\n    /**\n     * Calculate label for the axis.\n     * @private\n     */\n    calculateVisibleLabels(axis) {\n        /*! Generate axis labels */\n        axis.visibleLabels = [];\n        let padding = axis.labelPlacement === 'BetweenTicks' ? 0.5 : 0;\n        if (axis.intervalType === 'Auto') {\n            this.calculateDateTimeNiceInterval(axis, this.axisSize, parseInt(axis.labels[0], 10), parseInt(axis.labels[axis.labels.length - 1], 10));\n        }\n        else {\n            axis.actualIntervalType = axis.intervalType;\n        }\n        axis.format = this.chart.intl.getDateFormat({\n            format: axis.labelFormat, type: firstToLowerCase(axis.skeletonType), skeleton: this.getSkeleton(axis)\n        });\n        for (let i = 0; i < axis.labels.length; i++) {\n            if (!this.sameInterval(axis.labels.map(Number)[i], axis.labels.map(Number)[i - 1], axis.actualIntervalType, i)) {\n                if (withIn(i - padding, axis.visibleRange)) {\n                    axis.triggerLabelRender(this.chart, i, axis.format(new Date(axis.labels.map(Number)[i])), axis.labelStyle);\n                }\n            }\n        }\n        axis.getMaxLabelWidth(this.chart);\n    }\n    /**\n     * get same interval\n     */\n    sameInterval(currentDate, previousDate, type, index) {\n        let sameValue;\n        if (index === 0) {\n            sameValue = false;\n        }\n        else {\n            switch (type) {\n                case 'Years':\n                    sameValue = new Date(currentDate).getFullYear() === new Date(previousDate).getFullYear();\n                    break;\n                case 'Months':\n                    sameValue = new Date(currentDate).getFullYear() === new Date(previousDate).getFullYear() &&\n                        new Date(currentDate).getMonth() === new Date(previousDate).getMonth();\n                    break;\n                case 'Days':\n                    sameValue = (Math.abs(currentDate - previousDate) < 24 * 60 * 60 * 1000 &&\n                        new Date(currentDate).getDay() === new Date(previousDate).getDay());\n                    break;\n                case 'Hours':\n                    sameValue = (Math.abs(currentDate - previousDate) < 60 * 60 * 1000 &&\n                        new Date(currentDate).getDay() === new Date(previousDate).getDay());\n                    break;\n                case 'Minutes':\n                    sameValue = (Math.abs(currentDate - previousDate) < 60 * 1000 &&\n                        new Date(currentDate).getMinutes() === new Date(previousDate).getMinutes());\n                    break;\n                case 'Seconds':\n                    sameValue = (Math.abs(currentDate - previousDate) < 1000 &&\n                        new Date(currentDate).getDay() === new Date(previousDate).getDay());\n                    break;\n            }\n        }\n        return sameValue;\n    }\n    /**\n     * Get module name\n     */\n    getModuleName() {\n        /**\n         * Returns the module name\n         */\n        return 'DateTimeCategory';\n    }\n    /**\n     * To destroy the category axis.\n     * @return {void}\n     * @private\n     */\n    destroy(chart) {\n        /**\n         * Destroy method performed here\n         */\n    }\n}\n\n/**\n * StripLine src\n */\n/**\n * `StripLine` module is used to render the stripLine in chart.\n */\nclass StripLine {\n    measureStripLine(axis, stripline, seriesClipRect) {\n        let actualStart;\n        let actualEnd;\n        if (axis.valueType === 'DateTimeCategory') {\n            let start = stripline.start;\n            let end = stripline.end;\n            actualStart = start ? axis.labels.indexOf(start.getTime().toString()) : null;\n            actualEnd = end ? axis.labels.indexOf(end.getTime().toString()) : null;\n        }\n        else {\n            actualStart = stripline.start;\n            actualEnd = stripline.end;\n        }\n        let rect = this.getFromTovalue(actualStart, actualEnd, stripline.size, stripline.startFromAxis, axis);\n        let height = (axis.orientation === 'Vertical') ? (rect.to - rect.from) * axis.rect.height : seriesClipRect.height;\n        let width = (axis.orientation === 'Horizontal') ? (rect.to - rect.from) * axis.rect.width : seriesClipRect.width;\n        let x = (axis.orientation === 'Vertical') ? seriesClipRect.x : ((rect.from * axis.rect.width) + axis.rect.x);\n        let y = (axis.orientation === 'Horizontal') ? seriesClipRect.y : (axis.rect.y + axis.rect.height -\n            (rect.to * axis.rect.height));\n        if (height !== 0 && width !== 0) {\n            return new Rect(x, y, width, height);\n        }\n        return new Rect(0, 0, 0, 0);\n    }\n    /**\n     * To get from to value from start, end, size, start from axis\n     */\n    getFromTovalue(start, end, size, startFromAxis, axis) {\n        let from = startFromAxis ? axis.visibleRange.min : this.findValue(Math.min(start, isNullOrUndefined(end) ? start : end), axis);\n        let to = this.findValue(this.getToValue(Math.max(start, isNullOrUndefined(end) ? start : end), from, size, axis, end), axis);\n        return { from: valueToCoefficient(axis.isInversed ? to : from, axis), to: valueToCoefficient(axis.isInversed ? from : to, axis) };\n    }\n    getToValue(to, from, size, axis, end) {\n        if (axis.valueType === 'DateTime') {\n            return (isNullOrUndefined(end) ? new Date(new Date(from).getTime() + size) : to);\n        }\n        else {\n            return isNullOrUndefined(end) ? (axis.valueType === 'Logarithmic' ? Math.pow(axis.logBase, from) : from) + size : to;\n        }\n    }\n    findValue(value, axis) {\n        if (axis.valueType === 'Logarithmic') {\n            value = logBase(value, axis.logBase);\n        }\n        if (value < axis.visibleRange.min) {\n            value = axis.visibleRange.min;\n        }\n        else if (value > axis.visibleRange.max) {\n            value = axis.visibleRange.max;\n        }\n        return value;\n    }\n    /**\n     * To render striplines based start and end.\n     * @private\n     * @param chart\n     * @param position\n     * @param axes\n     */\n    renderStripLine(chart, position, axes) {\n        let id = chart.element.id + '_stripline_' + position + '_';\n        let striplineGroup = chart.renderer.createGroup({ id: id + 'collections' });\n        let seriesClipRect = chart.chartAxisLayoutPanel.seriesClipRect;\n        let rect;\n        let count = 0;\n        for (let axis of axes) {\n            for (let stripline of axis.stripLines) {\n                if (stripline.visible && stripline.zIndex === position) {\n                    rect = this.measureStripLine(axis, stripline, seriesClipRect);\n                    this.renderRectangle(stripline, rect, id + 'rect_' + count, striplineGroup, chart);\n                    this.renderText(stripline, rect, id + 'text_' + count, striplineGroup, chart, axis);\n                    count++;\n                }\n            }\n        }\n        chart.svgObject.appendChild(striplineGroup);\n    }\n    renderRectangle(stripline, rect, id, parent, chart) {\n        parent.appendChild(chart.renderer.drawRectangle(new RectOption(id, stripline.color, stripline.border, stripline.opacity, rect, 0, 0, '', '')));\n    }\n    renderText(stripline, rect, id, parent, chart, axis) {\n        let textSize = measureText(stripline.text, stripline.textStyle);\n        let textMid = 3 * (textSize.height / 8);\n        let ty = rect.y + (rect.height / 2) + textMid;\n        let rotation = (stripline.rotation === null) ? ((axis.orientation === 'Vertical') ? 0 : -90) : stripline.rotation;\n        let tx = rect.x + (rect.width / 2);\n        let alignment;\n        let anchor;\n        let padding = 5;\n        if (axis.orientation === 'Horizontal') {\n            tx = this.getTextStart(tx + (textMid * this.factor(stripline.horizontalAlignment)), rect.width, stripline.horizontalAlignment);\n            ty = this.getTextStart(ty - textMid, rect.height, stripline.verticalAlignment);\n            alignment = this.invertAlignment(stripline.horizontalAlignment);\n        }\n        else {\n            tx = this.getTextStart(tx, rect.width, stripline.horizontalAlignment);\n            ty = this.getTextStart(ty + (textMid * this.factor(stripline.verticalAlignment)) - padding, rect.height, stripline.verticalAlignment);\n            alignment = stripline.verticalAlignment;\n        }\n        anchor = alignment;\n        textElement(new TextOption(id, tx, ty, anchor, stripline.text, 'rotate(' + rotation + ' ' + tx + ',' + ty + ')', 'middle'), stripline.textStyle, stripline.textStyle.color, parent);\n    }\n    invertAlignment(anchor) {\n        switch (anchor) {\n            case 'Start':\n                anchor = 'Start';\n                break;\n            case 'End':\n                anchor = 'End';\n                break;\n        }\n        return anchor;\n    }\n    factor(anchor) {\n        let factor = 0;\n        switch (anchor) {\n            case 'Start':\n                factor = 1;\n                break;\n            case 'End':\n                factor = -1;\n                break;\n        }\n        return factor;\n    }\n    getTextStart(xy, size, textAlignment) {\n        let padding = 5;\n        switch (textAlignment) {\n            case 'Start':\n                xy = xy - (size / 2) + padding;\n                break;\n            case 'End':\n                xy = xy + (size / 2) - padding;\n                break;\n        }\n        return xy;\n    }\n    /**\n     * To get the module name for `StripLine`.\n     * @private\n     */\n    getModuleName() {\n        return 'StripLine';\n    }\n    /**\n     * To destroy the `StripLine` module.\n     * @private\n     */\n    destroy() {\n        // destroy peform here\n    }\n}\n\n/**\n * Base for line type series.\n */\nclass LineBase {\n    /** @private */\n    constructor(chartModule) {\n        this.chart = chartModule;\n        this.padding = 5;\n    }\n    /**\n     * To improve the chart performance.\n     * @return {void}\n     * @private\n     */\n    improveChartPerformance(series) {\n        let tempPoints = [];\n        let xVisibleRange = series.xAxis.visibleRange;\n        let yVisibleRange = series.yAxis.visibleRange;\n        let seriesPoints = series.points;\n        let areaBounds = series.clipRect;\n        let xTolerance = Math.abs(xVisibleRange.delta / areaBounds.width);\n        let yTolerance = Math.abs(yVisibleRange.delta / areaBounds.height);\n        let prevXValue = (seriesPoints[0] && seriesPoints[0].x > xTolerance) ? 0 : xTolerance;\n        let prevYValue = (seriesPoints[0] && seriesPoints[0].y > yTolerance) ? 0 : yTolerance;\n        let xVal = 0;\n        let yVal = 0;\n        for (let currentPoint of seriesPoints) {\n            currentPoint.symbolLocations = [];\n            xVal = currentPoint.xValue ? currentPoint.xValue : xVisibleRange.min;\n            yVal = currentPoint.yValue ? currentPoint.yValue : yVisibleRange.min;\n            if (Math.abs(prevXValue - xVal) >= xTolerance || Math.abs(prevYValue - yVal) >= yTolerance) {\n                tempPoints.push(currentPoint);\n                prevXValue = xVal;\n                prevYValue = yVal;\n            }\n        }\n        return tempPoints;\n    }\n    /**\n     * To generate the line path direction\n     * @param firstPoint\n     * @param secondPoint\n     * @param series\n     * @param isInverted\n     * @param getPointLocation\n     * @param startPoint\n     */\n    getLineDirection(firstPoint, secondPoint, series, isInverted, getPointLocation, startPoint) {\n        let direction = '';\n        if (firstPoint != null) {\n            let point1 = getPointLocation(firstPoint.xValue, firstPoint.yValue, series.xAxis, series.yAxis, isInverted, series);\n            let point2 = getPointLocation(secondPoint.xValue, secondPoint.yValue, series.xAxis, series.yAxis, isInverted, series);\n            direction = startPoint + ' ' + (point1.x) + ' ' + (point1.y) + ' ' +\n                'L' + ' ' + (point2.x) + ' ' + (point2.y) + ' ';\n        }\n        return direction;\n    }\n    /**\n     * To append the line path.\n     * @return {void}\n     * @private\n     */\n    appendLinePath(options, series, clipRect) {\n        let htmlObject = series.chart.renderer.drawPath(options);\n        htmlObject.setAttribute('clip-path', clipRect);\n        series.pathElement = htmlObject;\n        series.seriesElement.appendChild(htmlObject);\n        series.isRectSeries = false;\n    }\n    /**\n     * To render the marker for the series.\n     * @return {void}\n     * @private\n     */\n    renderMarker(series) {\n        if (series.marker.visible) {\n            series.chart.markerRender.render(series);\n        }\n    }\n    /**\n     * To do the progressive animation.\n     * @return {void}\n     * @private\n     */\n    doProgressiveAnimation(series, option) {\n        let animation = new Animation({});\n        let path = series.pathElement;\n        let strokeDashArray = path.getAttribute('stroke-dasharray');\n        let pathLength = series.pathElement.getTotalLength();\n        let currentTime;\n        path.style.visibility = 'hidden';\n        animation.animate(path, {\n            duration: option.duration,\n            delay: option.delay,\n            progress: (args) => {\n                if (args.timeStamp >= args.delay) {\n                    path.style.visibility = 'visible';\n                    currentTime = Math.abs(Math.round(((args.timeStamp - args.delay) * pathLength) / args.duration));\n                    path.setAttribute('stroke-dasharray', currentTime + ',' + pathLength);\n                }\n            },\n            end: (model) => {\n                path.setAttribute('stroke-dasharray', strokeDashArray);\n                series.chart.trigger('animationComplete', { series: series });\n            }\n        });\n    }\n    /**\n     * To store the symbol location and region\n     * @param point\n     * @param series\n     * @param isInverted\n     * @param getLocation\n     */\n    storePointLocation(point, series, isInverted, getLocation) {\n        point.symbolLocations.push(getLocation(point.xValue, point.yValue, series.xAxis, series.yAxis, isInverted, series));\n        point.regions.push(new Rect(point.symbolLocations[0].x - series.marker.width, point.symbolLocations[0].y - series.marker.height, 2 * series.marker.width, 2 * series.marker.height));\n    }\n    /**\n     * To do the linear animation.\n     * @return {void}\n     * @private\n     */\n    doLinearAnimation(series, animation) {\n        let clipRect = series.clipRectElement.childNodes[0].childNodes[0];\n        let effect = getAnimationFunction('Linear');\n        let elementHeight = +clipRect.getAttribute('height');\n        let elementWidth = +clipRect.getAttribute('width');\n        let xCenter = +clipRect.getAttribute('x');\n        let yCenter = series.chart.requireInvertedAxis ? +clipRect.getAttribute('height') + +clipRect.getAttribute('y') :\n            +clipRect.getAttribute('y');\n        let value;\n        clipRect.style.visibility = 'hidden';\n        new Animation({}).animate(clipRect, {\n            duration: animation.duration,\n            delay: animation.delay,\n            progress: (args) => {\n                if (args.timeStamp >= args.delay) {\n                    clipRect.style.visibility = 'visible';\n                    if (series.chart.requireInvertedAxis) {\n                        value = effect(args.timeStamp - args.delay, 0, elementHeight, args.duration);\n                        clipRect.setAttribute('transform', 'translate(' + xCenter + ' ' + yCenter +\n                            ') scale(1,' + (value / elementHeight) + ') translate(' + (-xCenter) + ' ' + (-yCenter) + ')');\n                    }\n                    else {\n                        value = effect(args.timeStamp - args.delay, 0, elementWidth, args.duration);\n                        clipRect.setAttribute('transform', 'translate(' + xCenter + ' ' + yCenter +\n                            ') scale(' + (value / elementWidth) + ', 1) translate(' + (-xCenter) + ' ' + (-yCenter) + ')');\n                    }\n                }\n            },\n            end: (model) => {\n                clipRect.setAttribute('transform', 'translate(0,0)');\n                series.chart.trigger('animationComplete', { series: series });\n            }\n        });\n    }\n}\n\n/**\n * `LineSeries` module used to render the line series.\n */\nclass LineSeries extends LineBase {\n    /**\n     * Render Line Series.\n     * @return {void}.\n     * @private\n     */\n    render(series, xAxis, yAxis, isInverted) {\n        let point1;\n        let point2;\n        let direction = '';\n        let prevPoint = null;\n        let startPoint = 'M';\n        let options;\n        let getCoordinate = series.chart.chartAreaType === 'PolarRadar' ? TransformToVisible : getPoint;\n        let visiblePoints = this.improveChartPerformance(series);\n        for (let point of visiblePoints) {\n            point.regions = [];\n            if (point.visible && withInRange(visiblePoints[point.index - 1], point, visiblePoints[point.index + 1], series)) {\n                direction += this.getLineDirection(prevPoint, point, series, isInverted, getCoordinate, startPoint);\n                startPoint = prevPoint ? 'L' : startPoint;\n                prevPoint = point;\n                this.storePointLocation(point, series, isInverted, getCoordinate);\n            }\n            else {\n                prevPoint = (series.emptyPointSettings.mode === 'Drop') ? prevPoint : null;\n                startPoint = (series.emptyPointSettings.mode === 'Drop') ? startPoint : 'M';\n                point.symbolLocations = [];\n            }\n        }\n        if (series.chart.chartAreaType === 'PolarRadar') {\n            if (series.isClosed) {\n                point2 = getCoordinate(visiblePoints[visiblePoints.length - 1].xValue, visiblePoints[visiblePoints.length - 1].yValue, xAxis, yAxis, isInverted, series);\n                point1 = getCoordinate(visiblePoints[0].xValue, visiblePoints[0].yValue, xAxis, yAxis, isInverted, series);\n                direction = direction.concat(startPoint + ' ' + point2.x + ' ' + point2.y + ' ' + 'L' + ' ' + point1.x + ' ' + point1.y);\n            }\n        }\n        let name = series.category === 'Indicator' ? series.chart.element.id + '_Indicator_' + series.index + '_' + series.name :\n            series.category === 'TrendLine' ? series.chart.element.id + '_Series_' + series.sourceIndex + '_TrendLine_' + series.index :\n                series.chart.element.id + '_Series_' + series.index;\n        options = new PathOption(name, 'none', series.width, series.interior, series.opacity, series.dashArray, direction);\n        this.appendLinePath(options, series, '');\n        this.renderMarker(series);\n    }\n    /**\n     * Animates the series.\n     * @param  {Series} series - Defines the series to animate.\n     * @return {void}\n     */\n    doAnimation(series) {\n        let option = series.animation;\n        this.doProgressiveAnimation(series, option);\n    }\n    /**\n     * Get module name.\n     */\n    getModuleName() {\n        /**\n         * Returns the module name of the series\n         */\n        return 'LineSeries';\n    }\n    /**\n     * To destroy the line series.\n     * @return {void}\n     * @private\n     */\n    destroy(chart) {\n        /**\n         * Destroy method performed here\n         */\n    }\n}\n\n/**\n * Column Series Base\n */\nclass ColumnBase {\n    /**\n     * To get the position of the column series.\n     * @return {DoubleRange}\n     * @private\n     */\n    getSideBySideInfo(series) {\n        if (series.chart.enableSideBySidePlacement && !series.position) {\n            this.getSideBySidePositions(series);\n        }\n        let position = !series.chart.enableSideBySidePlacement ? 0 : series.position;\n        let rectCount = !series.chart.enableSideBySidePlacement ? 1 : series.rectCount;\n        series.isRectSeries = true;\n        let visibleSeries = series.chart.visibleSeries;\n        let seriesSpacing = series.chart.enableSideBySidePlacement ? series.columnSpacing : 0; // Column Spacing\n        let pointSpacing = series.columnWidth; // Column width\n        let minimumPointDelta = getMinPointsDelta(series.xAxis, visibleSeries);\n        let width = minimumPointDelta * pointSpacing;\n        let radius;\n        let location = (position) / rectCount - 0.5;\n        let doubleRange = new DoubleRange(location, location + (1 / rectCount));\n        if (!(isNaN(doubleRange.start) || isNaN(doubleRange.end))) {\n            doubleRange = new DoubleRange(doubleRange.start * width, doubleRange.end * width);\n            radius = seriesSpacing * doubleRange.delta;\n            doubleRange = new DoubleRange(doubleRange.start + radius / 2, doubleRange.end - radius / 2);\n        }\n        return doubleRange;\n    }\n    /**\n     * To get the rect values.\n     * @return {Rect}\n     * @private\n     */\n    getRectangle(x1, y1, x2, y2, series) {\n        let point1 = getPoint(x1, y1, series.xAxis, series.yAxis, series.chart.requireInvertedAxis);\n        let point2 = getPoint(x2, y2, series.xAxis, series.yAxis, series.chart.requireInvertedAxis);\n        return new Rect(Math.min(point1.x, point2.x), Math.min(point1.y, point2.y), Math.abs(point2.x - point1.x), Math.abs(point2.y - point1.y));\n    }\n    /**\n     * To get the position of each series.\n     * @return {void}\n     * @private\n     */\n    getSideBySidePositions(series) {\n        let chart = series.chart;\n        for (let columnItem of chart.columns) {\n            for (let item of chart.rows) {\n                this.findRectPosition(series.findSeriesCollection(columnItem, item, false));\n            }\n        }\n    }\n    findRectPosition(seriesCollection) {\n        let stackingGroup = [];\n        let vSeries = { rectCount: 0, position: null };\n        seriesCollection.forEach((value) => {\n            if (value.type.indexOf('Stacking') !== -1) {\n                if (value.stackingGroup) {\n                    if (stackingGroup[value.stackingGroup] === undefined) {\n                        value.position = vSeries.rectCount;\n                        stackingGroup[value.stackingGroup] = vSeries.rectCount++;\n                    }\n                    else {\n                        value.position = stackingGroup[value.stackingGroup];\n                    }\n                }\n                else {\n                    if (vSeries.position === null) {\n                        value.position = vSeries.rectCount;\n                        vSeries.position = vSeries.rectCount++;\n                    }\n                    else {\n                        value.position = vSeries.position;\n                    }\n                }\n            }\n            else {\n                value.position = vSeries.rectCount++;\n            }\n        });\n        seriesCollection.forEach((value) => {\n            value.rectCount = vSeries.rectCount;\n        });\n    }\n    /**\n     * Updates the symbollocation for points\n     * @return void\n     * @private\n     */\n    updateSymbolLocation(point, rect, series) {\n        if (!series.chart.requireInvertedAxis) {\n            this.updateXRegion(point, rect, series);\n        }\n        else {\n            this.updateYRegion(point, rect, series);\n        }\n    }\n    /**\n     * Update the region for the point.\n     * @return {void}\n     * @private\n     */\n    updateXRegion(point, rect, series) {\n        point.regions.push(rect);\n        point.symbolLocations.push({\n            x: rect.x + (rect.width) / 2,\n            y: (series.seriesType === 'BoxPlot' || series.seriesType.indexOf('HighLow') !== -1 ||\n                (point.yValue >= 0 === !series.yAxis.isInversed)) ? rect.y : (rect.y + rect.height)\n        });\n    }\n    /**\n     * Update the region for the point in bar series.\n     * @return {void}\n     * @private\n     */\n    updateYRegion(point, rect, series) {\n        point.regions.push(rect);\n        point.symbolLocations.push({\n            x: (series.seriesType === 'BoxPlot' || series.seriesType.indexOf('HighLow') !== -1 ||\n                (point.yValue >= 0 === !series.yAxis.isInversed)) ? rect.x + rect.width : rect.x,\n            y: rect.y + rect.height / 2\n        });\n    }\n    /**\n     * To trigger the point rendering event.\n     * @return {void}\n     * @private\n     */\n    triggerEvent(series, point, fill, border) {\n        let argsData = {\n            cancel: false, name: pointRender, series: series, point: point,\n            fill: series.setPointColor(point, fill),\n            border: series.setBorderColor(point, border)\n        };\n        series.chart.trigger(pointRender, argsData);\n        point.color = argsData.fill;\n        return argsData;\n    }\n    /**\n     * To draw the rectangle for points.\n     * @return {void}\n     * @private\n     */\n    drawRectangle(series, point, rect, argsData) {\n        let check = series.chart.requireInvertedAxis ? rect.height : rect.width;\n        if (check <= 0) {\n            return null;\n        }\n        let direction = this.calculateRoundedRectPath(rect, series.cornerRadius.topLeft, series.cornerRadius.topRight, series.cornerRadius.bottomLeft, series.cornerRadius.bottomRight);\n        let name = series.category === 'Indicator' ? series.chart.element.id + '_Indicator_' + series.index + '_' + series.name +\n            '_Point_' + point.index : series.chart.element.id + '_Series_' + series.index + '_Point_' + point.index;\n        let options = new PathOption(name, argsData.fill, argsData.border.width, argsData.border.color, series.opacity, series.dashArray, direction);\n        let element = series.chart.renderer.drawPath(options);\n        switch (series.seriesType) {\n            case 'XY':\n                element.setAttribute('aria-label', point.x.toString() + ':' + point.yValue.toString());\n                break;\n            case 'HighLow':\n                element.setAttribute('aria-label', point.x.toString() + ':' + point.high.toString() + ':' + point.low.toString());\n                break;\n        }\n        series.seriesElement.appendChild(element);\n    }\n    /**\n     * To animate the series.\n     * @return {void}\n     * @private\n     */\n    animate(series) {\n        let rectElements = series.seriesElement.childNodes;\n        let count = series.category === 'Indicator' ? 0 : 1;\n        for (let point of series.points) {\n            if (!point.symbolLocations.length && !(series.type === 'BoxAndWhisker' && point.regions.length)) {\n                continue;\n            }\n            this.animateRect(rectElements[count], series, point);\n            count++;\n        }\n    }\n    /**\n     * To animate the series.\n     * @return {void}\n     * @private\n     */\n    animateRect(element, series, point) {\n        let option = series.animation;\n        let effect = getAnimationFunction('Linear');\n        let isPlot = point.yValue < 0;\n        let x;\n        let y;\n        let elementHeight = +point.regions[0].height;\n        let elementWidth = +point.regions[0].width;\n        let centerX;\n        let centerY;\n        if (!series.chart.requireInvertedAxis) {\n            x = +point.regions[0].x;\n            if (series.type.indexOf('Stacking') > -1) {\n                y = (1 - valueToCoefficient(0, series.yAxis)) * (series.yAxis.rect.height);\n                centerX = x;\n                centerY = y;\n            }\n            else {\n                y = +point.regions[0].y;\n                centerY = (series.seriesType.indexOf('HighLow') !== -1 || series.type.indexOf('Waterfall') !== -1) ? y + elementHeight / 2 :\n                    (isPlot !== series.yAxis.isInversed) ? y : y + elementHeight;\n                centerX = isPlot ? x : x + elementWidth;\n            }\n        }\n        else {\n            y = +point.regions[0].y;\n            if (series.type.indexOf('Stacking') > -1) {\n                x = (valueToCoefficient(0, series.yAxis)) * series.yAxis.rect.width;\n                centerX = x;\n                centerY = y;\n            }\n            else {\n                x = +point.regions[0].x;\n                centerY = isPlot ? y : y + elementHeight;\n                centerX = (series.seriesType.indexOf('HighLow') !== -1 || series.type.indexOf('Waterfall') !== -1) ? x + elementWidth / 2 :\n                    (isPlot !== series.yAxis.isInversed) ? x + elementWidth : x;\n            }\n        }\n        let value;\n        element.style.visibility = 'hidden';\n        new Animation({}).animate(element, {\n            duration: option.duration,\n            delay: option.delay,\n            progress: (args) => {\n                if (args.timeStamp >= args.delay) {\n                    element.style.visibility = 'visible';\n                    if (!series.chart.requireInvertedAxis) {\n                        elementHeight = elementHeight ? elementHeight : 1;\n                        value = effect(args.timeStamp - args.delay, 0, elementHeight, args.duration);\n                        element.setAttribute('transform', 'translate(' + centerX + ' ' + centerY +\n                            ') scale(1,' + (value / elementHeight) + ') translate(' + (-centerX) + ' ' + (-centerY) + ')');\n                    }\n                    else {\n                        elementWidth = elementWidth ? elementWidth : 1;\n                        value = effect(args.timeStamp - args.delay, 0, elementWidth, args.duration);\n                        element.setAttribute('transform', 'translate(' + centerX + ' ' + centerY +\n                            ') scale(' + (value / elementWidth) + ', 1) translate(' + (-centerX) + ' ' + (-centerY) + ')');\n                    }\n                }\n            },\n            end: (model) => {\n                element.setAttribute('transform', 'translate(0,0)');\n                let seriesElement = series.seriesElement;\n                if (element === seriesElement.lastElementChild || point.index === series.points.length - 1 ||\n                    (series.type === 'Waterfall' && element === seriesElement.children[seriesElement.childElementCount - 2])) {\n                    series.chart.trigger('animationComplete', { series: series });\n                    if (series.type === 'Waterfall') {\n                        let rectElements = seriesElement.childNodes;\n                        for (let i = 0; i < rectElements.length; i++) {\n                            if (rectElements[i].id.indexOf('Connector') !== -1) {\n                                rectElements[i].style.visibility = 'visible';\n                                rectElements[i].setAttribute('transform', 'translate(0,0)');\n                            }\n                        }\n                    }\n                }\n            }\n        });\n    }\n    /**\n     * To get rounded rect path direction\n     */\n    calculateRoundedRectPath(rect, topLeft, topRight, bottomLeft, bottomRight) {\n        return 'M' + ' ' + rect.x + ' ' + (topLeft + rect.y) +\n            ' Q ' + rect.x + ' ' + rect.y + ' ' + (rect.x + topLeft) + ' ' +\n            rect.y + ' ' + 'L' + ' ' + (rect.x + rect.width - topRight) + ' ' + rect.y +\n            ' Q ' + (rect.x + rect.width) + ' ' + rect.y + ' ' +\n            (rect.x + rect.width) + ' ' + (rect.y + topRight) + ' ' + 'L ' +\n            (rect.x + rect.width) + ' ' + (rect.y + rect.height - bottomRight)\n            + ' Q ' + (rect.x + rect.width) + ' ' + (rect.y + rect.height) + ' ' + (rect.x + rect.width - bottomRight) + ' ' +\n            (rect.y + rect.height) + ' ' + 'L ' + (rect.x + bottomLeft) + ' ' + (rect.y + rect.height) + ' Q ' + rect.x + ' ' +\n            (rect.y + rect.height) + ' ' + rect.x + ' ' + (rect.y + rect.height - bottomLeft) + ' ' + 'L' + ' ' + rect.x + ' ' +\n            (topLeft + rect.y) + ' ' + 'Z';\n    }\n}\n\n/**\n * `ColumnSeries` Module used to render the column series.\n */\nclass ColumnSeries extends ColumnBase {\n    /**\n     * Render Column series.\n     * @return {void}\n     * @private\n     */\n    render(series) {\n        let rect;\n        let sideBySideInfo = this.getSideBySideInfo(series);\n        let origin = Math.max(series.yAxis.visibleRange.min, 0);\n        let argsData;\n        for (let pointColumn of series.points) {\n            pointColumn.symbolLocations = [];\n            pointColumn.regions = [];\n            if (pointColumn.visible && withInRange(series.points[pointColumn.index - 1], pointColumn, series.points[pointColumn.index + 1], series)) {\n                rect = this.getRectangle(pointColumn.xValue + sideBySideInfo.start, pointColumn.yValue, pointColumn.xValue + sideBySideInfo.end, origin, series);\n                let color = series.category === 'Indicator' ? pointColumn.color : series.interior;\n                argsData = this.triggerEvent(series, pointColumn, color, { width: series.border.width, color: series.border.color });\n                if (!argsData.cancel) {\n                    this.updateSymbolLocation(pointColumn, rect, series);\n                    this.drawRectangle(series, pointColumn, rect, argsData);\n                }\n            }\n        }\n    }\n    /**\n     * Animates the series.\n     * @param  {Series} series - Defines the series to animate.\n     * @return {void}\n     */\n    doAnimation(series) {\n        this.animate(series);\n    }\n    /**\n     * Get module name.\n     */\n    getModuleName() {\n        return 'ColumnSeries';\n        /**\n         * return the module name\n         */\n    }\n    /**\n     * To destroy the column series.\n     * @return {void}\n     * @private\n     */\n    destroy(chart) {\n        /**\n         * Destroy method performed here\n         */\n    }\n}\n\n/**\n * Base class for multi colored series\n */\nclass MultiColoredSeries extends LineBase {\n    /**\n     * To Generate the area path direction\n     * @param xValue\n     * @param yValue\n     * @param series\n     * @param isInverted\n     * @param getPointLocation\n     * @param startPoint\n     * @param startPath\n     */\n    getAreaPathDirection(xValue, yValue, series, isInverted, getPointLocation, startPoint, startPath) {\n        let direction = '';\n        let firstPoint;\n        if (startPoint === null) {\n            firstPoint = getPointLocation(xValue, yValue, series.xAxis, series.yAxis, isInverted, series);\n            direction += (startPath + ' ' + (firstPoint.x) + ' ' + (firstPoint.y) + ' ');\n        }\n        return direction;\n    }\n    /**\n     * To Generate the empty point direction\n     * @param firstPoint\n     * @param secondPoint\n     * @param series\n     * @param isInverted\n     * @param getPointLocation\n     */\n    getAreaEmptyDirection(firstPoint, secondPoint, series, isInverted, getPointLocation) {\n        let direction = '';\n        direction += this.getAreaPathDirection(firstPoint.x, firstPoint.y, series, isInverted, getPointLocation, null, 'L');\n        direction += this.getAreaPathDirection(secondPoint.x, secondPoint.y, series, isInverted, getPointLocation, null, 'L');\n        return direction;\n    }\n    /**\n     * To set point color\n     * @param points\n     */\n    setPointColor(currentPoint, previous, series, isXSegment, segments) {\n        if (series.pointColorMapping === '') {\n            let segment;\n            let value;\n            for (let i = 0; i < segments.length; i++) {\n                segment = segments[i];\n                value = isXSegment ? currentPoint.xValue : currentPoint.yValue;\n                if (value <= this.getAxisValue(segment.value, isXSegment ? series.xAxis : series.yAxis, series.chart) || !segment.value) {\n                    currentPoint.interior = segment.color;\n                    break;\n                }\n            }\n            if (currentPoint.interior == null) {\n                currentPoint.interior = series.interior;\n            }\n            return false;\n        }\n        else {\n            if (previous) {\n                return series.setPointColor(currentPoint, series.interior) !== series.setPointColor(previous, series.interior);\n            }\n            else {\n                return false;\n            }\n        }\n    }\n    sortSegments(series, chartSegments) {\n        let axis = series.segmentAxis === 'X' ? series.xAxis : series.yAxis;\n        let segments = [].concat(chartSegments);\n        let access = this;\n        return segments.sort((a, b) => {\n            return access.getAxisValue(a.value, axis, series.chart) - access.getAxisValue(b.value, axis, series.chart);\n        });\n    }\n    /**\n     * Segment calculation performed here\n     * @param series\n     * @param options\n     * @param chartSegments\n     */\n    applySegmentAxis(series, options, segments) {\n        if (series.pointColorMapping !== '') {\n            options.map((option) => {\n                this.appendLinePath(option, series, '');\n            });\n            return null;\n        }\n        let isXSegment = series.segmentAxis === 'X';\n        let axis = isXSegment ? series.xAxis : series.yAxis;\n        let chart = series.chart;\n        let segment;\n        this.includeSegment(segments, axis, series, segments.length);\n        let length = segments.length;\n        let value;\n        let clipPath;\n        for (let index = 0; index < length; index++) {\n            segment = segments[index];\n            value = this.getAxisValue(segment.value, axis, series.chart);\n            clipPath = this.createClipRect(index ? this.getAxisValue(segments[index - 1].value, axis, series.chart)\n                : axis.visibleRange.min, value, series, index, isXSegment);\n            if (clipPath) {\n                options.map((option) => {\n                    series.seriesElement.appendChild(chart.renderer.drawPath({\n                        'clip-path': clipPath,\n                        'stroke-dasharray': segment.dashArray,\n                        'opacity': option.opacity,\n                        'stroke': series.type.indexOf('Line') > -1 ? segment.color || series.interior : series.border.color,\n                        'stroke-width': option['stroke-width'],\n                        'fill': series.type.indexOf('Line') > -1 ? 'none' : segment.color || series.interior,\n                        'id': option.id + '_Segment_' + index,\n                        'd': option.d\n                    }));\n                });\n            }\n        }\n    }\n    includeSegment(segments, axis, series, length) {\n        if (length <= 0) {\n            segments.push({ value: axis.visibleRange.max, color: series.interior });\n            return null;\n        }\n        if (this.getAxisValue(segments[length - 1].value, axis, series.chart) < axis.visibleRange.max) {\n            segments.push({ value: axis.visibleRange.max, color: series.interior });\n        }\n    }\n    /**\n     * To create clip rect for segment axis\n     * @param startValue\n     * @param endValue\n     * @param series\n     * @param index\n     * @param isX\n     * @param chart\n     */\n    createClipRect(startValue, endValue, series, index, isX) {\n        let isRequired = series.chart.requireInvertedAxis;\n        let startPointLocation = getPoint(isX ? startValue : series.xAxis.visibleRange.min, isX ? series.yAxis.visibleRange.max : endValue, series.xAxis, series.yAxis, isRequired);\n        let endPointLocation = getPoint(isX ? endValue : series.xAxis.visibleRange.max, isX ? series.yAxis.visibleRange.min : startValue, series.xAxis, series.yAxis, isRequired);\n        endPointLocation = isRequired ?\n            [startPointLocation, startPointLocation = endPointLocation][0] : endPointLocation;\n        if ((endPointLocation.x - startPointLocation.x > 0) && (endPointLocation.y - startPointLocation.y > 0)) {\n            series.seriesElement.appendChild(series.chart.renderer.drawClipPath(new RectOption(series.chart.element.id + '_ChartSegmentClipRect_' + index, 'transparent', { width: 1, color: 'Gray' }, 1, {\n                x: startPointLocation.x,\n                y: startPointLocation.y,\n                width: endPointLocation.x - startPointLocation.x,\n                height: endPointLocation.y - startPointLocation.y\n            })));\n            return 'url(#' + series.chart.element.id + '_ChartSegmentClipRect_' + index + ')';\n        }\n        return null;\n    }\n    /**\n     * To get exact value from segment value\n     * @param segmentValue\n     * @param axis\n     * @param chart\n     */\n    getAxisValue(segmentValue, axis, chart) {\n        if (segmentValue === null) {\n            segmentValue = axis.visibleRange.max;\n        }\n        if (axis.valueType === 'DateTime') {\n            let option = { skeleton: 'full', type: 'dateTime' };\n            return Date.parse(chart.intl.getDateParser(option)(chart.intl.getDateFormat(option)(new Date(DataUtil.parse.parseJson({ val: segmentValue }).val))));\n        }\n        else if (axis.valueType.indexOf('Category') > -1) {\n            let xValue = axis.valueType === 'DateTimeCategory' ?\n                (segmentValue.getTime()).toString() :\n                segmentValue;\n            return (axis.labels.indexOf(xValue) < 0) ? +segmentValue : axis.labels.indexOf(xValue);\n        }\n        else {\n            return +segmentValue;\n        }\n    }\n}\n\n/**\n * `AreaSeries` module is used to render the area series.\n */\nclass AreaSeries extends MultiColoredSeries {\n    /**\n     * Render Area series.\n     * @return {void}\n     * @private\n     */\n    render(series, xAxis, yAxis, isInverted) {\n        let startPoint = null;\n        let direction = '';\n        let origin = series.chart.chartAreaType === 'PolarRadar' ? series.points[0].yValue :\n            Math.max(series.yAxis.visibleRange.min, 0);\n        let currentXValue;\n        let getCoordinate = series.chart.chartAreaType === 'PolarRadar' ? TransformToVisible : getPoint;\n        series.points.map((point, i, seriesPoints) => {\n            currentXValue = point.xValue;\n            point.symbolLocations = [];\n            point.regions = [];\n            if (point.visible && withInRange(seriesPoints[i - 1], point, seriesPoints[i + 1], series)) {\n                direction += this.getAreaPathDirection(currentXValue, origin, series, isInverted, getCoordinate, startPoint, 'M');\n                startPoint = startPoint || new ChartLocation(currentXValue, origin);\n                // First Point to draw the area path\n                direction += this.getAreaPathDirection(currentXValue, point.yValue, series, isInverted, getCoordinate, null, 'L');\n                if (seriesPoints[i + 1] && !seriesPoints[i + 1].visible && series.emptyPointSettings.mode !== 'Drop') {\n                    direction += this.getAreaEmptyDirection({ 'x': currentXValue, 'y': origin }, startPoint, series, isInverted, getCoordinate);\n                    startPoint = null;\n                }\n                this.storePointLocation(point, series, isInverted, getPoint);\n            }\n        });\n        this.appendLinePath(new PathOption(series.chart.element.id + '_Series_' + series.index, series.interior, series.border.width, series.border.color, series.opacity, series.dashArray, (series.points.length > 1 ? (direction + this.getAreaPathDirection(series.points[series.points.length - 1].xValue, series.chart.chartAreaType === 'PolarRadar' ?\n            series.points[series.points.length - 1].yValue : origin, series, isInverted, getCoordinate, null, 'L')) : '')), series, '');\n        this.renderMarker(series);\n    }\n    /**\n     * To destroy the area series.\n     * @return {void}\n     * @private\n     */\n    destroy(chart) {\n        /**\n         * Destroy method calling here\n         */\n    }\n    /**\n     * Get module name\n     */\n    getModuleName() {\n        /**\n         * Returns the module name of the series\n         */\n        return 'AreaSeries';\n    }\n    /**\n     * Animates the series.\n     * @param  {Series} series - Defines the series to animate.\n     * @return {void}\n     */\n    doAnimation(series) {\n        let option = series.animation;\n        this.doLinearAnimation(series, option);\n    }\n}\n\n/**\n * `BarSeries` module is used to render the bar series.\n */\nclass BarSeries extends ColumnBase {\n    /**\n     * Render Bar series.\n     * @return {void}\n     * @private\n     */\n    render(series) {\n        let origin = Math.max(series.yAxis.visibleRange.min, 0);\n        let sideBySideInfo = this.getSideBySideInfo(series);\n        let rect;\n        let argsData;\n        for (let pointBar of series.points) {\n            pointBar.symbolLocations = [];\n            pointBar.regions = [];\n            if (pointBar.visible && withInRange(series.points[pointBar.index - 1], pointBar, series.points[pointBar.index + 1], series)) {\n                rect = this.getRectangle(pointBar.xValue + sideBySideInfo.start, pointBar.yValue, pointBar.xValue + sideBySideInfo.end, origin, series);\n                argsData = this.triggerEvent(series, pointBar, series.interior, { width: series.border.width, color: series.border.color });\n                if (!argsData.cancel) {\n                    this.updateSymbolLocation(pointBar, rect, series);\n                    this.drawRectangle(series, pointBar, rect, argsData);\n                }\n            }\n        }\n    }\n    /**\n     * Animates the series.\n     * @param  {Series} series - Defines the series to animate.\n     * @return {void}\n     */\n    doAnimation(series) {\n        this.animate(series);\n    }\n    /**\n     * To destroy the bar series.\n     * @return {void}\n     * @private\n     */\n    destroy(chart) {\n        /**\n         * Destroy method performed here\n         */\n    }\n    /**\n     * Get module name\n     */\n    getModuleName() {\n        return 'BarSeries';\n    }\n}\n\nclass PolarRadarPanel extends LineBase {\n    /**\n     * Measure the polar radar axis size.\n     * @return {void}\n     * @private\n     */\n    measureAxis(rect) {\n        let chart = this.chart;\n        this.initialClipRect = rect;\n        this.seriesClipRect = new Rect(rect.x, rect.y, rect.width, rect.height);\n        //Measure axis size calculation\n        this.measureRowAxis(chart, this.initialClipRect);\n        this.measureColumnAxis(chart, this.initialClipRect);\n        this.calculateAxisSize();\n    }\n    measureRowAxis(chart, rect) {\n        this.calculateRowSize(rect);\n        let row = chart.rows[0];\n        this.measureDefinition(row, chart, new Size(chart.availableSize.width, row.computedHeight), rect);\n    }\n    measureColumnAxis(chart, rect) {\n        this.calculateColumnSize(rect);\n        let column = chart.columns[0];\n        this.measureDefinition(column, chart, new Size(column.computedWidth, chart.availableSize.height), rect);\n    }\n    /**\n     * Measure the column and row in chart.\n     * @return {void}\n     * @private\n     */\n    measureDefinition(definition, chart, size, clipRect) {\n        for (let axis of definition.axes) {\n            axis.getModule(chart);\n            axis.baseModule.calculateRangeAndInterval(size, axis);\n        }\n    }\n    /**\n     * Measure the axis.\n     * @return {void}\n     * @private\n     */\n    calculateAxisSize() {\n        let chart = this.chart;\n        let axis;\n        let padding = 5;\n        this.centerX = this.initialClipRect.width * 0.5 + this.initialClipRect.x;\n        this.centerY = this.initialClipRect.height * 0.5 + this.initialClipRect.y;\n        chart.radius = Math.min(this.initialClipRect.width, this.initialClipRect.height) / 2 - padding -\n            chart.primaryXAxis.majorTickLines.height - chart.primaryXAxis.maxLabelSize.height;\n        chart.radius = (chart.primaryXAxis.coefficient * chart.radius) / 100;\n        this.seriesClipRect.y = this.centerY - chart.radius;\n        this.seriesClipRect.x = this.centerX - chart.radius;\n        this.seriesClipRect.height = 2 * chart.radius;\n        this.seriesClipRect.width = 2 * chart.radius;\n        this.calculateRowSize(this.seriesClipRect);\n        axis = chart.primaryYAxis;\n        axis.rect = this.seriesClipRect;\n        this.calculateColumnSize(this.seriesClipRect);\n        axis = chart.primaryXAxis;\n        axis.rect = this.seriesClipRect;\n    }\n    /**\n     * Measure the axis.\n     * @return {void}\n     * @private\n     */\n    measure() {\n        let chart = this.chart;\n        chart.verticalAxes.push(chart.primaryYAxis);\n        let row = chart.rows[0];\n        row.axes[0] = chart.primaryYAxis;\n        chart.rows[0] = row;\n        chart.horizontalAxes.push(chart.primaryXAxis);\n        let column = chart.columns[0];\n        column.axes[0] = chart.primaryXAxis;\n        chart.columns[0] = column;\n    }\n    /**\n     * Measure the row size.\n     * @return {void}\n     */\n    calculateRowSize(rect) {\n        /*! Calculate row size */\n        let chart = this.chart;\n        let row = chart.rows[0];\n        row.computedHeight = rect.height / 2;\n        row.computedTop = rect.y;\n        chart.rows[0] = row;\n    }\n    /**\n     * Measure the row size.\n     * @return {void}\n     */\n    calculateColumnSize(rect) {\n        /*! Calculate column size */\n        let chart = this.chart;\n        let column = chart.columns[0];\n        column.computedLeft = rect.x;\n        column.computedWidth = rect.width;\n        chart.columns[0] = column;\n    }\n    /**\n     * To render the axis element.\n     * @return {void}\n     * @private\n     */\n    renderAxes() {\n        let axis;\n        let chart = this.chart;\n        this.startAngle = chart.primaryXAxis.startAngle;\n        let axisElement = chart.renderer.createGroup({ id: chart.element.id + 'AxisCollection' });\n        let axisLineElement = chart.renderer.createGroup({ id: chart.element.id + 'AxisOutsideCollection' });\n        for (let i = 0, len = chart.axisCollections.length; i < len; i++) {\n            this.element = chart.renderer.createGroup({ id: chart.element.id + 'AxisGroup' + i });\n            axis = chart.axisCollections[i];\n            if (axis.orientation === 'Horizontal') {\n                if (axis.majorGridLines.width > 0 || axis.majorTickLines.width > 0) {\n                    this.drawXAxisGridLine(axis, i);\n                }\n                if (axis.visible) {\n                    this.drawXAxisLabels(axis, i);\n                }\n            }\n            else {\n                this.drawYAxisGridLine(axis, i);\n                if (axis.lineStyle.width > 0) {\n                    this.drawYAxisLine(axis, i, axis.plotOffset, 0);\n                }\n                if (axis.visible) {\n                    this.drawYAxisLabels(axis, i);\n                }\n            }\n            axisElement.appendChild(this.element);\n        }\n        axisElement.appendChild(this.element);\n        chart.svgObject.appendChild(axisElement);\n        return axisLineElement;\n    }\n    drawYAxisLine(axis, index, plotX, plotY) {\n        let chart = this.chart;\n        let optionsLine = {};\n        let vector = CoefficientToVector(valueToPolarCoefficient(axis.visibleLabels[0].value, axis), this.startAngle);\n        let axisLine = 'M ' + this.centerX + ' ' + this.centerY + 'L ' +\n            (this.centerX + chart.radius * vector.x) + ' ' + (this.centerY + chart.radius * vector.y);\n        optionsLine = {\n            'id': chart.element.id + 'AxisLine_' + index,\n            'd': axisLine,\n            'stroke-dasharray': axis.lineStyle.dashArray,\n            'stroke-width': axis.lineStyle.width,\n            'stroke': axis.lineStyle.color || chart.themeStyle.axisLine\n        };\n        chart.yAxisElements.appendChild(chart.renderer.drawPath(optionsLine));\n    }\n    drawYAxisLabels(axis, index) {\n        let chart = this.chart;\n        let elementSize;\n        let options;\n        let pointX = 0;\n        let pointY = 0;\n        let vector;\n        let angle = this.startAngle < 0 ? this.startAngle + 360 : this.startAngle;\n        let anchor = 'middle';\n        let radius;\n        let padding = 5;\n        let labelElement = chart.renderer.createGroup({ id: chart.element.id + 'AxisLabels' + index });\n        vector = CoefficientToVector(valueToPolarCoefficient(axis.visibleLabels[0].value, axis), this.startAngle);\n        for (let i = 0, len = axis.visibleLabels.length; i < len; i++) {\n            radius = chart.radius * valueToCoefficient(axis.visibleLabels[i].value, axis);\n            elementSize = axis.visibleLabels[i].size;\n            radius = chart.radius * valueToCoefficient(axis.visibleLabels[i].value, axis);\n            pointX = (this.centerX + radius * vector.x) + ((axis.majorTickLines.height + elementSize.width / 2 + padding / 2)\n                * (Math.cos(angle * Math.PI / 180)) * (axis.labelPosition === 'Inside' ? 1 : -1));\n            pointY = (this.centerY + radius * vector.y) + ((axis.majorTickLines.height + elementSize.height / 2)\n                * (Math.sin(angle * Math.PI / 180)) * (axis.labelPosition === 'Inside' ? 1 : -1));\n            options = new TextOption(chart.element.id + index + '_AxisLabel_' + i, pointX, pointY + (elementSize.height / 4), anchor, axis.visibleLabels[i].text);\n            textElement(options, axis.labelStyle, axis.labelStyle.color || chart.themeStyle.axisLabel, labelElement);\n        }\n        chart.yAxisElements.appendChild(labelElement);\n    }\n    drawYAxisGridLine(axis, index) {\n        let chart = this.chart;\n        let options;\n        let radius;\n        let majorTick = '';\n        let majorGrid = '';\n        let vector;\n        let vector2;\n        let angle = this.startAngle < 0 ? this.startAngle + 360 : this.startAngle;\n        let rect = axis.rect;\n        let x1;\n        let y1;\n        let x2;\n        let y2;\n        let border = {\n            color: axis.majorGridLines.color || chart.themeStyle.majorGridLine,\n            width: axis.majorGridLines.width\n        };\n        if (axis.majorGridLines.width > 0) {\n            if (chart.visibleSeries[0].type === 'Polar') {\n                for (let j = 0; j < axis.visibleLabels.length; j++) {\n                    radius = chart.radius * valueToCoefficient(axis.visibleLabels[j].value, axis);\n                    options = new CircleOption(chart.element.id + '_MajorGridLine_' + index, 'transparent', border, axis.majorGridLines.width, this.centerX, this.centerY, radius);\n                    this.element.appendChild(chart.renderer.drawCircle(options));\n                }\n            }\n            else {\n                for (let j = 0; j < axis.visibleLabels.length; j++) {\n                    radius = chart.radius * valueToCoefficient(axis.visibleLabels[j].value, axis);\n                    for (let i = 0, len = chart.primaryXAxis.visibleLabels.length; i < len; i++) {\n                        vector = CoefficientToVector(valueToPolarCoefficient(chart.primaryXAxis.visibleLabels[i].value, chart.primaryXAxis), this.startAngle);\n                        if (i + 1 < len) {\n                            vector2 = CoefficientToVector(valueToPolarCoefficient(chart.primaryXAxis.visibleLabels[i + 1].value, chart.primaryXAxis), this.startAngle);\n                        }\n                        else {\n                            vector2 = CoefficientToVector(valueToPolarCoefficient(chart.primaryXAxis.visibleLabels[0].value, chart.primaryXAxis), this.startAngle);\n                        }\n                        x1 = this.centerX + radius * vector.x;\n                        y1 = this.centerY + radius * vector.y;\n                        x2 = this.centerX + radius * vector2.x;\n                        y2 = this.centerY + radius * vector2.y;\n                        majorGrid = majorGrid.concat('M' + ' ' + x1 + ' ' + y1 + ' ' + 'L' + ' ' + x2 + ' ' + y2 + ' ');\n                    }\n                }\n                options = new PathOption(chart.element.id + '_MajorGridLine_' + index, 'transparent', axis.majorGridLines.width, axis.majorGridLines.color || chart.themeStyle.majorGridLine, null, null, majorGrid);\n                this.element.appendChild(chart.renderer.drawPath(options));\n            }\n        }\n        if (axis.majorTickLines.width > 0) {\n            vector = CoefficientToVector(valueToPolarCoefficient(axis.visibleLabels[0].value, axis), this.startAngle);\n            for (let i = 0; i < axis.visibleLabels.length; i++) {\n                radius = chart.radius * valueToCoefficient(axis.visibleLabels[i].value, axis);\n                x1 = this.centerX + radius * vector.x;\n                y1 = this.centerY + radius * vector.y;\n                x2 = x1 + (axis.majorTickLines.height * (Math.cos(angle * Math.PI / 180)) * (axis.tickPosition === 'Inside' ? 1 : -1));\n                y2 = y1 + (axis.majorTickLines.height * (Math.sin(angle * Math.PI / 180)) * (axis.tickPosition === 'Inside' ? 1 : -1));\n                majorTick = majorTick.concat('M ' + x1 + ' ' + y1 +\n                    ' L ' + x2 + ' ' + y2 + ' ');\n            }\n        }\n        this.renderTickLine(axis, index, majorTick, '');\n    }\n    drawXAxisGridLine(axis, index) {\n        let chart = this.chart;\n        let tempInterval;\n        let vector;\n        let majorGrid = '';\n        let majorTick = '';\n        let minorGirdLine = '';\n        let minorTickLine = '';\n        let x1 = this.centerX;\n        let x2;\n        let y1 = this.centerY;\n        let y2;\n        let minorDirection;\n        let tickSize = axis.majorTickLines.height;\n        let rect = axis.rect;\n        let length = axis.visibleLabels.length;\n        //Gridlines\n        for (let i = 0; i < length; i++) {\n            tempInterval = axis.visibleLabels[i].value;\n            vector = CoefficientToVector(valueToPolarCoefficient(axis.visibleLabels[i].value, axis), this.startAngle);\n            x2 = this.centerX + chart.radius * vector.x;\n            y2 = this.centerY + chart.radius * vector.y;\n            let xLoc = x2 + (axis.majorTickLines.height * vector.x * (axis.tickPosition === 'Inside' ? -1 : 1));\n            let yLoc = y2 + (axis.majorTickLines.height * vector.y * (axis.tickPosition === 'Inside' ? -1 : 1));\n            majorGrid = majorGrid.concat('M ' + x1 + ' ' + y1 + ' ' + 'L' + x2 + ' ' + y2);\n            majorTick = majorTick.concat('M ' + x2 + ' ' + y2 +\n                ' L ' + xLoc + ' ' + yLoc + ' ');\n            if (axis.minorTicksPerInterval > 0 && (axis.minorGridLines.width > 0 || axis.minorTickLines.width > 0)\n                && axis.valueType !== 'Category' && chart.visibleSeries[0].type !== 'Radar') {\n                minorDirection = this.drawAxisMinorLine(axis, tempInterval, minorGirdLine, minorTickLine);\n                minorGirdLine = minorDirection[0];\n                minorTickLine = minorDirection[1];\n            }\n        }\n        this.renderTickLine(axis, index, majorTick, minorTickLine);\n        this.renderGridLine(axis, index, majorGrid, minorGirdLine);\n    }\n    drawAxisMinorLine(axis, tempInterval, minorGird, minorTick) {\n        let value = tempInterval;\n        let x;\n        let y;\n        let vector;\n        let range = axis.visibleRange;\n        let direction = [];\n        let tickSize = axis.minorTickLines.height;\n        let rect = axis.rect;\n        for (let j = 0; j < axis.minorTicksPerInterval; j++) {\n            value += (axis.valueType === 'DateTime' ? axis.dateTimeInterval : axis.visibleRange.interval) /\n                (axis.minorTicksPerInterval + 1);\n            if (inside(value, range)) {\n                vector = CoefficientToVector(valueToPolarCoefficient(value, axis), this.startAngle);\n                x = this.centerX + this.chart.radius * vector.x;\n                y = this.centerY + this.chart.radius * vector.y;\n                let tickXSize = x + (axis.minorTickLines.height * vector.x * (axis.tickPosition === 'Inside' ? -1 : 1));\n                let tickYSize = y + (axis.minorTickLines.height * vector.y * (axis.tickPosition === 'Inside' ? -1 : 1));\n                minorGird = minorGird.concat('M' + ' ' + this.centerX + ' ' + this.centerY\n                    + 'L ' + x + ' ' + y);\n                minorTick = minorTick.concat('M' + ' ' + x + ' ' + y + 'L' + ' ' + (tickXSize) + ' ' +\n                    (tickYSize));\n            }\n        }\n        direction.push(minorGird);\n        direction.push(minorTick);\n        return direction;\n    }\n    /**\n     * To render the axis label.\n     * @return {void}\n     * @private\n     */\n    drawXAxisLabels(axis, index) {\n        let chart = this.chart;\n        let pointX = 0;\n        let pointY = 0;\n        let labelElement = chart.renderer.createGroup({ id: chart.element.id + 'AxisLabels' + index });\n        let options;\n        let vector;\n        let labelText;\n        let firstLabelX;\n        let islabelInside = axis.labelPosition === 'Inside';\n        let padding = 5;\n        let lastLabelX;\n        let textAnchor = '';\n        let ticksbwtLabel = axis.valueType === 'Category' && axis.labelPlacement === 'BetweenTicks'\n            && chart.visibleSeries[0].type !== 'Radar' ? 0.5 : 0;\n        let radius = chart.radius + axis.majorTickLines.height;\n        radius = (islabelInside) ? -radius : radius;\n        for (let i = 0, len = axis.visibleLabels.length; i < len; i++) {\n            vector = CoefficientToVector(valueToPolarCoefficient(axis.visibleLabels[i].value + ticksbwtLabel, axis), this.startAngle);\n            if (!isNaN(vector.x) && !isNaN(vector.y)) {\n                pointX = this.centerX + (radius + axis.majorTickLines.height + padding) * vector.x;\n                pointY = this.centerY + (radius + axis.majorTickLines.height + padding) * vector.y;\n                textAnchor = parseFloat(pointX.toFixed(1)) === parseFloat(this.centerX.toFixed(1)) ? 'middle' :\n                    ((pointX < this.centerX && !islabelInside) || (pointX > this.centerX && islabelInside)) ? 'end' : 'start';\n            }\n            labelText = axis.visibleLabels[i].text;\n            if (i === 0) {\n                firstLabelX = pointX;\n            }\n            else if (i === axis.visibleLabels.length - 1 && axis.valueType !== 'Category') {\n                lastLabelX = measureText(labelText, axis.labelStyle).height;\n                lastLabelX += pointX;\n                labelText = (lastLabelX > firstLabelX) ? '' : labelText;\n            }\n            options = new TextOption(chart.element.id + index + '_AxisLabel_' + i, pointX, pointY, textAnchor, labelText, '', 'central');\n            textElement(options, axis.labelStyle, axis.labelStyle.color || chart.themeStyle.axisLabel, labelElement);\n        }\n        this.element.appendChild(labelElement);\n    }\n    renderTickLine(axis, index, majorTickLine, minorTickLine) {\n        let tickOptions;\n        let chart = this.chart;\n        if (axis.majorTickLines.width > 0) {\n            tickOptions = new PathOption(chart.element.id + '_MajorTickLine_' + index, 'transparent', axis.majorTickLines.width, axis.majorTickLines.color || chart.themeStyle.majorTickLine, null, null, majorTickLine);\n            chart.yAxisElements.appendChild(chart.renderer.drawPath(tickOptions));\n        }\n        if (axis.minorTickLines.width > 0) {\n            tickOptions = new PathOption(chart.element.id + '_MinorTickLine_' + index, 'transparent', axis.minorTickLines.width, axis.minorTickLines.color || chart.themeStyle.minorTickLine, null, null, minorTickLine);\n            chart.yAxisElements.appendChild(chart.renderer.drawPath(tickOptions));\n        }\n    }\n    renderGridLine(axis, index, majorGrid, minorGird) {\n        let chart = this.chart;\n        let gridOptions;\n        if (axis.majorGridLines.width > 0) {\n            gridOptions = new PathOption(chart.element.id + '_MajorGridLine_' + index, 'transparent', axis.majorGridLines.width, axis.majorGridLines.color || chart.themeStyle.majorGridLine, null, axis.majorGridLines.dashArray, majorGrid);\n            this.element.appendChild(chart.renderer.drawPath(gridOptions));\n        }\n        if (axis.minorGridLines.width > 0) {\n            gridOptions = new PathOption(chart.element.id + '_MinorGridLine_' + index, 'transparent', axis.minorGridLines.width, axis.minorGridLines.color || chart.themeStyle.minorGridLine, null, axis.minorGridLines.dashArray, minorGird);\n            this.element.appendChild(chart.renderer.drawPath(gridOptions));\n        }\n    }\n}\n\n/**\n * `PolarSeries` module is used to render the polar series.\n */\nclass PolarSeries extends PolarRadarPanel {\n    /**\n     * Render Polar Series.\n     * @return {void}.\n     * @private\n     */\n    render(series) {\n        let seriesType = firstToLowerCase(series.drawType);\n        if (series.drawType.indexOf('Column') > -1) {\n            this.columnDrawTypeRender(series);\n        }\n        else {\n            series.chart[seriesType + 'SeriesModule'].render(series, series.xAxis, series.yAxis, series.chart.requireInvertedAxis);\n        }\n    }\n    /**\n     * Render Column DrawType.\n     * @return {void}.\n     * @private\n     */\n    columnDrawTypeRender(series) {\n        let visiblePoints = series.points;\n        let options;\n        let argsData;\n        let startAngle;\n        let endAngle;\n        let itemCurrentXPos;\n        let radius;\n        let pointStartAngle;\n        let pointEndAngle;\n        let x1;\n        let x2;\n        let y1;\n        let y2;\n        let startValue;\n        let endValue;\n        let innerRadius;\n        let centerX = (series.clipRect.width / 2) + series.clipRect.x;\n        let dStartX;\n        let dStartY;\n        let centerY = (series.clipRect.height / 2) + series.clipRect.y;\n        let dEndX;\n        let dEndY;\n        let axisInversed = series.xAxis.isInversed ? 1 : 0;\n        let direction = '';\n        let sumofYValues = 0;\n        let interval = (series.points[1] ? series.points[1].xValue : 2 * series.points[0].xValue) - series.points[0].xValue;\n        let ticks = series.xAxis.valueType === 'Category' && series.xAxis.labelPlacement === 'BetweenTicks' ? 0 : interval / 2;\n        let rangeInterval = series.xAxis.valueType === 'DateTime' ? series.xAxis.dateTimeInterval : 1;\n        let min = series.xAxis.actualRange.min;\n        let inversedValue;\n        this.getSeriesPosition(series);\n        let position = series.xAxis.isInversed ? (series.rectCount - 1 - series.position) : series.position;\n        let ticksbwtLabel = series.xAxis.valueType === 'Category' && series.xAxis.labelPlacement === 'BetweenTicks' ? 0.5\n            : 0.5 - (series.rectCount / 2);\n        do {\n            sumofYValues += rangeInterval;\n            min += rangeInterval;\n        } while (min <= series.xAxis.actualRange.max - (series.xAxis.valueType === 'Category' ? 0 : 1));\n        for (let point of series.points) {\n            point.symbolLocations = [];\n            point.regions = [];\n            if (point.visible && withInRange(series.points[point.index - 1], point, series.points[point.index + 1], series)) {\n                inversedValue = series.xAxis.isInversed ? (series.xAxis.visibleRange.max - point.xValue) :\n                    point.xValue - series.xAxis.visibleRange.min;\n                itemCurrentXPos = (inversedValue) +\n                    ((interval / series.rectCount) * position - ticks) + (sumofYValues / 360 * series.xAxis.startAngle);\n                itemCurrentXPos = (((itemCurrentXPos) / (sumofYValues)));\n                startAngle = 2 * Math.PI * (itemCurrentXPos + series.xAxis.startAngle);\n                endAngle = 2 * Math.PI * ((itemCurrentXPos + series.xAxis.startAngle) + (interval / series.rectCount) / (sumofYValues));\n                pointStartAngle = startAngle;\n                pointEndAngle = endAngle;\n                startAngle = (startAngle - 0.5 * Math.PI);\n                endAngle = (endAngle - 0.5 * Math.PI) - 0.000001;\n                if (series.drawType === 'StackingColumn' || series.drawType === 'RangeColumn') {\n                    startValue = series.drawType === 'RangeColumn' ? point.low : series.stackedValues.startValues[point.index];\n                    endValue = series.drawType === 'RangeColumn' ? point.high : series.stackedValues.endValues[point.index];\n                    endValue = (series.yAxis.valueType === 'Logarithmic' ?\n                        logBase(endValue === 0 ? 1 : endValue, series.yAxis.logBase) : endValue);\n                    endValue = endValue > series.yAxis.actualRange.max ? series.yAxis.actualRange.max : endValue;\n                    radius = startValue === endValue ? 0 : series.chart.radius * valueToCoefficient(endValue, series.yAxis);\n                    x1 = centerX + radius * Math.cos(startAngle);\n                    x2 = centerX + radius * Math.cos(endAngle);\n                    y1 = centerY + radius * Math.sin(startAngle);\n                    y2 = centerY + radius * Math.sin(endAngle);\n                    innerRadius = series.chart.radius * valueToCoefficient((startValue === 0 && series.yAxis.visibleRange.min !== 0) ? series.yAxis.visibleRange.min : startValue, series.yAxis);\n                    dStartX = centerX + innerRadius * Math.cos(startAngle);\n                    dStartY = centerY + innerRadius * Math.sin(startAngle);\n                    dEndX = centerX + innerRadius * Math.cos(endAngle);\n                    dEndY = centerY + innerRadius * Math.sin(endAngle);\n                    if (series.type === 'Polar') {\n                        direction = ('M' + ' ' + x1 + ' ' + y1 + ' ' + 'A' + ' ' + radius + ' ' + radius + ' ' + '0' + ' '\n                            + '0' + ' ' + 1 + ' ' + x2 + ' ' + y2 + ' ' + 'L' + ' ' + dEndX + ' ' + dEndY + ' ' +\n                            'A' + ' ' + innerRadius + ' ' + innerRadius + ' ' + '1' + ' ' + '0' + ' ' + '0' + ' '\n                            + dStartX + ' ' + dStartY + ' ' + 'z');\n                    }\n                    else {\n                        direction = ('M' + ' ' + x1 + ' ' + y1 + ' ' + 'L' + ' ' + x2 + ' ' + y2 + ' ' + 'L'\n                            + dEndX + ' ' + dEndY + ' ' + 'L' + ' ' + dStartX + ' ' + dStartY + ' ' + 'z');\n                    }\n                    point.regionData = new PolarArc(pointStartAngle, pointEndAngle, innerRadius, radius, itemCurrentXPos);\n                }\n                else {\n                    endValue = point.yValue > series.yAxis.actualRange.max ? series.yAxis.actualRange.max : point.yValue;\n                    radius = series.chart.radius * valueToCoefficient((series.yAxis.valueType === 'Logarithmic' ? logBase(endValue, series.yAxis.logBase) : endValue), series.yAxis);\n                    x1 = centerX + radius * Math.cos(startAngle);\n                    x2 = centerX + radius * Math.cos(endAngle);\n                    y1 = centerY + radius * Math.sin(startAngle);\n                    y2 = centerY + radius * Math.sin(endAngle);\n                    if (series.type === 'Polar') {\n                        direction = ('M' + ' ' + x1 + ' ' + y1 + ' ' + 'A' + ' ' + radius + ' ' + radius + ' ' + '0' + ' ' +\n                            '0' + ' ' + 1 + ' ' + x2 + ' ' + y2 + ' ' + 'L' + ' ' + centerX + ' ' +\n                            centerY + ' ' + 'z');\n                    }\n                    else {\n                        direction = ('M' + ' ' + x1 + ' ' + y1 + ' ' + 'L' + ' ' + x2 + ' ' + y2 + ' ' + 'L' + ' '\n                            + centerX + ' ' + centerY + ' ' + 'z');\n                    }\n                    point.regionData = new PolarArc(pointStartAngle, pointEndAngle, 0, radius, itemCurrentXPos);\n                }\n                argsData = this.triggerEvent(series.chart, series, point);\n                options = new PathOption(series.chart.element.id + '_Series_' + series.index + '_Point_' + point.index, argsData.fill, argsData.border.width, argsData.border.color, series.opacity, series.dashArray, direction);\n                if (!argsData.cancel) {\n                    this.appendLinePath(options, series, '');\n                    if (series.type === 'Polar') {\n                        point.symbolLocations.push({\n                            x: centerX + radius * Math.cos((startAngle + (endAngle - startAngle) / 2)),\n                            y: centerY + radius * Math.sin((startAngle + (endAngle - startAngle) / 2))\n                        });\n                    }\n                    else {\n                        point.symbolLocations.push({ x: (x1 + x2) / 2, y: (y1 + y2) / 2 });\n                    }\n                }\n            }\n        }\n        series.isRectSeries = true;\n    }\n    /**\n     * To trigger the point rendering event.\n     * @return {void}\n     * @private\n     */\n    triggerEvent(chart, series, point) {\n        let argsData = {\n            cancel: false, name: pointRender, series: series, point: point,\n            fill: series.setPointColor(point, series.interior),\n            border: series.setBorderColor(point, { width: series.border.width, color: series.border.color })\n        };\n        chart.trigger(pointRender, argsData);\n        point.color = argsData.fill;\n        return argsData;\n    }\n    /** get position for column drawtypes\n     * @return {void}.\n     * @private\n     */\n    getSeriesPosition(series) {\n        let chart = series.chart;\n        let seriesCollection = [];\n        let stackingGroup = [];\n        let vSeries = { rectCount: 0, position: null };\n        for (let series of chart.visibleSeries) {\n            if (series.visible && (series.type === 'Polar' || series.type === 'Radar') && series.drawType.indexOf('Column') !== -1) {\n                seriesCollection.push(series);\n            }\n        }\n        seriesCollection.forEach((series) => {\n            if (series.drawType.indexOf('Stacking') !== -1) {\n                if (series.stackingGroup) {\n                    if (stackingGroup[series.stackingGroup] === undefined) {\n                        series.position = vSeries.rectCount;\n                        stackingGroup[series.stackingGroup] = vSeries.rectCount++;\n                    }\n                    else {\n                        series.position = stackingGroup[series.stackingGroup];\n                    }\n                }\n                else {\n                    if (vSeries.position === null) {\n                        series.position = vSeries.rectCount;\n                        vSeries.position = vSeries.rectCount++;\n                    }\n                    else {\n                        series.position = vSeries.position;\n                    }\n                }\n            }\n            else {\n                series.position = vSeries.rectCount++;\n            }\n        });\n        seriesCollection.forEach((value) => {\n            value.rectCount = vSeries.rectCount;\n        });\n    }\n    /**\n     * Animates the series.\n     * @param  {Series} series - Defines the series to animate.\n     * @return {void}\n     */\n    doAnimation(series) {\n        let option = series.animation;\n        let duration = series.animation.duration;\n        let delay = series.animation.delay;\n        let rectElements = series.seriesElement.childNodes;\n        let count = 1;\n        if (series.drawType === 'Scatter') {\n            for (let point of series.points) {\n                if (!point.symbolLocations.length || !rectElements[count]) {\n                    continue;\n                }\n                markerAnimate(rectElements[count], delay, duration, series, point.index, point.symbolLocations[0], false);\n                count++;\n            }\n        }\n        else {\n            for (count = 1; count < rectElements.length; count++) {\n                this.doPolarRadarAnimation(rectElements[count], delay, duration, series);\n            }\n        }\n    }\n    /**\n     * To do the Polar Radar draw type column animation.\n     * @return {void}\n     * @private\n     */\n    doPolarRadarAnimation(animateElement, delay, duration, series) {\n        let chartcenterX = series.clipRect.width / 2 + series.clipRect.x;\n        let chartcenterY = series.clipRect.height / 2 + series.clipRect.y;\n        let elementHeight = 0;\n        animateElement.style.visibility = 'hidden';\n        new Animation({}).animate(animateElement, {\n            duration: duration,\n            delay: delay,\n            progress: (args) => {\n                if (args.timeStamp > args.delay) {\n                    args.element.style.visibility = 'visible';\n                    elementHeight = ((args.timeStamp - args.delay) / args.duration);\n                    animateElement.setAttribute('transform', 'translate(' + chartcenterX\n                        + ' ' + chartcenterY + ') scale(' + elementHeight + ') translate(' + (-chartcenterX) + ' ' + (-chartcenterY) + ')');\n                }\n            },\n            end: (model) => {\n                animateElement.style.visibility = 'visible';\n                animateElement.removeAttribute('transform');\n                series.chart.trigger('animationComplete', { series: series });\n            }\n        });\n    }\n    /**\n     * Get module name.\n     */\n    getModuleName() {\n        /**\n         * Returns the module name of the series\n         */\n        return 'PolarSeries';\n    }\n    /**\n     * To destroy the polar series.\n     * @return {void}\n     * @private\n     */\n    destroy(chart) {\n        /**\n         * Destroy method performed here\n         */\n    }\n}\n\n/**\n * `RadarSeries` module is used to render the radar series.\n */\nclass RadarSeries extends PolarSeries {\n    /**\n     * Render radar Series.\n     * @return {void}.\n     * @private\n     */\n    render(series) {\n        let seriesType = firstToLowerCase(series.drawType);\n        if (series.drawType.indexOf('Column') === -1) {\n            series.chart[seriesType + 'SeriesModule'].render(series, series.xAxis, series.yAxis, series.chart.requireInvertedAxis);\n        }\n        else {\n            this.columnDrawTypeRender(series);\n        }\n    }\n    /**\n     * Get module name.\n     */\n    getModuleName() {\n        /**\n         * Returns the module name of the series\n         */\n        return 'RadarSeries';\n    }\n    /**\n     * To destroy the radar series.\n     * @return {void}\n     * @private\n     */\n    destroy(chart) {\n        /**\n         * Destroy method performed here\n         */\n    }\n}\n\n/**\n * `StackingBarSeries` module is used to render the stacking bar series.\n */\nclass StackingBarSeries extends ColumnBase {\n    /**\n     * Render the Stacking bar series.\n     * @return {void}\n     * @private\n     */\n    render(series) {\n        let origin = Math.max(series.yAxis.visibleRange.min, 0);\n        let sideBySideInfo = this.getSideBySideInfo(series);\n        let stackedValue = series.stackedValues;\n        let rect;\n        let argsData;\n        for (let pointStack of series.points) {\n            pointStack.symbolLocations = [];\n            pointStack.regions = [];\n            if (pointStack.visible && withInRange(series.points[pointStack.index - 1], pointStack, series.points[pointStack.index + 1], series)) {\n                rect = this.getRectangle(pointStack.xValue + sideBySideInfo.start, stackedValue.endValues[pointStack.index], pointStack.xValue + sideBySideInfo.end, stackedValue.startValues[pointStack.index], series);\n                argsData = this.triggerEvent(series, pointStack, series.interior, { width: series.border.width, color: series.border.color });\n                if (!argsData.cancel) {\n                    this.drawRectangle(series, pointStack, rect, argsData);\n                    this.updateSymbolLocation(pointStack, rect, series);\n                }\n            }\n        }\n    }\n    /**\n     * To destroy the stacking bar.\n     * @return {void}\n     * @private\n     */\n    destroy(chart) {\n        /**\n         * Destroy method performed here\n         */\n    }\n    /**\n     * Get module name.\n     */\n    getModuleName() {\n        return 'StackingBarSeries';\n    }\n    /**\n     * Animates the series.\n     * @param  {Series} series - Defines the series to animate.\n     * @return {void}\n     */\n    doAnimation(series) {\n        this.animate(series);\n    }\n}\n\n/**\n * `CandleSeries` module is used to render the candle series.\n */\nclass CandleSeries extends ColumnBase {\n    /**\n     * Render Candle series.\n     * @return {void}\n     * @private\n     */\n    render(series) {\n        let sideBySideInfo = this.getSideBySideInfo(series);\n        let argsData;\n        let borderWidth = Math.max(series.border.width, 1);\n        for (let point of series.points) {\n            let direction = '';\n            let centerRegion;\n            let tickRegion;\n            let midPoint;\n            midPoint = (sideBySideInfo.start + sideBySideInfo.end) / 2;\n            //initializing after zooming and also normal initialization\n            point.regions = [];\n            point.symbolLocations = [];\n            if (point.visible && withInRange(series.points[point.index - 1], point, series.points[point.index + 1], series)) {\n                //region to cover the top and bottom ticks\n                tickRegion = this.getRectangle((point.xValue + sideBySideInfo.median), Math.max(point.high, point.low), (point.xValue + sideBySideInfo.median), Math.min(point.high, point.low), series);\n                if (!series.chart.requireInvertedAxis) {\n                    tickRegion.x -= borderWidth / 2;\n                    tickRegion.width = borderWidth;\n                }\n                else {\n                    tickRegion.y -= borderWidth / 2;\n                    tickRegion.height = borderWidth;\n                }\n                //get middleRect\n                centerRegion = this.getRectangle((point.xValue + sideBySideInfo.start), Math.max(point.open, point.close), (point.xValue + sideBySideInfo.end), Math.min(point.open, point.close), series);\n                direction = this.getPathString(tickRegion, centerRegion, series);\n                argsData = this.triggerPointRenderEvent(series, point);\n                if (!argsData.cancel) {\n                    this.drawCandle(series, point, centerRegion, argsData, direction);\n                    this.updateSymbolLocation(point, tickRegion, series);\n                    this.updateSymbolLocation(point, centerRegion, series);\n                }\n            }\n        }\n    }\n    /**\n     * Trigger point rendering event\n     */\n    triggerPointRenderEvent(series, point) {\n        let fill;\n        fill = this.getCandleColor(point, series);\n        let border = { color: series.border.color, width: Math.max(series.border.width, 1) };\n        return this.triggerEvent(series, point, fill, border);\n    }\n    /**\n     * Find the color of the candle\n     * @param series\n     * @private\n     */\n    getCandleColor(point, series) {\n        let previousPoint = series.points[point.index - 1];\n        if (series.enableSolidCandles === false) {\n            if (!previousPoint) {\n                return series.bearFillColor;\n            }\n            else {\n                return previousPoint.close > point.close ? series.bullFillColor :\n                    series.bearFillColor;\n            }\n        }\n        else {\n            return point.open > point.close ? series.bullFillColor :\n                series.bearFillColor;\n        }\n    }\n    /**\n     * Finds the path of the candle shape\n     * @param Series\n     * @private\n     */\n    getPathString(topRect, midRect, series) {\n        let direction = '';\n        let width = series.chart.requireInvertedAxis ? topRect.height : topRect.width;\n        let center = series.chart.requireInvertedAxis ? topRect.y + topRect.height / 2 :\n            topRect.x + topRect.width / 2;\n        //tick 1 segment\n        direction += !series.chart.requireInvertedAxis ?\n            'M' + ' ' + (center) + ' ' + (topRect.y) + ' ' + 'L' + ' ' + (center) + ' ' + midRect.y :\n            'M' + ' ' + (topRect.x) + ' ' + (center) + ' ' + 'L' + ' ' + (midRect.x) + ' ' + center;\n        direction = direction.concat(' M' + ' ' + (midRect.x) + ' ' + (midRect.y) + ' ' +\n            'L' + ' ' + (midRect.x + midRect.width) + ' ' + (midRect.y) + ' ' +\n            'L' + ' ' + (midRect.x + midRect.width) + ' ' +\n            (midRect.y + midRect.height) + ' ' +\n            'L' + ' ' + (midRect.x) + ' ' + (midRect.y + midRect.height) +\n            ' ' + 'Z');\n        direction += !series.chart.requireInvertedAxis ?\n            ' M' + ' ' + (center) + ' ' + (midRect.y + midRect.height) + ' ' + 'L' + ' ' + (center) + ' ' + (topRect.y +\n                topRect.height) :\n            ' M' + ' ' + (midRect.x + midRect.width) + ' ' + (center) + ' ' + 'L' + ' ' +\n                (topRect.x + topRect.width) + ' ' + center;\n        return direction;\n    }\n    /**\n     * Draws the candle shape\n     * @param series\n     * @private\n     */\n    drawCandle(series, point, rect, argsData, direction) {\n        let check = series.chart.requireInvertedAxis ? rect.height : rect.width;\n        if (check <= 0) {\n            return null;\n        }\n        let fill = !series.enableSolidCandles ?\n            (point.open > point.close ? argsData.fill : 'transparent') : argsData.fill;\n        argsData.border.color = argsData.fill;\n        let options = new PathOption(series.chart.element.id + '_Series_' + series.index + '_Point_' + point.index, fill, argsData.border.width, argsData.border.color, series.opacity, series.dashArray, direction);\n        let candleElement = series.chart.renderer.drawPath(options);\n        candleElement.setAttribute('aria-label', point.x.toString() + ':' + point.high.toString()\n            + ':' + point.low.toString() + ':' + point.close.toString() + ':' + point.open.toString());\n        series.seriesElement.appendChild(candleElement);\n    }\n    /**\n     * Animates the series.\n     * @param  {Series} series - Defines the series to animate.\n     * @return {void}\n     */\n    doAnimation(series) {\n        this.animate(series);\n    }\n    /**\n     * Get module name.\n     */\n    getModuleName() {\n        return 'CandleSeries';\n        /**\n         * return the module name\n         */\n    }\n    /**\n     * To destroy the candle series.\n     * @return {void}\n     * @private\n     */\n    destroy(chart) {\n        /**\n         * Destroys the candle series.\n         */\n    }\n}\n\n/**\n * `StackingColumnSeries` module used to render the stacking column series.\n */\nclass StackingColumnSeries extends ColumnBase {\n    /**\n     * Render the Stacking column series.\n     * @return {void}\n     * @private\n     */\n    render(series) {\n        series.isRectSeries = true;\n        let origin = Math.max(series.yAxis.visibleRange.min, 0);\n        let sideBySideInfo = this.getSideBySideInfo(series);\n        let rect;\n        let argsData;\n        let stackedValue = series.stackedValues;\n        for (let point of series.points) {\n            point.symbolLocations = [];\n            point.regions = [];\n            if (point.visible && withInRange(series.points[point.index - 1], point, series.points[point.index + 1], series)) {\n                rect = this.getRectangle(point.xValue + sideBySideInfo.start, stackedValue.endValues[point.index], point.xValue + sideBySideInfo.end, stackedValue.startValues[point.index], series);\n                argsData = this.triggerEvent(series, point, series.interior, { width: series.border.width, color: series.border.color });\n                if (!argsData.cancel) {\n                    this.drawRectangle(series, point, rect, argsData);\n                    this.updateSymbolLocation(point, rect, series);\n                }\n            }\n        }\n    }\n    /**\n     * Animates the series.\n     * @param  {Series} series - Defines the series to animate.\n     * @return {void}\n     */\n    doAnimation(series) {\n        this.animate(series);\n    }\n    /**\n     * To destroy the stacking column.\n     * @return {void}\n     * @private\n     */\n    destroy(chart) {\n        /**\n         * Destroy method performed here\n         */\n    }\n    /**\n     * Get module name.\n     */\n    getModuleName() {\n        return 'StackingColumnSeries';\n    }\n}\n\n/**\n * `StepLineSeries` module is used to render the step line series.\n */\nclass StepLineSeries extends LineBase {\n    /**\n     * Render the Step line series.\n     * @return {void}\n     * @private\n     */\n    render(series, xAxis, yAxis, isInverted) {\n        let direction = '';\n        let startPoint = 'M';\n        let prevPoint = null;\n        let pathOptions;\n        let lineLength;\n        let point1;\n        let point2;\n        let visiblePoints = this.improveChartPerformance(series);\n        if (xAxis.valueType === 'Category' && xAxis.labelPlacement === 'BetweenTicks') {\n            lineLength = 0.5;\n        }\n        else {\n            lineLength = 0;\n        }\n        for (let point of visiblePoints) {\n            point.symbolLocations = [];\n            point.regions = [];\n            if (point.visible && withInRange(visiblePoints[point.index - 1], point, visiblePoints[point.index + 1], series)) {\n                if (prevPoint != null) {\n                    point2 = getPoint(point.xValue, point.yValue, xAxis, yAxis, isInverted);\n                    point1 = getPoint(prevPoint.xValue, prevPoint.yValue, xAxis, yAxis, isInverted);\n                    direction = direction.concat(startPoint + ' ' + (point1.x) + ' ' + (point1.y) + ' ' + 'L' + ' ' +\n                        (point2.x) + ' ' + (point1.y) + 'L' + ' ' + (point2.x) + ' ' + (point2.y) + ' ');\n                    startPoint = 'L';\n                }\n                else {\n                    point1 = getPoint(point.xValue - lineLength, point.yValue, xAxis, yAxis, isInverted);\n                    direction = direction.concat(startPoint + ' ' + (point1.x) + ' ' + (point1.y) + ' ');\n                    startPoint = 'L';\n                }\n                this.storePointLocation(point, series, isInverted, getPoint);\n                prevPoint = point;\n            }\n            else {\n                prevPoint = series.emptyPointSettings.mode === 'Drop' ? prevPoint : null;\n                startPoint = series.emptyPointSettings.mode === 'Drop' ? startPoint : 'M';\n            }\n        }\n        point1 = getPoint(visiblePoints[visiblePoints.length - 1].xValue + lineLength, visiblePoints[visiblePoints.length - 1].yValue, xAxis, yAxis, isInverted);\n        direction = direction.concat(startPoint + ' ' + (point1.x) + ' ' + (point1.y) + ' ');\n        pathOptions = new PathOption(series.chart.element.id + '_Series_' + series.index, 'transparent', series.width, series.interior, series.opacity, series.dashArray, direction);\n        this.appendLinePath(pathOptions, series, '');\n        this.renderMarker(series);\n    }\n    /**\n     * Animates the series.\n     * @param  {Series} series - Defines the series to animate.\n     * @return {void}\n     */\n    doAnimation(series) {\n        let option = series.animation;\n        this.doLinearAnimation(series, option);\n    }\n    /**\n     * To destroy the step line series.\n     * @return {void}\n     * @private\n     */\n    destroy(chart) {\n        /**\n         * Destroy method calling here\n         */\n    }\n    /**\n     * Get module name.\n     */\n    getModuleName() {\n        /**\n         * Returns the module name of the series\n         */\n        return 'StepLineSeries';\n    }\n}\n\n/**\n * `StepAreaSeries` Module used to render the step area series.\n */\nclass StepAreaSeries extends LineBase {\n    /**\n     * Render StepArea series.\n     * @return {void}\n     * @private\n     */\n    render(series, xAxis, yAxis, isInverted) {\n        let currentPoint;\n        let secondPoint;\n        let start = null;\n        let direction = '';\n        let pointsLength = series.points.length;\n        let origin = Math.max(series.yAxis.visibleRange.min, 0);\n        let options;\n        let point;\n        let xValue;\n        let lineLength;\n        let prevPoint = null;\n        if (xAxis.valueType === 'Category' && xAxis.labelPlacement === 'BetweenTicks') {\n            lineLength = 0.5;\n        }\n        else {\n            lineLength = 0;\n        }\n        for (let i = 0; i < pointsLength; i++) {\n            point = series.points[i];\n            xValue = point.xValue;\n            point.symbolLocations = [];\n            point.regions = [];\n            if (point.visible && withInRange(series.points[i - 1], point, series.points[i + 1], series)) {\n                if (start === null) {\n                    start = new ChartLocation(xValue, 0);\n                    // Start point for the current path\n                    currentPoint = getPoint(xValue - lineLength, origin, xAxis, yAxis, isInverted);\n                    direction += ('M' + ' ' + (currentPoint.x) + ' ' + (currentPoint.y) + ' ');\n                    currentPoint = getPoint(xValue - lineLength, point.yValue, xAxis, yAxis, isInverted);\n                    direction += ('L' + ' ' + (currentPoint.x) + ' ' + (currentPoint.y) + ' ');\n                }\n                // First Point to draw the Steparea path\n                if (prevPoint != null) {\n                    currentPoint = getPoint(point.xValue, point.yValue, xAxis, yAxis, isInverted);\n                    secondPoint = getPoint(prevPoint.xValue, prevPoint.yValue, xAxis, yAxis, isInverted);\n                    direction += ('L' + ' ' +\n                        (currentPoint.x) + ' ' + (secondPoint.y) + 'L' + ' ' + (currentPoint.x) + ' ' + (currentPoint.y) + ' ');\n                }\n                else if (series.emptyPointSettings.mode === 'Gap') {\n                    currentPoint = getPoint(point.xValue, point.yValue, xAxis, yAxis, isInverted);\n                    direction += 'L' + ' ' + (currentPoint.x) + ' ' + (currentPoint.y) + ' ';\n                }\n                this.storePointLocation(point, series, isInverted, getPoint);\n                prevPoint = point;\n            }\n            if (series.points[i + 1] && !series.points[i + 1].visible && series.emptyPointSettings.mode !== 'Drop') {\n                // current start point\n                currentPoint = getPoint(xValue + lineLength, origin, xAxis, yAxis, isInverted);\n                direction += ('L' + ' ' + (currentPoint.x) + ' ' + (currentPoint.y));\n                start = null;\n                prevPoint = null;\n            }\n        }\n        if (pointsLength > 1) {\n            start = { 'x': series.points[pointsLength - 1].xValue + lineLength, 'y': series.points[pointsLength - 1].yValue };\n            secondPoint = getPoint(start.x, start.y, xAxis, yAxis, isInverted);\n            direction += ('L' + ' ' + (secondPoint.x) + ' ' + (secondPoint.y) + ' ');\n            start = { 'x': series.points[pointsLength - 1].xValue + lineLength, 'y': origin };\n            secondPoint = getPoint(start.x, start.y, xAxis, yAxis, isInverted);\n            direction += ('L' + ' ' + (secondPoint.x) + ' ' + (secondPoint.y) + ' ');\n        }\n        options = new PathOption(series.chart.element.id + '_Series_' + series.index, series.interior, series.border.width, series.border.color, series.opacity, series.dashArray, direction);\n        this.appendLinePath(options, series, '');\n        this.renderMarker(series);\n    }\n    /**\n     * Animates the series.\n     * @param  {Series} series - Defines the series to animate.\n     * @return {void}\n     */\n    doAnimation(series) {\n        let option = series.animation;\n        this.doLinearAnimation(series, option);\n    }\n    /**\n     * To destroy the step Area series.\n     * @return {void}\n     * @private\n     */\n    destroy(chart) {\n        /**\n         * Destroy method calling here\n         */\n    }\n    /**\n     * Get module name.\n     */\n    getModuleName() {\n        /**\n         * Returns the module name of the series\n         */\n        return 'StepAreaSeries';\n    }\n}\n\n/**\n * `StackingAreaSeries` module used to render the Stacking Area series.\n */\nclass StackingAreaSeries extends LineBase {\n    /**\n     * Render the Stacking area series.\n     * @return {void}\n     * @private\n     */\n    render(series, xAxis, yAxis, isInverted) {\n        let polarAreaType = series.chart.chartAreaType === 'PolarRadar';\n        let getCoordinate = polarAreaType ? TransformToVisible : getPoint;\n        let lineDirection = '';\n        let visiblePoints = series.points;\n        let pointsLength = visiblePoints.length;\n        let stackedvalue = series.stackedValues;\n        let origin = polarAreaType ?\n            Math.max(series.yAxis.visibleRange.min, stackedvalue.endValues[0]) :\n            Math.max(series.yAxis.visibleRange.min, stackedvalue.startValues[0]);\n        let border = series.border;\n        let options;\n        let startPoint = 0;\n        let point1 = getCoordinate(visiblePoints[0].xValue, origin, xAxis, yAxis, isInverted, series);\n        let point2;\n        lineDirection = lineDirection.concat('M' + ' ' + (point1.x) + ' ' + (point1.y) + ' ');\n        for (let i = 0; i < pointsLength; i++) {\n            visiblePoints[i].symbolLocations = [];\n            visiblePoints[i].regions = [];\n            if (visiblePoints[i].visible && withInRange(visiblePoints[i - 1], visiblePoints[i], visiblePoints[i + 1], series)) {\n                point1 = getCoordinate(visiblePoints[i].xValue, stackedvalue.endValues[i], xAxis, yAxis, isInverted, series);\n                lineDirection = lineDirection.concat('L' + ' ' + (point1.x) + ' ' + (point1.y) + ' ');\n                visiblePoints[i].symbolLocations.push(getCoordinate(visiblePoints[i].xValue, stackedvalue.endValues[i], xAxis, yAxis, isInverted, series));\n                visiblePoints[i].regions.push(new Rect(visiblePoints[i].symbolLocations[0].x - series.marker.width, visiblePoints[i].symbolLocations[0].y - series.marker.height, 2 * series.marker.width, 2 * series.marker.height));\n            }\n            else {\n                if (series.emptyPointSettings.mode !== 'Drop') {\n                    for (let j = i - 1; j >= startPoint; j--) {\n                        point2 = getCoordinate(visiblePoints[j].xValue, stackedvalue.startValues[j], xAxis, yAxis, isInverted, series);\n                        lineDirection = lineDirection.concat('L' + ' ' + (point2.x) + ' ' + (point2.y) + ' ');\n                    }\n                    if (visiblePoints[i + 1] && visiblePoints[i + 1].visible) {\n                        point1 = getCoordinate(visiblePoints[i + 1].xValue, stackedvalue.startValues[i + 1], xAxis, yAxis, isInverted, series);\n                        lineDirection = lineDirection.concat('M' + ' ' + (point1.x) + ' ' + (point1.y) + ' ');\n                    }\n                    startPoint = i + 1;\n                }\n            }\n        }\n        if (series.chart.chartAreaType === 'PolarRadar' && visiblePoints.length > 1) {\n            point1 = { 'x': series.points[0].xValue, 'y': stackedvalue.endValues[0] };\n            point2 = getCoordinate(point1.x, point1.y, xAxis, yAxis, isInverted, series);\n            lineDirection += ('L' + ' ' + (point2.x) + ' ' + (point2.y) + ' ');\n        }\n        for (let j = pointsLength - 1; j >= startPoint; j--) {\n            let previousSeries = this.getPreviousSeries(series);\n            if (previousSeries.emptyPointSettings.mode !== 'Drop' || !previousSeries.points[j].isEmpty) {\n                point2 = getCoordinate(visiblePoints[j].xValue, stackedvalue.startValues[j], xAxis, yAxis, isInverted, series);\n                lineDirection = lineDirection.concat(((j === (pointsLength - 1) && polarAreaType) ? 'M' : 'L')\n                    + ' ' + (point2.x) + ' ' + (point2.y) + ' ');\n            }\n        }\n        options = new PathOption(series.chart.element.id + '_Series_' + series.index, series.interior, series.border.width, series.border.color, series.opacity, series.dashArray, lineDirection);\n        this.appendLinePath(options, series, '');\n        this.renderMarker(series);\n    }\n    /**\n     * Animates the series.\n     * @param  {Series} series - Defines the series to animate.\n     * @return {void}\n     */\n    doAnimation(series) {\n        let option = series.animation;\n        this.doLinearAnimation(series, option);\n    }\n    /**\n     * To destroy the stacking area.\n     * @return {void}\n     * @private\n     */\n    destroy(chart) {\n        /**\n         * Destroy method calling here\n         */\n    }\n    /**\n     * Get module name.\n     */\n    getModuleName() {\n        /**\n         * Returns the module name of the series\n         */\n        return 'StackingAreaSeries';\n    }\n    /**\n     * To find previous visible series\n     */\n    getPreviousSeries(series) {\n        let seriesCollection = series.chart.visibleSeries;\n        for (let i = 0, length = seriesCollection.length; i < length; i++) {\n            if (series.index === seriesCollection[i].index && i !== 0) {\n                return seriesCollection[i - 1];\n            }\n        }\n        return seriesCollection[0];\n    }\n}\n\n/**\n * `ScatterSeries` module is used to render the scatter series.\n */\nclass ScatterSeries {\n    /**\n     * Render the scatter series.\n     * @return {void}\n     * @private\n     */\n    render(series, xAxis, yAxis, isInverted) {\n        let seriesIndex = series.index;\n        let marker = series.marker;\n        let border = series.border;\n        let visiblePoints = series.points;\n        let symbolId;\n        let shapeOption;\n        let argsData;\n        let getCoordinate = series.chart.chartAreaType === 'PolarRadar' ? TransformToVisible : getPoint;\n        for (let point of visiblePoints) {\n            point.symbolLocations = [];\n            point.regions = [];\n            if (point.visible && withInRange(visiblePoints[point.index - 1], point, visiblePoints[point.index + 1], series)) {\n                symbolId = series.chart.element.id + '_Series_' + seriesIndex + '_Point_' + point.index;\n                argsData = {\n                    cancel: false, name: pointRender, series: series, point: point,\n                    fill: series.setPointColor(point, series.interior),\n                    border: series.setBorderColor(point, { width: series.border.width, color: series.border.color }),\n                    height: marker.height, width: marker.width, shape: marker.shape\n                };\n                series.chart.trigger(pointRender, argsData);\n                if (!argsData.cancel) {\n                    point.symbolLocations.push(getCoordinate(point.xValue, point.yValue, xAxis, yAxis, isInverted, series));\n                    point.color = argsData.fill;\n                    shapeOption = new PathOption(symbolId, argsData.fill, argsData.border.width, argsData.border.color, series.opacity, null);\n                    series.seriesElement.appendChild(drawSymbol(point.symbolLocations[0], argsData.shape, new Size(argsData.width, argsData.height), marker.imageUrl, shapeOption, point.x.toString() + ':' + point.yValue.toString()));\n                    point.regions.push(new Rect(point.symbolLocations[0].x - marker.width, point.symbolLocations[0].y - marker.height, 2 * marker.width, 2 * marker.height));\n                    point.marker = {\n                        border: argsData.border, fill: argsData.fill,\n                        height: argsData.height, visible: true,\n                        width: argsData.width, shape: argsData.shape\n                    };\n                }\n                else {\n                    point.marker = { visible: true };\n                }\n            }\n        }\n    }\n    /**\n     * Animates the series.\n     * @param  {Series} series - Defines the series to animate.\n     * @return {void}\n     */\n    doAnimation(series) {\n        let duration = series.animation.duration;\n        let delay = series.animation.delay;\n        let rectElements = series.seriesElement.childNodes;\n        let count = 1;\n        for (let point of series.points) {\n            if (!point.symbolLocations.length || !rectElements[count]) {\n                continue;\n            }\n            markerAnimate(rectElements[count], delay, duration, series, point.index, point.symbolLocations[0], false);\n            count++;\n        }\n    }\n    /**\n     * Get module name.\n     */\n    getModuleName() {\n        /**\n         * Returns the module name of the series\n         */\n        return 'ScatterSeries';\n    }\n    /**\n     * To destroy the scatter.\n     * @return {void}\n     */\n    destroy(chart) {\n        /**\n         * Destroy method calling here\n         */\n    }\n}\n\n/**\n * `RangeColumnSeries` module is used to render the range column series.\n */\nclass RangeColumnSeries extends ColumnBase {\n    /**\n     * Render Range Column series.\n     * @return {void}\n     * @private\n     */\n    render(series) {\n        let rect;\n        let sideBySideInfo = this.getSideBySideInfo(series);\n        //let origin: number = Math.max(<number>series.yAxis.visibleRange.min, 0);\n        let argsData;\n        for (let rangePoint of series.points) {\n            rangePoint.symbolLocations = [];\n            rangePoint.regions = [];\n            if (rangePoint.visible && withInRange(series.points[rangePoint.index - 1], rangePoint, series.points[rangePoint.index + 1], series)) {\n                rect = this.getRectangle(rangePoint.xValue + sideBySideInfo.start, rangePoint.high, rangePoint.xValue + sideBySideInfo.end, rangePoint.low, series);\n                argsData = this.triggerEvent(series, rangePoint, series.interior, { width: series.border.width, color: series.border.color });\n                if (!argsData.cancel) {\n                    this.updateSymbolLocation(rangePoint, rect, series);\n                    this.drawRectangle(series, rangePoint, rect, argsData);\n                }\n            }\n        }\n    }\n    /**\n     * Get module name.\n     */\n    getModuleName() {\n        return 'RangeColumnSeries';\n        /**\n         * return the module name\n         */\n    }\n    /**\n     * Animates the series.\n     * @param  {Series} series - Defines the series to animate.\n     * @return {void}\n     */\n    doAnimation(series) {\n        this.animate(series);\n    }\n    /**\n     * To destroy the range column series.\n     * @return {void}\n     * @private\n     */\n    destroy(chart) {\n        /**\n         * Destroy method performed here\n         */\n    }\n}\n\n/**\n * `WaterfallSeries` module is used to render the waterfall series.\n */\nclass WaterfallSeries extends ColumnBase {\n    /**\n     * Render waterfall series.\n     * @return {void}\n     * @private\n     */\n    render(series) {\n        let rect;\n        let sideBySideInfo = this.getSideBySideInfo(series);\n        let origin = Math.max(series.yAxis.visibleRange.min, 0);\n        let argsData;\n        let prevEndValue = 0;\n        let direction = '';\n        let currentEndValue = 0;\n        let originValue;\n        let prevRegion = null;\n        let y;\n        let isInversed = series.chart.requireInvertedAxis;\n        let intermediateOrigin = 0;\n        for (let point of series.points) {\n            point.symbolLocations = [];\n            point.regions = [];\n            if (point.visible && withInRange(series.points[point.index - 1], point, series.points[point.index + 1], series)) {\n                //Calcute the current point value to render waterfall series.\n                let isSum = this.isIntermediateSum(series, point.index);\n                let totalSum = this.isSumIndex(series, point.index);\n                currentEndValue += isSum || totalSum === true ? 0 : point.yValue;\n                //Calcute the origin value for points\n                originValue = (isSum === true ? intermediateOrigin : ((prevEndValue !== null && !totalSum) ? prevEndValue : origin));\n                rect = this.getRectangle(point.xValue + sideBySideInfo.start, currentEndValue, point.xValue + sideBySideInfo.end, originValue, series);\n                argsData = this.triggerPointRenderEvent(series, point);\n                //intermediateOrigin is used only for imtermediate data \n                if (isSum) {\n                    intermediateOrigin = currentEndValue;\n                }\n                prevEndValue = currentEndValue;\n                if (!argsData.cancel) {\n                    this.updateSymbolLocation(point, rect, series);\n                    this.drawRectangle(series, point, rect, argsData);\n                }\n                let currentRegion = point.regions[0];\n                if (prevRegion !== null) {\n                    let prevLeft = isInversed ? prevRegion.x : prevRegion.y;\n                    let currentLeft = isInversed ? currentRegion.x : currentRegion.y;\n                    let prevBottom = isInversed ? prevRegion.x + prevRegion.width : prevRegion.y + prevRegion.height;\n                    let currentBottom = isInversed ?\n                        currentRegion.x + currentRegion.width : currentRegion.y + currentRegion.height;\n                    if (Math.round(prevLeft) === Math.round(currentLeft) ||\n                        Math.round(prevBottom) === Math.round(currentLeft)) {\n                        y = isInversed ? currentRegion.x : currentRegion.y;\n                    }\n                    else {\n                        y = currentBottom;\n                    }\n                    if (isInversed) {\n                        direction = direction.concat('M' + ' ' + y + ' ' + (prevRegion.y + prevRegion.height) + ' ' +\n                            'L' + ' ' + y + ' ' + currentRegion.y + ' ');\n                    }\n                    else {\n                        direction = direction.concat('M' + ' ' + prevRegion.x + ' ' + y + ' ' +\n                            'L' + ' ' + (currentRegion.x + currentRegion.width) + ' ' + y + ' ');\n                    }\n                }\n                prevRegion = point.regions[0];\n            }\n        }\n        let options = new PathOption(series.chart.element.id + '_Series_' + series.index + '_Connector_', 'none', series.connector.width, series.connector.color, series.opacity, series.connector.dashArray, direction);\n        let element = series.chart.renderer.drawPath(options);\n        if (series.chart.animateSeries) {\n            element.style.visibility = 'hidden';\n        }\n        series.seriesElement.appendChild(element);\n    }\n    /**\n     * To check intermediateSumIndex in waterfall series.\n     * @return boolean\n     * @private\n     */\n    isIntermediateSum(series, index) {\n        if (series.intermediateSumIndexes !== undefined && series.intermediateSumIndexes.indexOf(index) !== -1) {\n            return true;\n        }\n        return false;\n    }\n    /**\n     * To check sumIndex in waterfall series.\n     * @return boolean\n     * @private\n     */\n    isSumIndex(series, index) {\n        if (series.sumIndexes !== undefined && series.sumIndexes.indexOf(index) !== -1) {\n            return true;\n        }\n        return false;\n    }\n    /**\n     * To trigger the point rendering event for waterfall series.\n     * @return IPointRenderEventArgs\n     * @private\n     */\n    triggerPointRenderEvent(series, point) {\n        let color;\n        let isSum = this.isIntermediateSum(series, point.index);\n        let totalSum = this.isSumIndex(series, point.index);\n        if (isSum || totalSum) {\n            color = series.summaryFillColor;\n        }\n        else if (point.y < 0) {\n            color = series.negativeFillColor;\n        }\n        else {\n            color = series.interior;\n        }\n        return this.triggerEvent(series, point, color, { color: series.border.color, width: series.border.width });\n    }\n    /**\n     * Add sumIndex and intermediateSumIndex data.\n     * @return {object[]}\n     * @private\n     */\n    processWaterfallData(json, series) {\n        let data = json;\n        let length = json.length;\n        let index;\n        let intermediateSum = series.intermediateSumIndexes;\n        let sumIndex = series.sumIndexes;\n        if (intermediateSum !== undefined && intermediateSum.length > 0) {\n            for (let i = 0; i < intermediateSum.length; i++) {\n                for (let j = 0; j < data.length; j++) {\n                    if (j === intermediateSum[i]) {\n                        if (i === 0) {\n                            index = subArraySum(data, -1, intermediateSum[i], null, series);\n                        }\n                        else {\n                            index = subArraySum(data, intermediateSum[i - 1], intermediateSum[i], null, series);\n                        }\n                        data[j][series.yName] = index;\n                    }\n                }\n            }\n        }\n        if (sumIndex !== undefined && sumIndex.length > 0) {\n            for (let k = 0; k < sumIndex.length; k++) {\n                for (let j = 0; j < data.length; j++) {\n                    if (j === sumIndex[k]) {\n                        if (intermediateSum !== undefined) {\n                            index = subArraySum(data, -1, sumIndex[k], sumIndex, series);\n                        }\n                        else {\n                            index = subArraySum(data, -1, sumIndex[k], null, series);\n                        }\n                        data[j][series.yName] = index;\n                    }\n                }\n            }\n        }\n        return data;\n    }\n    /**\n     * Animates the series.\n     * @param  {Series} series - Defines the series to animate.\n     * @return {void}\n     */\n    doAnimation(series) {\n        this.animate(series);\n    }\n    /**\n     * Get module name.\n     */\n    getModuleName() {\n        return 'WaterfallSeries';\n        /**\n         * return the module name\n         */\n    }\n    /**\n     * To destroy the waterfall series.\n     * @return {void}\n     * @private\n     */\n    destroy(chart) {\n        /**\n         * Destroys the waterfall series.\n         */\n    }\n}\n\n/**\n * `HiloSeries` module is used to render the hilo series.\n */\nclass HiloSeries extends ColumnBase {\n    /**\n     * Render Hiloseries.\n     * @return {void}\n     * @private\n     */\n    render(series) {\n        let region;\n        let sideBySideInfo = this.getSideBySideInfo(series);\n        let argsData;\n        for (let point of series.points) {\n            point.symbolLocations = [];\n            point.regions = [];\n            if (point.visible &&\n                withInRange(series.points[point.index - 1], point, series.points[point.index + 1], series)) {\n                region = this.getRectangle(point.xValue + sideBySideInfo.median, point.high, point.xValue + sideBySideInfo.median, point.low, series);\n                argsData = this.triggerPointRenderEvent(series, point);\n                if (!argsData.cancel) {\n                    if (!series.chart.requireInvertedAxis) {\n                        region.width = argsData.border.width;\n                        region.x = region.x - (region.width / 2);\n                    }\n                    else {\n                        region.height = argsData.border.width;\n                        region.y = region.y - (region.height / 2);\n                    }\n                    argsData.border.width = 0;\n                    this.updateSymbolLocation(point, region, series);\n                    this.drawRectangle(series, point, region, argsData);\n                }\n            }\n        }\n    }\n    /**\n     * To trigger the point rendering event.\n     * @return {void}\n     * @private\n     */\n    triggerPointRenderEvent(series, point) {\n        let border = { color: series.fill, width: Math.max(series.border.width, 2) };\n        return super.triggerEvent(series, point, series.interior, border);\n    }\n    /**\n     * Get module name.\n     */\n    getModuleName() {\n        return 'HiloSeries';\n        /**\n         * return the module name\n         */\n    }\n    /**\n     * Animates the series.\n     * @param  {Series} series - Defines the series to animate.\n     * @return {void}\n     */\n    doAnimation(series) {\n        this.animate(series);\n    }\n    /**\n     * To destroy the Hilo series.\n     * @return {void}\n     * @private\n     */\n    destroy(chart) {\n        /**\n         * Destroys the Hilo Series\n         */\n    }\n}\n\n/**\n * `HiloOpenCloseSeries` module is used to render the hiloOpenClose series.\n */\nclass HiloOpenCloseSeries extends ColumnBase {\n    /**\n     * Render HiloOpenCloseSeries series.\n     * @return {void}\n     * @private\n     */\n    render(series) {\n        let highLowRect;\n        let sideBySideInfo = this.getSideBySideInfo(series);\n        let argsData;\n        let borderWidth = Math.max(series.border.width, 2);\n        for (let point of series.points) {\n            point.symbolLocations = [];\n            point.regions = [];\n            if (point.visible &&\n                withInRange(series.points[point.index - 1], point, series.points[point.index + 1], series)) {\n                //highlow\n                highLowRect = this.getRectangle(point.xValue + sideBySideInfo.start, Math.max(point.high, point.low), point.xValue + sideBySideInfo.end, Math.min(point.high, point.low), series);\n                point.regions.push(this.getRectangle(point.xValue + sideBySideInfo.median, Math.max(point.high, point.low), point.xValue + sideBySideInfo.median, Math.min(point.high, point.low), series));\n                this.updateTickRegion(!series.chart.requireInvertedAxis, point.regions[0], borderWidth);\n                //open\n                point.regions.push(this.getRectangle(point.xValue + sideBySideInfo.start, Math.max(point.open, point.close), point.xValue + sideBySideInfo.median, Math.max(point.open, point.close), series));\n                //close\n                point.regions.push(this.getRectangle(point.xValue + sideBySideInfo.median, Math.min(point.open, point.close), point.xValue + sideBySideInfo.end, Math.min(point.open, point.close), series));\n                argsData = this.triggerPointRenderEvent(series, point);\n                if (!argsData.cancel) {\n                    this.updateSymbolLocation(point, point.regions[0], series);\n                    let open = { x: point.regions[1].x, y: point.regions[1].y };\n                    let close = { x: point.regions[2].x, y: point.regions[2].y };\n                    this.drawHiloOpenClosePath(series, point, open, close, highLowRect, argsData);\n                }\n                this.updateTickRegion(series.chart.requireInvertedAxis, point.regions[1], borderWidth);\n                this.updateTickRegion(series.chart.requireInvertedAxis, point.regions[2], borderWidth);\n            }\n        }\n    }\n    /**\n     * Updates the tick region\n     */\n    updateTickRegion(horizontal, region, borderWidth) {\n        if (horizontal) {\n            region.x -= borderWidth / 2;\n            region.width = borderWidth;\n        }\n        else {\n            region.y -= borderWidth / 2;\n            region.height = borderWidth;\n        }\n    }\n    /**\n     * Trigger point rendering event\n     */\n    triggerPointRenderEvent(series, point) {\n        let fill = (point.open <= point.close) ? series.bearFillColor : series.bullFillColor;\n        let border = { color: series.border.color, width: Math.max(series.border.width, 1) };\n        return this.triggerEvent(series, point, fill, border);\n    }\n    /**\n     * To draw the rectangle for points.\n     * @return {void}\n     * @private\n     */\n    drawHiloOpenClosePath(series, point, open, close, rect, argsData) {\n        // region highlow\n        let direction;\n        let options;\n        if (series.chart.requireInvertedAxis) {\n            direction = ('M' + ' ' + (rect.x) + ' ' + (rect.y + rect.height / 2) + ' ' +\n                'L' + ' ' + (rect.x + rect.width) + ' ' + (rect.y + rect.height / 2) + ' ');\n            direction += ('M' + ' ' + (open.x) + ' ' + (rect.y + rect.height / 2) + ' ' +\n                'L' + ' ' + (open.x) + ' ' + (rect.y + rect.height) + ' ');\n            direction += ('M' + ' ' + (close.x) + ' ' + (rect.y + rect.height / 2) + ' ' +\n                'L' + ' ' + (close.x) + ' ' + (rect.y) + ' ');\n        }\n        else {\n            direction = ('M' + ' ' + (rect.x + rect.width / 2) + ' ' + (rect.y + rect.height) + ' ' +\n                'L' + ' ' + (rect.x + rect.width / 2) + ' ' + (rect.y) + ' ');\n            //region opentick\n            direction += ('M' + ' ' + (rect.x) + ' ' + (open.y) + ' ' +\n                'L' + ' ' + (rect.x + rect.width / 2) + ' ' + (open.y) + ' ');\n            //region closetick\n            direction += ('M' + ' ' + (rect.x + rect.width / 2) + ' ' + (close.y) + ' ' +\n                'L' + ' ' + (rect.x + rect.width) + ' ' + (close.y) + ' ');\n        }\n        options = new PathOption(series.chart.element.id + '_Series_' + series.index + '_Point_' + point.index, argsData.fill, argsData.border.width, argsData.fill, series.opacity, series.dashArray, direction);\n        let element = series.chart.renderer.drawPath(options);\n        element.setAttribute('aria-label', point.x.toString() + ':' + point.high.toString()\n            + ':' + point.low.toString() + ':' + point.close.toString() + ':' + point.open.toString());\n        series.seriesElement.appendChild(element);\n    }\n    /**\n     * Get module name.\n     */\n    getModuleName() {\n        return 'HiloOpenCloseSeries';\n        /**\n         * return the module name\n         */\n    }\n    /**\n     * Animates the series.\n     * @param  {Series} series - Defines the series to animate.\n     * @return {void}\n     */\n    doAnimation(series) {\n        this.animate(series);\n    }\n    /**\n     * To destroy the column series.\n     * @return {void}\n     * @private\n     */\n    destroy(chart) {\n        /**\n         * Destroy method performed here\n         */\n    }\n}\n\n/**\n * `RangeAreaSeries` module is used to render the range area series.\n */\nclass RangeAreaSeries extends LineBase {\n    /**\n     * Render RangeArea Series.\n     * @return {void}.\n     * @private\n     */\n    render(series) {\n        let point;\n        let direction = '';\n        let command = 'M';\n        let closed = undefined;\n        let visiblePoints = this.improveChartPerformance(series);\n        for (let i = 0, length = visiblePoints.length; i < length; i++) {\n            point = visiblePoints[i];\n            point.symbolLocations = [];\n            point.regions = [];\n            let low = Math.min(point.low, point.high);\n            let high = Math.max(point.low, point.high);\n            if (series.yAxis.isInversed) {\n                let temp = low;\n                low = high;\n                high = temp;\n            }\n            let lowPoint = getPoint(point.xValue, low, series.xAxis, series.yAxis, series.chart.requireInvertedAxis);\n            let highPoint = getPoint(point.xValue, high, series.xAxis, series.yAxis, series.chart.requireInvertedAxis);\n            point.symbolLocations.push(highPoint);\n            point.symbolLocations.push(lowPoint);\n            let rect = new Rect(Math.min(lowPoint.x, highPoint.x), Math.min(lowPoint.y, highPoint.y), Math.max(Math.abs(highPoint.x - lowPoint.x), series.marker.width), Math.max(Math.abs(highPoint.y - lowPoint.y), series.marker.width));\n            if (!series.chart.requireInvertedAxis) {\n                rect.x -= series.marker.width / 2;\n            }\n            else {\n                rect.y -= series.marker.width / 2;\n            }\n            point.regions.push(rect);\n            //Path to connect the high points\n            if (point.visible && withInRange(visiblePoints[point.index - 1], point, visiblePoints[point.index + 1], series)) {\n                direction = direction.concat(command + ' ' + (lowPoint.x) + ' ' + (lowPoint.y) + ' ');\n                closed = false;\n                if ((i + 1 < visiblePoints.length && !visiblePoints[i + 1].visible)\n                    || i === visiblePoints.length - 1) {\n                    // Path to connect the low points\n                    direction = this.closeRangeAreaPath(visiblePoints, point, series, direction, i);\n                    command = 'M';\n                    direction = direction.concat(' ' + 'Z');\n                    closed = true;\n                }\n                command = 'L';\n            }\n            else {\n                if (closed === false && i !== 0) {\n                    direction = this.closeRangeAreaPath(visiblePoints, point, series, direction, i);\n                    closed = true;\n                }\n                command = 'M';\n                point.symbolLocations = [];\n            }\n        }\n        let name = series.category === 'Indicator' ? series.chart.element.id + '_Indicator_' + series.index + '_' + series.name :\n            series.chart.element.id + '_Series_' + series.index;\n        let options = new PathOption(name, series.interior, series.border.width, series.border.color, series.opacity, series.dashArray, direction);\n        this.appendLinePath(options, series, '');\n        this.renderMarker(series);\n    }\n    /**\n     * path for rendering the low points\n     * @return {void}.\n     * @private\n     */\n    closeRangeAreaPath(visiblePoints, point, series, direction, i) {\n        for (let j = i; j >= 0; j--) {\n            if (visiblePoints[j].visible && visiblePoints[j].symbolLocations[0]) {\n                point = visiblePoints[j];\n                direction += 'L' + ' ' + (point.symbolLocations[0].x) + ' ' + ((point.symbolLocations[0].y)) + ' ';\n            }\n            else {\n                break;\n            }\n        }\n        return direction;\n    }\n    /**\n     * Animates the series.\n     * @param  {Series} series - Defines the series to animate.\n     * @return {void}\n     */\n    doAnimation(series) {\n        let option = series.animation;\n        this.doLinearAnimation(series, option);\n    }\n    /**\n     * Get module name.\n     */\n    getModuleName() {\n        /**\n         * Returns the module name of the series\n         */\n        return 'RangeAreaSeries';\n    }\n    /**\n     * To destroy the line series.\n     * @return {void}\n     * @private\n     */\n    destroy(chart) {\n        /**\n         * Destroys range area series\n         */\n    }\n}\n\n/**\n * `BubbleSeries` module is used to render the bubble series.\n */\nclass BubbleSeries {\n    /**\n     * Render the Bubble series.\n     * @return {void}\n     * @private\n     */\n    render(series, xAxis, yAxis, isInverted) {\n        let marker = series.marker;\n        let visiblePoints = series.points;\n        let shapeOption;\n        let argsData;\n        //let bubbleMode: RadiusMode = bubbleOptions.radiusMode;\n        let segmentRadius;\n        let radius;\n        let value = Math.max(series.chart.initialClipRect.height, series.chart.initialClipRect.width);\n        let percentChange = value / 100;\n        let maxRadius = series.maxRadius * percentChange;\n        let minRadius = series.minRadius * percentChange;\n        let maximumSize = null;\n        let maxValue = null;\n        if ((series.maxRadius === null || series.minRadius === null)) {\n            for (let value of series.chart.visibleSeries) {\n                if (value.type === 'Bubble' && value.visible === true && (value.maxRadius === null || value.minRadius === null)) {\n                    maximumSize = value.sizeMax > maximumSize ? value.sizeMax : maximumSize;\n                }\n            }\n            maxValue = (value / 5) / 2;\n            minRadius = maxRadius = 1;\n            radius = maxValue * maxRadius;\n        }\n        else {\n            maximumSize = series.sizeMax;\n            radius = maxRadius - minRadius;\n        }\n        for (let bubblePoint of visiblePoints) {\n            bubblePoint.symbolLocations = [];\n            bubblePoint.regions = [];\n            if (bubblePoint.visible &&\n                withInRange(visiblePoints[bubblePoint.index - 1], bubblePoint, visiblePoints[bubblePoint.index + 1], series)) {\n                if ((series.maxRadius === null || series.minRadius === null)) {\n                    segmentRadius = radius * Math.abs(+bubblePoint.size / maximumSize);\n                }\n                else {\n                    segmentRadius = minRadius + radius * Math.abs(+bubblePoint.size / maximumSize);\n                }\n                segmentRadius = segmentRadius || minRadius;\n                argsData = {\n                    cancel: false, name: pointRender, series: series, point: bubblePoint,\n                    fill: series.setPointColor(bubblePoint, series.interior),\n                    border: series.setBorderColor(bubblePoint, { width: series.border.width, color: series.border.color }),\n                    height: 2 * segmentRadius, width: 2 * segmentRadius\n                };\n                series.chart.trigger(pointRender, argsData);\n                if (!argsData.cancel) {\n                    bubblePoint.symbolLocations.push(getPoint(bubblePoint.xValue, bubblePoint.yValue, xAxis, yAxis, isInverted));\n                    bubblePoint.color = argsData.fill;\n                    shapeOption = new PathOption(series.chart.element.id + '_Series_' + series.index + '_Point_' + bubblePoint.index, argsData.fill, argsData.border.width, argsData.border.color, series.opacity, null);\n                    series.seriesElement.appendChild(drawSymbol(bubblePoint.symbolLocations[0], 'Circle', new Size(argsData.width, argsData.height), marker.imageUrl, shapeOption, bubblePoint.x.toString() + ':' + bubblePoint.yValue.toString()));\n                    bubblePoint.regions.push(new Rect(bubblePoint.symbolLocations[0].x - segmentRadius, bubblePoint.symbolLocations[0].y - segmentRadius, 2 * segmentRadius, 2 * segmentRadius));\n                    bubblePoint.marker = {\n                        border: argsData.border, fill: argsData.fill,\n                        height: argsData.height, visible: true,\n                        shape: 'Circle', width: argsData.width\n                    };\n                }\n                else {\n                    bubblePoint.marker = { visible: false };\n                }\n            }\n        }\n    }\n    /**\n     * To destroy the Bubble.\n     * @return {void}\n     * @private\n     */\n    destroy(chart) {\n        /**\n         * Destroy method calling here\n         */\n    }\n    /**\n     * Get module name.\n     */\n    getModuleName() {\n        /**\n         * Returns the module name of the series\n         */\n        return 'BubbleSeries';\n    }\n    /**\n     * Animates the series.\n     * @param  {Series} series - Defines the series to animate.\n     * @return {void}\n     */\n    doAnimation(series) {\n        let duration = series.animation.duration;\n        let delay = series.animation.delay;\n        let rectElements = series.seriesElement.childNodes;\n        let count = 1;\n        for (let bubblePoint of series.points) {\n            if (!bubblePoint.symbolLocations.length) {\n                continue;\n            }\n            markerAnimate(rectElements[count], delay, duration, series, bubblePoint.index, bubblePoint.symbolLocations[0], false);\n            count++;\n        }\n    }\n}\n\n/**\n * render Line series\n */\nclass SplineBase extends LineBase {\n    /** @private */\n    constructor(chartModule) {\n        super(chartModule);\n        this.splinePoints = [];\n    }\n    /**\n     * To find the control points for spline.\n     * @return {void}\n     * @private\n     */\n    findSplinePoint(series) {\n        let value;\n        let points = this.filterEmptyPoints(series);\n        this.splinePoints = this.findSplineCoefficients(points, series);\n        if (points.length > 1) {\n            series.drawPoints = [];\n            for (let point of points) {\n                if (point.index !== 0) {\n                    let previous = this.getPreviousIndex(points, point.index - 1, series);\n                    value = this.getControlPoints(points[previous], point, this.splinePoints[previous], this.splinePoints[point.index], series);\n                    series.drawPoints.push(value);\n                    if (point.yValue && value.controlPoint1.y && value.controlPoint2.y) {\n                        series.yMin = Math.floor(Math.min(series.yMin, point.yValue, value.controlPoint1.y, value.controlPoint2.y));\n                        series.yMax = Math.ceil(Math.max(series.yMax, point.yValue, value.controlPoint1.y, value.controlPoint2.y));\n                    }\n                }\n            }\n        }\n    }\n    getPreviousIndex(points, i, series) {\n        if (series.emptyPointSettings.mode !== 'Drop') {\n            return i;\n        }\n        while (isNullOrUndefined(points[i]) && i > -1) {\n            i = i - 1;\n        }\n        return i;\n    }\n    getNextIndex(points, i, series) {\n        if (series.emptyPointSettings.mode !== 'Drop') {\n            return i;\n        }\n        while (isNullOrUndefined(points[i]) && i < points.length) {\n            i = i + 1;\n        }\n        return i;\n    }\n    filterEmptyPoints(series) {\n        if (series.emptyPointSettings.mode !== 'Drop') {\n            return series.points;\n        }\n        let points = extend([], series.points, null, true);\n        for (let i = 0; i < points.length; i++) {\n            points[i].index = i;\n            if (points[i].isEmpty) {\n                points[i].symbolLocations = [];\n                points[i].regions = [];\n                points.splice(i, 1);\n                i--;\n            }\n        }\n        return points;\n    }\n    /**\n     * To find the natural spline.\n     * @return {void}\n     * @private\n     */\n    findSplineCoefficients(points, series) {\n        let count = points.length;\n        let ySpline = [];\n        let ySplineDuplicate = [];\n        let coefficient1;\n        let coefficient2;\n        let coefficient3;\n        let dy1;\n        let dy2;\n        let dx = [];\n        let dy = [];\n        let slope = [];\n        let interPoint;\n        let slopeLength;\n        let cardinalSplineTension = series.cardinalSplineTension ? series.cardinalSplineTension : 0.5;\n        cardinalSplineTension = cardinalSplineTension < 0 ? 0 : cardinalSplineTension > 1 ? 1 : cardinalSplineTension;\n        switch (series.splineType) {\n            case 'Monotonic':\n                for (let i = 0; i < count - 1; i++) {\n                    dx[i] = points[i + 1].xValue - points[i].xValue;\n                    dy[i] = points[i + 1].yValue - points[i].yValue;\n                    slope[i] = dy[i] / dx[i];\n                }\n                //interpolant points\n                slopeLength = slope.length;\n                // to find the first and last co-efficient value\n                ySpline[0] = slope[0];\n                ySpline[count - 1] = slope[slopeLength - 1];\n                //to find the other co-efficient values\n                for (let j = 0; j < dx.length; j++) {\n                    if (slopeLength > j + 1) {\n                        if (slope[j] * slope[j + 1] <= 0) {\n                            ySpline[j + 1] = 0;\n                        }\n                        else {\n                            interPoint = dx[j] + dx[j + 1];\n                            ySpline[j + 1] = 3 * interPoint / ((interPoint + dx[j + 1]) / slope[j] + (interPoint + dx[j]) / slope[j + 1]);\n                        }\n                    }\n                }\n                break;\n            case 'Cardinal':\n                for (let i = 0; i < count; i++) {\n                    if (i === 0) {\n                        ySpline[i] = (count > 2) ? (cardinalSplineTension * (points[i + 2].xValue - points[i].xValue)) : 0;\n                    }\n                    else if (i === (count - 1)) {\n                        ySpline[i] = (count > 2) ? (cardinalSplineTension * (points[count - 1].xValue - points[count - 3].xValue)) : 0;\n                    }\n                    else {\n                        ySpline[i] = (cardinalSplineTension * (points[i + 1].xValue - points[i - 1].xValue));\n                    }\n                }\n                break;\n            default:\n                if (series.splineType === 'Clamped') {\n                    let firstIndex = (points[1].yValue - points[0].yValue) / (points[1].xValue - points[0].xValue);\n                    let lastIndex = (points[count - 1].xValue - points[count - 2].xValue) /\n                        (points[count - 1].yValue - points[count - 2].yValue);\n                    ySpline[0] = (3 * (points[1].yValue - points[0].yValue)) / (points[1].xValue - points[0].xValue) - 3;\n                    ySplineDuplicate[0] = 0.5;\n                    ySpline[points.length - 1] = (3 * (points[points.length - 1].yValue - points[points.length - 2].yValue)) /\n                        (points[points.length - 1].xValue - points[points.length - 2].xValue);\n                    ySpline[0] = ySplineDuplicate[0] = Math.abs(ySpline[0]) === Infinity ? 0 : ySpline[0];\n                    ySpline[points.length - 1] = ySplineDuplicate[points.length - 1] = Math.abs(ySpline[points.length - 1]) === Infinity ?\n                        0 : ySpline[points.length - 1];\n                }\n                else {\n                    // assigning the first and last value as zero\n                    ySpline[0] = ySplineDuplicate[0] = 0;\n                    ySpline[points.length - 1] = 0;\n                }\n                for (let i = 1; i < count - 1; i++) {\n                    coefficient1 = points[i].xValue - points[i - 1].xValue;\n                    coefficient2 = points[i + 1].xValue - points[i - 1].xValue;\n                    coefficient3 = points[i + 1].xValue - points[i].xValue;\n                    dy1 = points[i + 1].yValue - points[i].yValue || null;\n                    dy2 = points[i].yValue - points[i - 1].yValue || null;\n                    if (coefficient1 === 0 || coefficient2 === 0 || coefficient3 === 0) {\n                        ySpline[i] = 0;\n                        ySplineDuplicate[i] = 0;\n                    }\n                    else {\n                        let p = 1 / (coefficient1 * ySpline[i - 1] + 2 * coefficient2);\n                        ySpline[i] = -p * coefficient3;\n                        ySplineDuplicate[i] = p * (6 * (dy1 / coefficient3 - dy2 / coefficient1) - coefficient1 * ySplineDuplicate[i - 1]);\n                    }\n                }\n                for (let k = count - 2; k >= 0; k--) {\n                    ySpline[k] = ySpline[k] * ySpline[k + 1] + ySplineDuplicate[k];\n                }\n                break;\n        }\n        return ySpline;\n    }\n    /**\n     * To find the control points for spline.\n     * @return {void}\n     * @private\n     */\n    getControlPoints(point1, point2, ySpline1, ySpline2, series) {\n        let controlPoint1;\n        let controlPoint2;\n        let point;\n        let ySplineDuplicate1 = ySpline1;\n        let ySplineDuplicate2 = ySpline2;\n        switch (series.splineType) {\n            case 'Cardinal':\n                if (series.xAxis.valueType === 'DateTime') {\n                    ySplineDuplicate1 = ySpline1 / this.dateTimeInterval(series);\n                    ySplineDuplicate2 = ySpline2 / this.dateTimeInterval(series);\n                }\n                controlPoint1 = new ChartLocation(point1.xValue + ySpline1 / 3, point1.yValue + ySplineDuplicate1 / 3);\n                controlPoint2 = new ChartLocation(point2.xValue - ySpline2 / 3, point2.yValue - ySplineDuplicate2 / 3);\n                point = new ControlPoints(controlPoint1, controlPoint2);\n                break;\n            case 'Monotonic':\n                let value = (point2.xValue - point1.xValue) / 3;\n                controlPoint1 = new ChartLocation(point1.xValue + value, point1.yValue + ySpline1 * value);\n                controlPoint2 = new ChartLocation(point2.xValue - value, point2.yValue - ySpline2 * value);\n                point = new ControlPoints(controlPoint1, controlPoint2);\n                break;\n            default:\n                let one3 = 1 / 3.0;\n                let deltaX2 = (point2.xValue - point1.xValue);\n                deltaX2 = deltaX2 * deltaX2;\n                let y1 = one3 * (((2 * point1.yValue) + point2.yValue) - one3 * deltaX2 * (ySpline1 + 0.5 * ySpline2));\n                let y2 = one3 * ((point1.yValue + (2 * point2.yValue)) - one3 * deltaX2 * (0.5 * ySpline1 + ySpline2));\n                controlPoint1 = new ChartLocation((2 * (point1.xValue) + (point2.xValue)) * one3, y1);\n                controlPoint2 = new ChartLocation(((point1.xValue) + 2 * (point2.xValue)) * one3, y2);\n                point = new ControlPoints(controlPoint1, controlPoint2);\n                break;\n        }\n        return point;\n    }\n    /**\n     * calculate datetime interval in hours\n     *\n     */\n    dateTimeInterval(series) {\n        let interval = series.xAxis.actualIntervalType;\n        let intervalInMilliseconds;\n        if (interval === 'Years') {\n            intervalInMilliseconds = 365 * 24 * 60 * 60 * 1000;\n        }\n        else if (interval === 'Months') {\n            intervalInMilliseconds = 30 * 24 * 60 * 60 * 1000;\n        }\n        else if (interval === 'Days') {\n            intervalInMilliseconds = 24 * 60 * 60 * 1000;\n        }\n        else if (interval === 'Hours') {\n            intervalInMilliseconds = 60 * 60 * 1000;\n        }\n        else if (interval === 'Minutes') {\n            intervalInMilliseconds = 60 * 1000;\n        }\n        else if (interval === 'Seconds') {\n            intervalInMilliseconds = 1000;\n        }\n        else {\n            intervalInMilliseconds = 30 * 24 * 60 * 60 * 1000;\n        }\n        return intervalInMilliseconds;\n    }\n    /**\n     * Animates the series.\n     * @param  {Series} series - Defines the series to animate.\n     * @return {void}\n     */\n    doAnimation(series) {\n        let option = series.animation;\n        this.doLinearAnimation(series, option);\n    }\n}\n\n/**\n * `SplineSeries` module is used to render the spline series.\n */\nclass SplineSeries extends SplineBase {\n    /**\n     * Render the spline series.\n     * @return {void}\n     * @private\n     */\n    render(series, xAxis, yAxis, isInverted) {\n        let chart = series.chart;\n        let marker = series.marker;\n        let options;\n        let firstPoint = null;\n        let direction = '';\n        let pt1;\n        let pt2;\n        let bpt1;\n        let bpt2;\n        let data;\n        let controlPoint1;\n        let controlPoint2;\n        let startPoint = 'M';\n        let points = this.filterEmptyPoints(series);\n        let previous;\n        let getCoordinate = series.chart.chartAreaType === 'PolarRadar' ? TransformToVisible : getPoint;\n        for (let point of points) {\n            previous = this.getPreviousIndex(points, point.index - 1, series);\n            point.symbolLocations = [];\n            point.regions = [];\n            if (point.visible && withInRange(points[previous], point, points[this.getNextIndex(points, point.index - 1, series)], series)) {\n                if (firstPoint !== null) {\n                    data = series.drawPoints[previous];\n                    controlPoint1 = data.controlPoint1;\n                    controlPoint2 = data.controlPoint2;\n                    pt1 = getCoordinate(firstPoint.xValue, firstPoint.yValue, xAxis, yAxis, isInverted, series);\n                    pt2 = getCoordinate(point.xValue, point.yValue, xAxis, yAxis, isInverted, series);\n                    bpt1 = getCoordinate(controlPoint1.x, controlPoint1.y, xAxis, yAxis, isInverted, series);\n                    bpt2 = getCoordinate(controlPoint2.x, controlPoint2.y, xAxis, yAxis, isInverted, series);\n                    direction = direction.concat((startPoint + ' ' + (pt1.x) + ' ' + (pt1.y) + ' ' + 'C' + ' ' + (bpt1.x) + ' '\n                        + (bpt1.y) + ' ' + (bpt2.x) + ' ' + (bpt2.y) + ' ' + (pt2.x) + ' ' + (pt2.y) + ' '));\n                    startPoint = 'L';\n                }\n                firstPoint = point;\n                this.storePointLocation(point, series, isInverted, getCoordinate);\n            }\n            else {\n                startPoint = 'M';\n                firstPoint = null;\n                point.symbolLocations = [];\n            }\n        }\n        let name = series.category === 'TrendLine' ? series.chart.element.id + '_Series_' + series.sourceIndex + '_TrendLine_' + series.index :\n            series.chart.element.id + '_Series_' + series.index;\n        options = new PathOption(name, 'transparent', series.width, series.interior, series.opacity, series.dashArray, direction);\n        this.appendLinePath(options, series, '');\n        this.renderMarker(series);\n    }\n    /**\n     * Get module name.\n     */\n    getModuleName() {\n        /**\n         * Returns the module name of the series\n         */\n        return 'SplineSeries';\n    }\n    /**\n     * To destroy the spline.\n     * @return {void}\n     * @private\n     */\n    destroy(chart) {\n        /**\n         * Destroy method calling here\n         */\n    }\n}\n\n/**\n * `SplineAreaSeries` module used to render the spline area series.\n */\nclass SplineAreaSeries extends SplineBase {\n    /**\n     * Render the splineArea series.\n     * @return {void}\n     * @private\n     */\n    render(series, xAxis, yAxis, isInverted) {\n        let firstPoint = null;\n        let direction = '';\n        let startPoint = null;\n        let startPoint1 = null;\n        let pt1;\n        let pt2;\n        let bpt1;\n        let bpt2;\n        let controlPt1;\n        let controlPt2;\n        let points = this.filterEmptyPoints(series);\n        let pointsLength = series.points.length;\n        let point;\n        let previous;\n        let getCoordinate = series.chart.chartAreaType === 'PolarRadar' ? TransformToVisible : getPoint;\n        let origin = series.chart.chartAreaType === 'PolarRadar' ? series.points[0].yValue :\n            Math.max(series.yAxis.visibleRange.min, 0);\n        for (let i = 0; i < pointsLength; i++) {\n            point = series.points[i];\n            point.symbolLocations = [];\n            point.regions = [];\n            previous = this.getPreviousIndex(points, point.index - 1, series);\n            if (point.visible &&\n                withInRange(points[previous], point, points[this.getNextIndex(points, point.index - 1, series)], series)) {\n                if (firstPoint) {\n                    controlPt1 = series.drawPoints[previous].controlPoint1;\n                    controlPt2 = series.drawPoints[previous].controlPoint2;\n                    pt1 = getCoordinate(firstPoint.xValue, firstPoint.yValue, xAxis, yAxis, isInverted, series);\n                    pt2 = getCoordinate(point.xValue, point.yValue, xAxis, yAxis, isInverted, series);\n                    bpt1 = getCoordinate(controlPt1.x, controlPt1.y, xAxis, yAxis, isInverted, series);\n                    bpt2 = getCoordinate(controlPt2.x, controlPt2.y, xAxis, yAxis, isInverted, series);\n                    direction = direction.concat(' C' + bpt1.x + ' '\n                        + bpt1.y + ' ' + bpt2.x + ' ' + bpt2.y + ' ' + pt2.x + ' ' + pt2.y + ' ');\n                }\n                else {\n                    // Start point for the current path\n                    startPoint = getCoordinate(point.xValue, origin, xAxis, yAxis, isInverted, series);\n                    direction += ('M ' + startPoint.x + ' ' + startPoint.y + ' ');\n                    // First Point to draw the area path\n                    startPoint1 = getCoordinate(point.xValue, point.yValue, xAxis, yAxis, isInverted, series);\n                    direction += ('L ' + startPoint1.x + ' ' + startPoint1.y + ' ');\n                }\n                this.storePointLocation(point, series, isInverted, getCoordinate);\n                firstPoint = point;\n            }\n            else {\n                firstPoint = null;\n                point.symbolLocations = [];\n            }\n            if (((i + 1 < pointsLength && !series.points[i + 1].visible) || i === pointsLength - 1)\n                && pt2 && startPoint) {\n                startPoint = getCoordinate(point.xValue, origin, xAxis, yAxis, isInverted, series);\n                direction = direction.concat('L ' + (startPoint.x) + ' ' + (startPoint.y));\n            }\n        }\n        this.appendLinePath(new PathOption(series.chart.element.id + '_Series_' + series.index, series.interior, series.border.width, series.border.color, series.opacity, series.dashArray, direction), series, '');\n        this.renderMarker(series);\n    }\n    /**\n     * Get module name.\n     */\n    getModuleName() {\n        /**\n         * Returns the module name of the series\n         */\n        return 'SplineAreaSeries';\n    }\n    /**\n     * To destroy the spline.\n     * @return {void}\n     * @private\n     */\n    destroy(chart) {\n        /**\n         * Destroy method calling here\n         */\n    }\n}\n\n/**\n * Technical Analysis module helps to predict the market trend\n */\nclass TechnicalAnalysis extends LineBase {\n    /**\n     * Defines the collection of series, that are used to represent the given technical indicator\n     * @private\n     */\n    initSeriesCollection(indicator, chart) {\n        indicator.targetSeries = [];\n        let signalLine = new Series(indicator, 'targetSeries', {}, true);\n        this.setSeriesProperties(signalLine, indicator, 'SignalLine', indicator.fill, indicator.width, chart);\n    }\n    /**\n     * Initializes the properties of the given series\n     * @private\n     */\n    setSeriesProperties(series, indicator, name, fill, width, chart) {\n        series.name = name;\n        series.xName = 'x';\n        series.yName = 'y';\n        series.fill = fill || '#606eff';\n        series.dashArray = indicator.dashArray;\n        series.width = width;\n        series.xAxisName = indicator.xAxisName;\n        series.animation = indicator.animation;\n        series.yAxisName = indicator.yAxisName;\n        series.clipRectElement = indicator.clipRectElement;\n        series.points = [];\n        series.enableTooltip = true;\n        series.interior = series.fill;\n        series.category = 'Indicator';\n        series.index = indicator.index;\n        series.chart = chart;\n        series.xMin = Infinity;\n        series.xMax = -Infinity;\n        series.yMin = Infinity;\n        series.yMax = -Infinity;\n        series.xData = [];\n        series.yData = [];\n        series.marker.visible = false;\n        indicator.targetSeries.push(series);\n    }\n    /**\n     * Creates the elements of a technical indicator\n     * @private\n     */\n    createIndicatorElements(chart, indicator, index) {\n        if (indicator.seriesName || indicator.dataSource) {\n            findClipRect(indicator.targetSeries[0]);\n        }\n        let clipRect = new Rect(0, 0, 0, 0);\n        if (indicator.seriesName || indicator.dataSource) {\n            clipRect = indicator.targetSeries[0].clipRect;\n        }\n        //defines the clip rect element\n        let clipRectElement = chart.renderer.drawClipPath(new RectOption(chart.element.id + '_ChartIndicatorClipRect_' + index, 'transparent', { width: 1, color: 'Gray' }, 1, {\n            x: 0, y: 0, width: clipRect.width,\n            height: clipRect.height,\n        }));\n        //creates the group for an indicator\n        indicator.indicatorElement = chart.renderer.createGroup({\n            'id': chart.element.id + 'IndicatorGroup' + index,\n            'transform': 'translate(' + clipRect.x + ',' + clipRect.y + ')',\n            'clip-path': 'url(#' + chart.element.id + '_ChartIndicatorClipRect_' + index + ')'\n        });\n        indicator.indicatorElement.appendChild(clipRectElement);\n        //Defines a group for each series in a technical indicator\n        for (let series of indicator.targetSeries) {\n            series.clipRectElement = clipRectElement;\n            let element = series.chart.renderer.createGroup({\n                'id': series.chart.element.id + '_Indicator_' +\n                    indicator.index + '_' + series.name + '_Group'\n            });\n            indicator.indicatorElement.appendChild(element);\n            series.seriesElement = element;\n        }\n        chart.indicatorElements.appendChild(indicator.indicatorElement);\n    }\n    getDataPoint(x, y, sourcePoint, series, index, indicator = null) {\n        let point = new Points();\n        point.x = x;\n        point.y = y;\n        point.xValue = sourcePoint.xValue;\n        point.color = series.fill;\n        point.index = index;\n        point.yValue = y;\n        point.visible = true;\n        series.xMin = Math.min(series.xMin, point.xValue);\n        series.yMin = Math.min(series.yMin, point.yValue);\n        series.xMax = Math.max(series.xMax, point.xValue);\n        series.yMax = Math.max(series.yMax, point.yValue);\n        series.xData.push(point.xValue);\n        if (indicator && indicator.type === 'Macd' && series.type === 'Column') {\n            if (point.y >= 0) {\n                point.color = indicator.macdPositiveColor;\n            }\n            else {\n                point.color = indicator.macdNegativeColor;\n            }\n        }\n        return point;\n    }\n    getRangePoint(x, high, low, sourcePoint, series, index, indicator = null) {\n        let point = new Points();\n        point.x = x;\n        point.high = high;\n        point.low = low;\n        point.xValue = sourcePoint.xValue;\n        point.color = series.fill;\n        point.index = index;\n        point.visible = true;\n        series.xData.push(point.xValue);\n        return point;\n    }\n    setSeriesRange(points, indicator, series = null) {\n        if (!series) {\n            indicator.targetSeries[0].points = points;\n        }\n        else {\n            series.points = points;\n        }\n    }\n}\n\n/**\n * `SmaIndicator` module is used to render SMA indicator.\n */\nclass SmaIndicator extends TechnicalAnalysis {\n    /**\n     * Defines the predictions based on SMA approach\n     * @private\n     */\n    initDataSource(indicator, chart) {\n        let smaPoints = [];\n        let points = indicator.points;\n        if (points && points.length) {\n            //prepare data\n            let validData = points;\n            let field = firstToLowerCase(indicator.field);\n            let xField = 'x';\n            let signalSeries = indicator.targetSeries[0];\n            if (validData && validData.length && validData.length >= indicator.period) {\n                //find initial average\n                let average = 0;\n                let sum$$1 = 0;\n                for (let i = 0; i < indicator.period; i++) {\n                    sum$$1 += validData[i][field];\n                }\n                average = sum$$1 / indicator.period;\n                smaPoints.push(this.getDataPoint(validData[indicator.period - 1][xField], average, validData[indicator.period - 1], signalSeries, smaPoints.length));\n                let index = indicator.period;\n                while (index < validData.length) {\n                    sum$$1 -= validData[index - indicator.period][field];\n                    sum$$1 += validData[index][field];\n                    average = sum$$1 / indicator.period;\n                    smaPoints.push(this.getDataPoint(validData[index][xField], average, validData[index], signalSeries, smaPoints.length));\n                    index++;\n                }\n            }\n            this.setSeriesRange(smaPoints, indicator);\n        }\n    }\n    /**\n     * To destroy the SMA indicator\n     * @return {void}\n     * @private\n     */\n    destroy(chart) {\n        /**\n         * Destroys the SMA indicator\n         */\n    }\n    /**\n     * Get module name.\n     */\n    getModuleName() {\n        /**\n         * Returns the module name of the series\n         */\n        return 'SmaIndicator';\n    }\n}\n\n/**\n * `EmaIndicator` module is used to render EMA indicator.\n */\nclass EmaIndicator extends TechnicalAnalysis {\n    /**\n     * Defines the predictions based on EMA approach\n     * @private\n     */\n    initDataSource(indicator, chart) {\n        let field = firstToLowerCase(indicator.field);\n        let xField = 'x';\n        let emaPoints = [];\n        let signalSeries = indicator.targetSeries[0];\n        //prepare data\n        let validData = indicator.points;\n        if (validData && validData.length && validData.length >= indicator.period) {\n            //find initial average\n            let sum$$1 = 0;\n            let average = 0;\n            //smoothing factor\n            let k = (2 / (indicator.period + 1));\n            for (let i = 0; i < indicator.period; i++) {\n                sum$$1 += validData[i][field];\n            }\n            average = sum$$1 / indicator.period;\n            emaPoints.push(this.getDataPoint(validData[indicator.period - 1][xField], average, validData[indicator.period - 1], signalSeries, emaPoints.length));\n            let index = indicator.period;\n            while (index < validData.length) {\n                //previous average\n                let prevAverage = emaPoints[index - indicator.period][signalSeries.yName];\n                let yValue = (validData[index][field] - prevAverage) * k + prevAverage;\n                emaPoints.push(this.getDataPoint(validData[index][xField], yValue, validData[index], signalSeries, emaPoints.length));\n                index++;\n            }\n        }\n        this.setSeriesRange(emaPoints, indicator);\n    }\n    /**\n     * To destroy the EMA Indicator\n     * @return {void}\n     * @private\n     */\n    destroy(chart) {\n        /**\n         * Destroys the EMA Indicator\n         */\n    }\n    /**\n     * Get module name.\n     */\n    getModuleName() {\n        /**\n         * Returns the module name of the series\n         */\n        return 'EmaIndicator';\n    }\n}\n\n/**\n * `TmaIndicator` module is used to render TMA indicator.\n */\nclass TmaIndicator extends TechnicalAnalysis {\n    /**\n     * Defines the predictions based on TMA approach\n     * @private\n     */\n    initDataSource(indicator, chart) {\n        let tmaPoints = [];\n        let field = firstToLowerCase(indicator.field);\n        let xField = 'x';\n        let signalSeries = indicator.targetSeries[0];\n        //prepare data\n        let validData = indicator.points;\n        if (validData && validData.length && validData.length >= indicator.period) {\n            let signalSeries = indicator.targetSeries[0];\n            //prepare data\n            let validData = indicator.points;\n            if (validData.length && validData.length >= indicator.period) {\n                //smoothing factor\n                let k = (2 / (indicator.period + 1));\n                //find initial average\n                let sum$$1 = 0;\n                let smaValues = [];\n                //sma values\n                let index = 0;\n                let length = validData.length;\n                let period = indicator.period;\n                while (length >= period) {\n                    sum$$1 = 0;\n                    index = validData.length - length;\n                    for (let j = index; j < index + period; j++) {\n                        sum$$1 = sum$$1 + validData[j][field];\n                    }\n                    sum$$1 = sum$$1 / period;\n                    smaValues.push(sum$$1);\n                    length--;\n                }\n                //initial values\n                for (let k = 0; k < period - 1; k++) {\n                    sum$$1 = 0;\n                    for (let j = 0; j < k + 1; j++) {\n                        sum$$1 = sum$$1 + validData[j][field];\n                    }\n                    sum$$1 = sum$$1 / (k + 1);\n                    smaValues.splice(k, 0, sum$$1);\n                }\n                index = indicator.period;\n                while (index <= smaValues.length) {\n                    sum$$1 = 0;\n                    for (let j = index - indicator.period; j < index; j++) {\n                        sum$$1 = sum$$1 + smaValues[j];\n                    }\n                    sum$$1 = sum$$1 / indicator.period;\n                    tmaPoints.push(this.getDataPoint(validData[index - 1][xField], sum$$1, validData[index - 1], signalSeries, tmaPoints.length));\n                    index++;\n                }\n            }\n        }\n        this.setSeriesRange(tmaPoints, indicator);\n    }\n    /**\n     * To destroy the TMA indicator.\n     * @return {void}\n     * @private\n     */\n    destroy(chart) {\n        /**\n         * Destroys the TMA Indicator\n         */\n    }\n    /**\n     * Get module name.\n     */\n    getModuleName() {\n        /**\n         * Returns the module name of the series\n         */\n        return 'TmaIndicator';\n    }\n}\n\n/**\n * `AccumulationDistributionIndicator` module is used to render accumulation distribution indicator.\n */\nclass AccumulationDistributionIndicator extends TechnicalAnalysis {\n    /**\n     * Defines the predictions using accumulation distribution approach\n     * @private\n     */\n    initDataSource(indicator, chart) {\n        let sourceSeries = indicator.sourceSeries;\n        let adPoints = [];\n        let validData = indicator.points;\n        if (validData.length > 0 && validData.length > indicator.period) {\n            adPoints = this.calculateADPoints(indicator, validData);\n        }\n        this.setSeriesRange(adPoints, indicator);\n    }\n    /**\n     *  Calculates the Accumulation Distribution values\n     * @private\n     */\n    calculateADPoints(indicator, validData) {\n        let temp = [];\n        let sum = 0;\n        let i = 0;\n        let value = 0;\n        let high = 0;\n        let low = 0;\n        let close = 0;\n        let signalSeries = indicator.targetSeries[0];\n        for (i = 0; i < validData.length; i++) {\n            high = Number(validData[i].high);\n            low = Number(validData[i].low);\n            close = Number(validData[i].close);\n            /**\n             * Money Flow Multiplier = [(Close -  Low) - (High - Close)] /(High - Low)\n             * Money Flow Volume = Money Flow Multiplier x Volume for the Period\n             * ADL = Previous ADL + Current Period's Money Flow Volume\n             */\n            value = ((close - low) - (high - close)) / (high - low);\n            /**\n             * Sum is to calculate the Y values of the Accumulation distribution indicator\n             */\n            sum = sum + value * Number(validData[i].volume);\n            /**\n             * To calculate the x and y values for the Accumulation distribution indicator\n             */\n            temp[i] = this.getDataPoint(validData[i].x, sum, validData[i], signalSeries, temp.length);\n        }\n        return temp;\n    }\n    /**\n     * To destroy the Accumulation Distribution Technical Indicator.\n     * @return {void}\n     * @private\n     */\n    destroy(chart) {\n        /**\n         * Destroys the Accumulation Distribution Technical indicator\n         */\n    }\n    /**\n     * Get module name.\n     */\n    getModuleName() {\n        /**\n         * Returns the module name of the Indicator\n         */\n        return 'AccumulationDistributionIndicator';\n    }\n}\n\n/**\n * `AtrIndicator` module is used to render ATR indicator.\n */\nclass AtrIndicator extends TechnicalAnalysis {\n    /**\n     * Defines the predictions using Average True Range approach\n     * @private\n     */\n    initDataSource(indicator, chart) {\n        let sourceSeries = indicator.sourceSeries;\n        let validData = indicator.points;\n        if (validData.length > 0 && validData.length > indicator.period) {\n            this.calculateATRPoints(indicator, validData);\n        }\n    }\n    /**\n     *  To calculate Average True Range indicator points\n     * @private\n     */\n    calculateATRPoints(indicator, validData) {\n        let average = 0;\n        let highLow = 0;\n        let highClose = 0;\n        let lowClose = 0;\n        let trueRange = 0;\n        let points = [];\n        let temp = [];\n        let period = indicator.period;\n        let sum = 0;\n        let y = 'y';\n        let signalSeries = indicator.targetSeries[0];\n        for (let i = 0; i < validData.length; i++) {\n            /**\n             * Current High less the current Low\n             * Current High less the previous Close (absolute value)\n             * Current Low less the previous Close (absolute value)\n             */\n            highLow = Number(validData[i].high) - Number(validData[i].low);\n            if (i > 0) {\n                //\n                highClose = Math.abs(Number(validData[i].high) - Number(validData[i - 1].close));\n                lowClose = Math.abs(Number(validData[i].low) - Number(validData[i - 1].close));\n            }\n            /**\n             * To find the maximum of highLow, highClose, lowClose\n             */\n            trueRange = Math.max(highLow, highClose, lowClose);\n            sum = sum + trueRange;\n            /**\n             * Push the x and y values for the Average true range indicator\n             */\n            if (i >= period) {\n                average = (Number(temp[i - 1][y]) * (period - 1) + trueRange) / period;\n                points.push(this.getDataPoint(validData[i].x, average, validData[i], signalSeries, points.length));\n            }\n            else {\n                average = sum / period;\n                if (i === period - 1) {\n                    points.push(this.getDataPoint(validData[i].x, average, validData[i], signalSeries, points.length));\n                }\n            }\n            temp[i] = { x: validData[i].x, y: average };\n        }\n        this.setSeriesRange(points, indicator);\n    }\n    /**\n     * To destroy the Average true range indicator.\n     * @return {void}\n     * @private\n     */\n    destroy(chart) {\n        /**\n         * Destroy the Average true range indicator\n         */\n    }\n    /**\n     * Get module name.\n     */\n    getModuleName() {\n        /**\n         * Returns the module name of the Indicator\n         */\n        return 'AtrIndicator';\n    }\n}\n\n/**\n * `MomentumIndicator` module is used to render Momentum indicator.\n */\nclass MomentumIndicator extends TechnicalAnalysis {\n    /**\n     * Defines the collection of series to represent a momentum indicator\n     * @private\n     */\n    initSeriesCollection(indicator, chart) {\n        super.initSeriesCollection(indicator, chart);\n        let upperLine = new Series(indicator, 'targetSeries', {}, true);\n        super.setSeriesProperties(upperLine, indicator, 'UpperLine', indicator.upperLine.color, indicator.upperLine.width, chart);\n    }\n    /**\n     * Defines the predictions using momentum approach\n     * @private\n     */\n    initDataSource(indicator, chart) {\n        let upperCollection = [];\n        let signalCollection = [];\n        let validData = indicator.points;\n        if (validData && validData.length) {\n            let upperSeries = indicator.targetSeries[1];\n            let signalSeries = indicator.targetSeries[0];\n            let length = indicator.period;\n            if (validData.length >= indicator.period) {\n                for (let i = 0; i < validData.length; i++) {\n                    upperCollection.push(this.getDataPoint(validData[i].x, 100, validData[i], upperSeries, upperCollection.length));\n                    if (!(i < length)) {\n                        signalCollection.push(this.getDataPoint(validData[i].x, (Number(validData[i].close) / Number(validData[i - length].close) * 100), validData[i], signalSeries, signalCollection.length));\n                    }\n                }\n            }\n            this.setSeriesRange(signalCollection, indicator, indicator.targetSeries[0]);\n            this.setSeriesRange(upperCollection, indicator, indicator.targetSeries[1]);\n        }\n    }\n    /**\n     * To destroy the momentum indicator\n     * @return {void}\n     * @private\n     */\n    destroy(chart) {\n        /**\n         * Destroys the momentum indicator\n         */\n    }\n    /**\n     * Get module name.\n     */\n    getModuleName() {\n        /**\n         * Returns the module name of the series\n         */\n        return 'MomentumIndicator';\n    }\n}\n\n/**\n * `RsiIndicator` module is used to render RSI indicator.\n */\nclass RsiIndicator extends TechnicalAnalysis {\n    /**\n     * Initializes the series collection to represent the RSI Indicator\n     * @private\n     */\n    initSeriesCollection(indicator, chart) {\n        super.initSeriesCollection(indicator, chart);\n        if (indicator.showZones) {\n            let lowerLine = new Series(indicator, 'targetSeries', {}, true);\n            super.setSeriesProperties(lowerLine, indicator, 'LowerLine', indicator.lowerLine.color, indicator.lowerLine.width, chart);\n            let upperLine = new Series(indicator, 'targetSeries', {}, true);\n            super.setSeriesProperties(upperLine, indicator, 'UpperLine', indicator.upperLine.color, indicator.upperLine.width, chart);\n        }\n    }\n    /**\n     * Defines the predictions using RSI approach\n     * @private\n     */\n    initDataSource(indicator, chart) {\n        let signalCollection = [];\n        let lowerCollection = [];\n        let upperCollection = [];\n        let signalSeries = indicator.targetSeries[0];\n        //prepare data\n        let validData = indicator.points;\n        if (validData.length && validData.length >= indicator.period) {\n            //Find upper band and lower band values\n            if (indicator.showZones) {\n                for (let i = 0; i < validData.length; i++) {\n                    upperCollection.push(this.getDataPoint(validData[i].x, indicator.overBought, validData[i], indicator.targetSeries[1], upperCollection.length));\n                    lowerCollection.push(this.getDataPoint(validData[i].x, indicator.overSold, validData[i], indicator.targetSeries[2], lowerCollection.length));\n                }\n            }\n            //Find signal line value\n            let prevClose = Number(validData[0].close);\n            let gain = 0;\n            let loss = 0;\n            for (let i = 1; i <= indicator.period; i++) {\n                let close = Number(validData[i].close);\n                if (close > prevClose) {\n                    gain += close - prevClose;\n                }\n                else {\n                    loss += prevClose - close;\n                }\n                prevClose = close;\n            }\n            gain = gain / indicator.period;\n            loss = loss / indicator.period;\n            signalCollection.push(this.getDataPoint(validData[indicator.period].x, 100 - (100 / (1 + gain / loss)), validData[indicator.period], signalSeries, signalCollection.length));\n            for (let j = indicator.period + 1; j < validData.length; j++) {\n                let close = Number(validData[j].close);\n                if (close > prevClose) {\n                    gain = (gain * (indicator.period - 1) + (close - prevClose)) / indicator.period;\n                    loss = (loss * (indicator.period - 1)) / indicator.period;\n                }\n                else if (close < prevClose) {\n                    loss = (loss * (indicator.period - 1) + (prevClose - close)) / indicator.period;\n                    gain = (gain * (indicator.period - 1)) / indicator.period;\n                }\n                prevClose = close;\n                signalCollection.push(this.getDataPoint(validData[j].x, 100 - (100 / (1 + gain / loss)), validData[j], signalSeries, signalCollection.length));\n            }\n        }\n        this.setSeriesRange(signalCollection, indicator, indicator.targetSeries[0]);\n        if (indicator.showZones) {\n            this.setSeriesRange(upperCollection, indicator, indicator.targetSeries[1]);\n            this.setSeriesRange(lowerCollection, indicator, indicator.targetSeries[2]);\n        }\n    }\n    /**\n     * To destroy the RSI Indicator.\n     * @return {void}\n     * @private\n     */\n    destroy(chart) {\n        /**\n         * Destroys the RSI Indicator\n         */\n    }\n    /**\n     * Get module name.\n     */\n    getModuleName() {\n        /**\n         * Returns the module name of the indicator.\n         */\n        return 'RsiIndicator';\n    }\n}\n\n/**\n * `StochasticIndicator` module is used to render stochastic indicator.\n */\nclass StochasticIndicator extends TechnicalAnalysis {\n    /**\n     * Defines the collection of series that represents the stochastic indicator\n     * @private\n     */\n    initSeriesCollection(indicator, chart) {\n        super.initSeriesCollection(indicator, chart);\n        let periodLine = new Series(indicator, 'targetSeries', {}, true);\n        this.setSeriesProperties(periodLine, indicator, 'PeriodLine', indicator.periodLine.color, indicator.periodLine.width, chart);\n        if (indicator.showZones) {\n            let upperSeries = new Series(indicator, 'targetSeries', {}, true);\n            this.setSeriesProperties(upperSeries, indicator, 'UpperLine', indicator.upperLine.color, indicator.upperLine.width, chart);\n            let lowerSeries = new Series(indicator, 'targetSeries', {}, true);\n            this.setSeriesProperties(lowerSeries, indicator, 'LowerLine', indicator.lowerLine.color, indicator.lowerLine.width, chart);\n        }\n    }\n    /**\n     * Defines the predictions based on stochastic approach\n     * @private\n     */\n    initDataSource(indicator, chart) {\n        let signalCollection = [];\n        let upperCollection = [];\n        let lowerCollection = [];\n        let periodCollection = [];\n        let source = [];\n        let sourceSeries = indicator.sourceSeries;\n        let validData = indicator.points;\n        if (validData.length && validData.length >= indicator.period) {\n            if (indicator.showZones) {\n                for (let i = 0; i < validData.length; i++) {\n                    upperCollection.push(this.getDataPoint(validData[i].x, indicator.overBought, validData[i], indicator.targetSeries[2], upperCollection.length));\n                    lowerCollection.push(this.getDataPoint(validData[i].x, indicator.overSold, validData[i], indicator.targetSeries[3], lowerCollection.length));\n                }\n            }\n            source = this.calculatePeriod(indicator.period, indicator.kPeriod, validData, indicator.targetSeries[1]);\n            periodCollection = this.smaCalculation(indicator.period, indicator.kPeriod, source, indicator.targetSeries[1]);\n            signalCollection = this.smaCalculation(indicator.period + indicator.kPeriod - 1, indicator.dPeriod, source, indicator.targetSeries[0]);\n        }\n        this.setSeriesRange(signalCollection, indicator, indicator.targetSeries[0]);\n        this.setSeriesRange(periodCollection, indicator, indicator.targetSeries[1]);\n        if (indicator.showZones) {\n            this.setSeriesRange(upperCollection, indicator, indicator.targetSeries[2]);\n            this.setSeriesRange(lowerCollection, indicator, indicator.targetSeries[3]);\n        }\n    }\n    /**\n     * Calculates the SMA Values\n     * @private\n     */\n    smaCalculation(period, kPeriod, data, sourceSeries) {\n        let pointCollection = [];\n        if (data.length >= period + kPeriod) {\n            let count = period + (kPeriod - 1);\n            let temp = [];\n            let values = [];\n            for (let i = 0; i < data.length; i++) {\n                let value = Number(data[i].y);\n                temp.push(value);\n            }\n            let length = temp.length;\n            while (length >= count) {\n                let sum = 0;\n                for (let i = period - 1; i < (period + kPeriod - 1); i++) {\n                    sum = sum + temp[i];\n                }\n                sum = sum / kPeriod;\n                values.push(sum.toFixed(2));\n                temp.splice(0, 1);\n                length = temp.length;\n            }\n            let len = count - 1;\n            for (let i = 0; i < data.length; i++) {\n                if (!(i < len)) {\n                    pointCollection.push(this.getDataPoint(data[i].x, Number(values[i - len]), data[i], sourceSeries, pointCollection.length));\n                    data[i].y = Number((values[i - len]));\n                }\n            }\n        }\n        return pointCollection;\n    }\n    /**\n     * Calculates the period line values.\n     * @private\n     */\n    calculatePeriod(period, kPeriod, data, series) {\n        let lowValues = [];\n        let highValues = [];\n        let closeValues = [];\n        let modifiedSource = [];\n        for (let j = 0; j < data.length; j++) {\n            lowValues[j] = data[j].low;\n            highValues[j] = data[j].high;\n            closeValues[j] = data[j].close;\n        }\n        if (data.length > period) {\n            let mins = [];\n            let maxs = [];\n            for (let i = 0; i < period - 1; ++i) {\n                maxs.push(0);\n                mins.push(0);\n                modifiedSource.push(this.getDataPoint(data[i].x, data[i].close, data[i], series, modifiedSource.length));\n            }\n            for (let i = period - 1; i < data.length; ++i) {\n                let min = Number.MAX_VALUE;\n                let max = Number.MIN_VALUE;\n                for (let j = 0; j < period; ++j) {\n                    min = Math.min(min, lowValues[i - j]);\n                    max = Math.max(max, highValues[i - j]);\n                }\n                maxs.push(max);\n                mins.push(min);\n            }\n            for (let i = period - 1; i < data.length; ++i) {\n                let top = 0;\n                let bottom = 0;\n                top += closeValues[i] - mins[i];\n                bottom += maxs[i] - mins[i];\n                modifiedSource.push(this.getDataPoint(data[i].x, (top / bottom) * 100, data[i], series, modifiedSource.length));\n            }\n        }\n        return modifiedSource;\n    }\n    /**\n     * To destroy the Stocastic Indicator.\n     * @return {void}\n     * @private\n     */\n    destroy(chart) {\n        /**\n         * Destroys the stochastic indicator\n         */\n    }\n    /**\n     * Get module name.\n     */\n    getModuleName() {\n        /**\n         * Returns the module name of the indicator.\n         */\n        return 'StochasticIndicator';\n    }\n}\n\n/**\n * `BollingerBands` module is used to render bollinger band indicator.\n */\nclass BollingerBands extends TechnicalAnalysis {\n    /**\n     * Initializes the series collection to represent bollinger band\n     */\n    initSeriesCollection(indicator, chart) {\n        indicator.targetSeries = [];\n        let rangeArea = new Series(indicator, 'targetSeries', {}, true);\n        rangeArea.type = 'RangeArea';\n        if (indicator.bandColor !== 'transparent' && indicator.bandColor !== 'none') {\n            this.setSeriesProperties(rangeArea, indicator, 'BollingerBand', indicator.bandColor, 0, chart);\n        }\n        let signalLine = new Series(indicator, 'targetSeries', {}, true);\n        this.setSeriesProperties(signalLine, indicator, 'SignalLine', indicator.fill, indicator.width, chart);\n        let upperLine = new Series(indicator, 'targetSeries', {}, true);\n        this.setSeriesProperties(upperLine, indicator, 'UpperLine', indicator.upperLine.color, indicator.upperLine.width, chart);\n        let lowerLine = new Series(indicator, 'targetSeries', {}, true);\n        this.setSeriesProperties(lowerLine, indicator, 'LowerLine', indicator.lowerLine.color, indicator.lowerLine.width, chart);\n    }\n    /**\n     * Defines the predictions using Bollinger Band Approach\n     * @private\n     */\n    initDataSource(indicator, chart) {\n        let enableBand = indicator.bandColor !== 'transparent' && indicator.bandColor !== 'none';\n        let start = enableBand ? 1 : 0;\n        let signalCollection = [];\n        let upperCollection = [];\n        let lowerCollection = [];\n        let bandCollection = [];\n        let upperSeries = indicator.targetSeries[start + 1];\n        let lowerSeries = indicator.targetSeries[start + 2];\n        let signalSeries = indicator.targetSeries[start];\n        let rangeAreaSeries = enableBand ? indicator.targetSeries[0] : null;\n        //prepare data\n        let validData = indicator.points;\n        if (validData.length && validData.length >= indicator.period) {\n            let sum = 0;\n            let deviationSum = 0;\n            let multiplier = indicator.standardDeviation;\n            let limit = validData.length;\n            let length = Math.round(indicator.period);\n            let smaPoints = [];\n            let deviations = [];\n            let bollingerPoints = [];\n            for (let i = 0; i < length; i++) {\n                sum += Number(validData[i].close);\n            }\n            let sma = sum / indicator.period;\n            for (let i = 0; i < limit; i++) {\n                let y = Number(validData[i].close);\n                if (i >= length - 1 && i < limit) {\n                    if (i - indicator.period >= 0) {\n                        let diff = y - Number(validData[i - length].close);\n                        sum = sum + diff;\n                        sma = sum / (indicator.period);\n                        smaPoints[i] = sma;\n                        deviations[i] = Math.pow(y - sma, 2);\n                        deviationSum += deviations[i] - deviations[i - length];\n                    }\n                    else {\n                        smaPoints[i] = sma;\n                        deviations[i] = Math.pow(y - sma, 2);\n                        deviationSum += deviations[i];\n                    }\n                    let range = Math.sqrt(deviationSum / (indicator.period));\n                    let lowerBand = smaPoints[i] - (multiplier * range);\n                    let upperBand = smaPoints[i] + (multiplier * range);\n                    if (i + 1 === length) {\n                        for (let j = 0; j < length - 1; j++) {\n                            bollingerPoints[j] = {\n                                'X': validData[j].x, 'mb': smaPoints[i],\n                                'lb': lowerBand, 'ub': upperBand, visible: true\n                            };\n                        }\n                    }\n                    bollingerPoints[i] = {\n                        'X': validData[i].x, 'mb': smaPoints[i],\n                        'lb': lowerBand, 'ub': upperBand, visible: true\n                    };\n                }\n                else {\n                    if (i < indicator.period - 1) {\n                        smaPoints[i] = sma;\n                        deviations[i] = Math.pow(y - sma, 2);\n                        deviationSum += deviations[i];\n                    }\n                }\n            }\n            let i = -1;\n            let j = -1;\n            for (let k = 0; k < limit; k++) {\n                if (k >= (length - 1)) {\n                    let ub = 'ub';\n                    let lb = 'lb';\n                    let mb = 'mb';\n                    upperCollection.push(this.getDataPoint(validData[k].x, bollingerPoints[k][ub], validData[k], upperSeries, upperCollection.length));\n                    lowerCollection.push(this.getDataPoint(validData[k].x, bollingerPoints[k][lb], validData[k], lowerSeries, lowerCollection.length));\n                    signalCollection.push(this.getDataPoint(validData[k].x, bollingerPoints[k][mb], validData[k], signalSeries, signalCollection.length));\n                    if (enableBand) {\n                        bandCollection.push(this.getRangePoint(validData[k].x, upperCollection[++i].y, lowerCollection[++j].y, validData[k], rangeAreaSeries, bandCollection.length));\n                    }\n                }\n            }\n        }\n        if (enableBand) {\n            this.setSeriesRange(bandCollection, indicator, indicator.targetSeries[0]);\n        }\n        this.setSeriesRange(signalCollection, indicator, indicator.targetSeries[start]);\n        this.setSeriesRange(upperCollection, indicator, indicator.targetSeries[start + 1]);\n        this.setSeriesRange(lowerCollection, indicator, indicator.targetSeries[start + 2]);\n    }\n    /**\n     * To destroy the Bollinger Band.\n     * @return {void}\n     * @private\n     */\n    destroy(chart) {\n        /**\n         * Destroys the bollinger band\n         */\n    }\n    /**\n     * Get module name.\n     */\n    getModuleName() {\n        /**\n         * Returns the module name of the series\n         */\n        return 'BollingerBandsIndicator';\n    }\n}\n\n/**\n * `MacdIndicator` module is used to render MACD indicator.\n */\nclass MacdIndicator extends TechnicalAnalysis {\n    /**\n     * Defines the collection of series to represent the MACD indicator\n     * @private\n     */\n    initSeriesCollection(indicator, chart) {\n        super.initSeriesCollection(indicator, chart);\n        if (indicator.macdType === 'Line' || indicator.macdType === 'Both') {\n            let macdSeries = new Series(indicator, 'targetSeries', {}, true);\n            this.setSeriesProperties(macdSeries, indicator, 'MacdLine', indicator.macdLine.color, indicator.macdLine.width, chart);\n        }\n        if (indicator.macdType === 'Histogram' || indicator.macdType === 'Both') {\n            let histogramSeries = new Series(indicator, 'targetSeries', {}, true);\n            histogramSeries.type = 'Column';\n            this.setSeriesProperties(histogramSeries, indicator, 'Histogram', indicator.macdPositiveColor, indicator.width, chart);\n        }\n    }\n    /**\n     * Defines the predictions using MACD approach\n     * @private\n     */\n    initDataSource(indicator, chart) {\n        let signalCollection = [];\n        let fastPeriod = indicator.fastPeriod;\n        let slowPeriod = indicator.slowPeriod;\n        let trigger = indicator.period;\n        let length = fastPeriod + trigger;\n        let macdCollection = [];\n        let histogramCollection = [];\n        let validData = indicator.points;\n        let signalSeries = indicator.targetSeries[0];\n        let histogramSeries;\n        let macdLineSeries;\n        if (indicator.macdType === 'Histogram') {\n            histogramSeries = indicator.targetSeries[1];\n        }\n        else {\n            macdLineSeries = indicator.targetSeries[1];\n            if (indicator.macdType === 'Both') {\n                histogramSeries = indicator.targetSeries[2];\n            }\n        }\n        if (validData && length < validData.length && slowPeriod <= fastPeriod &&\n            slowPeriod > 0 && (length - 2) >= 0) {\n            let shortEMA = this.calculateEMAValues(slowPeriod, validData, 'close');\n            let longEMA = this.calculateEMAValues(fastPeriod, validData, 'close');\n            let macdValues = this.getMACDVales(indicator, shortEMA, longEMA);\n            macdCollection = this.getMACDPoints(indicator, macdValues, validData, macdLineSeries || signalSeries);\n            let signalEMA = this.calculateEMAValues(trigger, macdCollection, 'y');\n            signalCollection = this.getSignalPoints(indicator, signalEMA, validData, signalSeries);\n            if (histogramSeries) {\n                histogramCollection = this.getHistogramPoints(indicator, macdValues, signalEMA, validData, histogramSeries);\n            }\n        }\n        this.setSeriesRange(signalCollection, indicator, indicator.targetSeries[0]);\n        if (histogramSeries) {\n            this.setSeriesRange(histogramCollection, indicator, histogramSeries);\n        }\n        if (macdLineSeries) {\n            this.setSeriesRange(macdCollection, indicator, macdLineSeries);\n        }\n    }\n    /**\n     * Calculates the EMA values for the given period\n     */\n    calculateEMAValues(period, validData, field) {\n        let sum = 0;\n        let initialEMA = 0;\n        let emaValues = [];\n        let emaPercent = (2 / (period + 1));\n        for (let i = 0; i < period; i++) {\n            sum += Number(validData[i][field]);\n        }\n        initialEMA = (sum / period);\n        emaValues.push(initialEMA);\n        let emaAvg = initialEMA;\n        for (let j = period; j < validData.length; j++) {\n            emaAvg = (Number(validData[j][field]) - emaAvg) * emaPercent + emaAvg;\n            emaValues.push(emaAvg);\n        }\n        return emaValues;\n    }\n    /**\n     * Defines the MACD Points\n     */\n    getMACDPoints(indicator, macdPoints, validData, series) {\n        let macdCollection = [];\n        let dataMACDIndex = indicator.fastPeriod - 1;\n        let macdIndex = 0;\n        while (dataMACDIndex < validData.length) {\n            macdCollection.push(this.getDataPoint(validData[dataMACDIndex].x, macdPoints[macdIndex], validData[dataMACDIndex], series, macdCollection.length));\n            dataMACDIndex++;\n            macdIndex++;\n        }\n        return macdCollection;\n    }\n    /**\n     * Calculates the signal points\n     */\n    getSignalPoints(indicator, signalEma, validData, series) {\n        let dataSignalIndex = indicator.fastPeriod + indicator.period - 2;\n        let signalIndex = 0;\n        let signalCollection = [];\n        while (dataSignalIndex < validData.length) {\n            signalCollection.push(this.getDataPoint(validData[dataSignalIndex].x, signalEma[signalIndex], validData[dataSignalIndex], series, signalCollection.length));\n            dataSignalIndex++;\n            signalIndex++;\n        }\n        return signalCollection;\n    }\n    /**\n     * Calculates the MACD values\n     */\n    getMACDVales(indicator, shortEma, longEma) {\n        let macdPoints = [];\n        let diff = indicator.fastPeriod - indicator.slowPeriod;\n        for (let i = 0; i < longEma.length; i++) {\n            macdPoints.push((shortEma[i + diff] - longEma[i]));\n        }\n        return macdPoints;\n    }\n    /**\n     * Calculates the Histogram Points\n     */\n    getHistogramPoints(indicator, macdPoints, signalEma, validData, series) {\n        let dataHistogramIndex = indicator.fastPeriod + indicator.period - 2;\n        let histogramIndex = 0;\n        let histogramCollection = [];\n        while (dataHistogramIndex < validData.length) {\n            histogramCollection.push(this.getDataPoint(validData[dataHistogramIndex].x, macdPoints[histogramIndex + (indicator.period - 1)] - signalEma[histogramIndex], validData[dataHistogramIndex], series, histogramCollection.length, indicator));\n            dataHistogramIndex++;\n            histogramIndex++;\n        }\n        return histogramCollection;\n    }\n    /**\n     * To destroy the MACD Indicator.\n     * @return {void}\n     * @private\n     */\n    destroy(chart) {\n        /**\n         * Destroys the MACD indicator\n         */\n    }\n    /**\n     * Get module name.\n     */\n    getModuleName() {\n        /**\n         * Returns the module name of the series\n         */\n        return 'MacdIndicator';\n    }\n}\n\n/**\n * `Trendline` module is used to render 6 types of trendlines in chart.\n */\nclass Trendlines {\n    /**\n     * Defines the collection of series, that are used to represent a trendline\n     * @private\n     */\n    initSeriesCollection(trendline, chart) {\n        let trendLineSeries = new Series(trendline, 'targetSeries', {}, true);\n        if (trendline.type === 'Linear' || trendline.type === 'MovingAverage') {\n            trendLineSeries.type = 'Line';\n        }\n        else {\n            trendLineSeries.type = 'Spline';\n        }\n        this.setSeriesProperties(trendLineSeries, trendline, trendline.type, trendline.fill, trendline.width, chart);\n    }\n    /**\n     * Initializes the properties of the trendline series\n     */\n    setSeriesProperties(series, trendline, name, fill, width, chart) {\n        series.name = trendline.name;\n        series.xName = 'x';\n        series.yName = 'y';\n        series.fill = fill || 'blue';\n        series.width = width;\n        series.clipRectElement = trendline.clipRectElement;\n        series.points = [];\n        series.enableTooltip = trendline.enableTooltip;\n        series.index = trendline.index;\n        series.sourceIndex = trendline.sourceIndex;\n        series.interior = series.fill;\n        series.animation = trendline.animation;\n        series.legendShape = 'HorizontalLine';\n        series.marker = trendline.marker;\n        series.category = 'TrendLine';\n        series.chart = chart;\n        series.xMin = Infinity;\n        series.xMax = -Infinity;\n        series.yMin = Infinity;\n        series.yMax = -Infinity;\n        series.xData = [];\n        series.yData = [];\n        trendline.targetSeries = series;\n    }\n    /**\n     * Creates the elements of a trendline\n     */\n    createTrendLineElements(chart, trendline, index, element, clipRectElement) {\n        trendline.trendLineElement = element;\n        trendline.targetSeries.clipRectElement = clipRectElement;\n        trendline.targetSeries.seriesElement = element;\n        chart.trendLineElements.appendChild(trendline.trendLineElement);\n    }\n    /**\n     * Defines the data point of trendline\n     */\n    getDataPoint(x, y, sourcePoint, series, index) {\n        let trendPoint = new Points();\n        trendPoint.x = x;\n        trendPoint.y = y;\n        trendPoint.xValue = Number(x);\n        trendPoint.color = series.fill;\n        trendPoint.index = index;\n        trendPoint.yValue = Number(y);\n        trendPoint.visible = true;\n        series.xMin = Math.min(series.xMin, trendPoint.xValue);\n        series.yMin = Math.min(series.yMin, trendPoint.yValue);\n        series.xMax = Math.max(series.xMax, trendPoint.xValue);\n        series.yMax = Math.max(series.yMax, trendPoint.yValue);\n        series.xData.push(trendPoint.xValue);\n        return trendPoint;\n    }\n    /**\n     * Finds the slope and intercept of trendline\n     */\n    findSlopeIntercept(xValues, yValues, trendline, points) {\n        let xAvg = 0;\n        let yAvg = 0;\n        let xyAvg = 0;\n        let xxAvg = 0;\n        let yyAvg = 0;\n        let index = 0;\n        let slope = 0;\n        let intercept = 0;\n        while (index < points.length) {\n            xAvg += xValues[index];\n            yAvg += yValues[index];\n            xyAvg += xValues[index] * yValues[index];\n            xxAvg += xValues[index] * xValues[index];\n            yyAvg += yValues[index] * yValues[index];\n            index++;\n        }\n        let type = trendline.type;\n        if (trendline.intercept && (type === 'Linear' || type === 'Exponential')) {\n            intercept = trendline.intercept;\n            switch (type) {\n                case 'Linear':\n                    slope = ((xyAvg) - (trendline.intercept * xAvg)) / xxAvg;\n                    break;\n                case 'Exponential':\n                    slope = ((xyAvg) - (Math.log(Math.abs(trendline.intercept)) * xAvg)) / xxAvg;\n                    break;\n            }\n        }\n        else {\n            slope = ((points.length * xyAvg) - (xAvg * yAvg)) / ((points.length * xxAvg) - (xAvg * xAvg));\n            if (type === 'Exponential' || type === 'Power') {\n                intercept = Math.exp((yAvg - (slope * xAvg)) / points.length);\n            }\n            else {\n                intercept = (yAvg - (slope * xAvg)) / points.length;\n            }\n        }\n        return { slope: slope, intercept: intercept };\n    }\n    /**\n     * Defines the points to draw the trendlines\n     */\n    initDataSource(trendline, chart) {\n        let points = trendline.points;\n        if (points && points.length) {\n            //prepare data\n            let trendlineSeries = trendline.targetSeries;\n            switch (trendline.type) {\n                case 'Linear':\n                    this.setLinearRange(points, trendline, trendlineSeries);\n                    break;\n                case 'Exponential':\n                    this.setExponentialRange(points, trendline, trendlineSeries);\n                    break;\n                case 'MovingAverage':\n                    this.setMovingAverageRange(points, trendline, trendlineSeries);\n                    break;\n                case 'Polynomial':\n                    this.setPolynomialRange(points, trendline, trendlineSeries);\n                    break;\n                case 'Power':\n                    this.setPowerRange(points, trendline, trendlineSeries);\n                    break;\n                case 'Logarithmic':\n                    this.setLogarithmicRange(points, trendline, trendlineSeries);\n                    break;\n            }\n            if (trendline.type !== 'Linear' && trendline.type !== 'MovingAverage') {\n                trendlineSeries.chart.splineSeriesModule.findSplinePoint(trendlineSeries);\n            }\n        }\n    }\n    /**\n     * Calculation of exponential points\n     */\n    setExponentialRange(points, trendline, series) {\n        let xValue = [];\n        let yValue = [];\n        let index = 0;\n        let slopeIntercept;\n        while (index < points.length) {\n            let point = points[index];\n            xValue.push(point.xValue);\n            yValue.push(Math.log(point.yValue));\n            index++;\n        }\n        slopeIntercept = this.findSlopeIntercept(xValue, yValue, trendline, points);\n        series.points = this.getExponentialPoints(trendline, points, xValue, yValue, series, slopeIntercept);\n    }\n    /**\n     * Calculation of logarithmic points\n     */\n    setLogarithmicRange(points, trendline, series) {\n        let xLogValue = [];\n        let yLogValue = [];\n        let xPointsLgr = [];\n        let slopeIntercept;\n        let index = 0;\n        while (index < points.length) {\n            let point = points[index];\n            xPointsLgr.push(point.xValue);\n            xLogValue.push(Math.log(point.xValue));\n            yLogValue.push(point.yValue);\n            index++;\n        }\n        slopeIntercept = this.findSlopeIntercept(xLogValue, yLogValue, trendline, points);\n        series.points = this.getLogarithmicPoints(trendline, points, xPointsLgr, yLogValue, series, slopeIntercept);\n    }\n    /**\n     * Calculation of polynomial points\n     */\n    setPolynomialRange(points, trendline, series) {\n        let xPolyValues = [];\n        let yPolyValues = [];\n        let index = 0;\n        while (index < points.length) {\n            let point = points[index];\n            xPolyValues.push(point.xValue);\n            yPolyValues.push(point.yValue);\n            index++;\n        }\n        series.points = this.getPolynomialPoints(trendline, points, xPolyValues, yPolyValues, series);\n    }\n    /**\n     * Calculation of power points\n     */\n    setPowerRange(points, trendline, series) {\n        let xValues = [];\n        let yValues = [];\n        let powerPoints = [];\n        let slopeIntercept;\n        let index = 0;\n        while (index < points.length) {\n            let point = points[index];\n            powerPoints.push(point.xValue);\n            xValues.push(Math.log(point.xValue));\n            yValues.push(Math.log(point.yValue));\n            index++;\n        }\n        slopeIntercept = this.findSlopeIntercept(xValues, yValues, trendline, points);\n        series.points = this.getPowerPoints(trendline, points, powerPoints, yValues, series, slopeIntercept);\n    }\n    /**\n     * Calculation of linear points\n     */\n    setLinearRange(points, trendline, series) {\n        let xValues = [];\n        let yValues = [];\n        let slopeIntercept;\n        let index = 0;\n        while (index < points.length) {\n            let point = points[index];\n            xValues.push(point.xValue);\n            yValues.push(point.yValue);\n            index++;\n        }\n        slopeIntercept = this.findSlopeIntercept(xValues, yValues, trendline, points);\n        series.points = this.getLinearPoints(trendline, points, xValues, yValues, series, slopeIntercept);\n    }\n    /**\n     * Calculation of moving average points\n     */\n    setMovingAverageRange(points, trendline, series) {\n        let xValues = [];\n        let yValues = [];\n        let xAvgValues = [];\n        let index = 0;\n        while (index < points.length) {\n            let point = points[index];\n            xAvgValues.push(point.xValue);\n            xValues.push(index + 1);\n            yValues.push(point.yValue);\n            index++;\n        }\n        series.points = this.getMovingAveragePoints(trendline, points, xAvgValues, yValues, series);\n    }\n    /**\n     * Calculation of logarithmic points\n     */\n    getLogarithmicPoints(trendline, points, xValues, yValues, series, slopeInterceptLog) {\n        let midPoint = Math.round((points.length / 2));\n        let pts = [];\n        let x1Log = xValues[0] - trendline.backwardForecast;\n        let y1Log = slopeInterceptLog.intercept + (slopeInterceptLog.slope * Math.log(x1Log));\n        let x2Log = xValues[midPoint - 1];\n        let y2Log = slopeInterceptLog.intercept + (slopeInterceptLog.slope * Math.log(x2Log));\n        let x3Log = xValues[xValues.length - 1] + trendline.forwardForecast;\n        let y3Log = slopeInterceptLog.intercept + (slopeInterceptLog.slope * Math.log(x3Log));\n        pts.push(this.getDataPoint(x1Log, y1Log, points[0], series, pts.length));\n        pts.push(this.getDataPoint(x2Log, y2Log, points[midPoint - 1], series, pts.length));\n        pts.push(this.getDataPoint(x3Log, y3Log, points[points.length - 1], series, pts.length));\n        return pts;\n    }\n    /**\n     * Defines the points based on data point\n     */\n    getPowerPoints(trendline, points, xValues, yValues, series, slopeInterceptPower) {\n        let midPoint = Math.round((points.length / 2));\n        let pts = [];\n        let x1 = xValues[0] - trendline.backwardForecast;\n        x1 = x1 > -1 ? x1 : 0;\n        let y1 = slopeInterceptPower.intercept * Math.pow(x1, slopeInterceptPower.slope);\n        let x2 = xValues[midPoint - 1];\n        let y2 = slopeInterceptPower.intercept * Math.pow(x2, slopeInterceptPower.slope);\n        let x3 = xValues[xValues.length - 1] + trendline.forwardForecast;\n        let y3 = slopeInterceptPower.intercept * Math.pow(x3, slopeInterceptPower.slope);\n        pts.push(this.getDataPoint(x1, y1, points[0], series, pts.length));\n        pts.push(this.getDataPoint(x2, y2, points[midPoint - 1], series, pts.length));\n        pts.push(this.getDataPoint(x3, y3, points[points.length - 1], series, pts.length));\n        return pts;\n    }\n    /**\n     * Get the polynomial points based on polynomial slopes\n     */\n    getPolynomialPoints(trendline, points, xValues, yValues, series) {\n        let midPoint = Math.round((points.length / 2));\n        let pts = [];\n        let polynomialOrder = points.length <= trendline.polynomialOrder ? points.length : trendline.polynomialOrder;\n        polynomialOrder = Math.max(2, polynomialOrder);\n        polynomialOrder = Math.min(6, polynomialOrder);\n        trendline.polynomialOrder = polynomialOrder;\n        trendline.polynomialSlopes = [];\n        trendline.polynomialSlopes.length = trendline.polynomialOrder + 1;\n        let index = 0;\n        while (index < xValues.length) {\n            let xVal = xValues[index];\n            let yVal = yValues[index];\n            let subIndex = 0;\n            while (subIndex <= trendline.polynomialOrder) {\n                if (!trendline.polynomialSlopes[subIndex]) {\n                    trendline.polynomialSlopes[subIndex] = 0;\n                }\n                trendline.polynomialSlopes[subIndex] += Math.pow(xVal, subIndex) * yVal;\n                ++subIndex;\n            }\n            index++;\n        }\n        let numArray = [];\n        numArray.length = 1 + 2 * trendline.polynomialOrder;\n        let matrix = [];\n        matrix.length = trendline.polynomialOrder + 1;\n        let newIndex = 0;\n        while (newIndex < (trendline.polynomialOrder + 1)) {\n            matrix[newIndex] = [];\n            matrix[newIndex].length = 3;\n            newIndex++;\n        }\n        let nIndex = 0;\n        while (nIndex < xValues.length) {\n            let d = xValues[nIndex];\n            let num2 = 1.0;\n            let nIndex2 = 0;\n            while (nIndex2 < numArray.length) {\n                if (!numArray[nIndex2]) {\n                    numArray[nIndex2] = 0;\n                }\n                numArray[nIndex2] += num2;\n                num2 *= d;\n                ++nIndex2;\n            }\n            ++nIndex;\n        }\n        let nnIndex = 0;\n        while (nnIndex <= trendline.polynomialOrder) {\n            let nnIndex2 = 0;\n            while (nnIndex2 <= trendline.polynomialOrder) {\n                matrix[nnIndex][nnIndex2] = numArray[nnIndex + nnIndex2];\n                ++nnIndex2;\n            }\n            ++nnIndex;\n        }\n        if (!this.gaussJordanElimination(matrix, trendline.polynomialSlopes)) {\n            trendline.polynomialSlopes = null;\n        }\n        pts = this.getPoints(trendline, points, xValues, yValues, series);\n        return pts;\n    }\n    /**\n     * Defines the moving average points\n     */\n    getMovingAveragePoints(trendline, points, xValues, yValues, series) {\n        let pts = [];\n        let period = trendline.period >= points.length ? points.length - 1 : trendline.period;\n        period = Math.max(2, period);\n        let index = 0;\n        let y;\n        let x;\n        let count;\n        let nullCount;\n        while (index < points.length - 1) {\n            y = count = nullCount = 0;\n            for (let j = index; count < period; j++) {\n                count++;\n                if (!yValues[j]) {\n                    nullCount++;\n                }\n                y += yValues[j];\n            }\n            y = period - nullCount <= 0 ? null : y / (period - nullCount);\n            if (y && !isNaN(y)) {\n                x = xValues[period - 1 + index];\n                pts.push(this.getDataPoint(x, y, points[period - 1 + index], series, pts.length));\n            }\n            index++;\n        }\n        return pts;\n    }\n    /**\n     * Defines the linear points\n     */\n    getLinearPoints(trendline, points, xValues, yValues, series, slopeInterceptLinear) {\n        let pts = [];\n        let x1Linear = xValues[0] - trendline.backwardForecast;\n        let y1Linear = slopeInterceptLinear.slope * x1Linear + slopeInterceptLinear.intercept;\n        let x2Linear = xValues[xValues.length - 1] + trendline.forwardForecast;\n        let y2Linear = slopeInterceptLinear.slope * x2Linear + slopeInterceptLinear.intercept;\n        pts.push(this.getDataPoint(x1Linear, y1Linear, points[0], series, pts.length));\n        pts.push(this.getDataPoint(x2Linear, y2Linear, points[points.length - 1], series, pts.length));\n        return pts;\n    }\n    /**\n     * Defines the exponential points\n     */\n    getExponentialPoints(trendline, points, xValues, yValues, series, slopeInterceptExp) {\n        let midPoint = Math.round((points.length / 2));\n        let ptsExp = [];\n        let x1 = xValues[0] - trendline.backwardForecast;\n        let y1 = slopeInterceptExp.intercept * Math.exp(slopeInterceptExp.slope * x1);\n        let x2 = xValues[midPoint - 1];\n        let y2 = slopeInterceptExp.intercept * Math.exp(slopeInterceptExp.slope * x2);\n        let x3 = xValues[xValues.length - 1] + trendline.forwardForecast;\n        let y3 = slopeInterceptExp.intercept * Math.exp(slopeInterceptExp.slope * x3);\n        ptsExp.push(this.getDataPoint(x1, y1, points[0], series, ptsExp.length));\n        ptsExp.push(this.getDataPoint(x2, y2, points[midPoint - 1], series, ptsExp.length));\n        ptsExp.push(this.getDataPoint(x3, y3, points[points.length - 1], series, ptsExp.length));\n        return ptsExp;\n    }\n    /**\n     * Defines the points based on data point\n     */\n    getPoints(trendline, points, xValues, yValues, series) {\n        let midPoint = Math.round((points.length / 2));\n        let polynomialSlopes = trendline.polynomialSlopes;\n        let pts = [];\n        let x1 = 1;\n        let index = 1;\n        let xValue;\n        let yValue;\n        while (index <= polynomialSlopes.length) {\n            if (index === 1) {\n                xValue = xValues[0] - trendline.backwardForecast;\n                yValue = this.getPolynomialYValue(polynomialSlopes, xValue);\n                pts.push(this.getDataPoint(xValue, yValue, points[0], series, pts.length));\n            }\n            else if (index === polynomialSlopes.length) {\n                xValue = xValues[points.length - 1] + trendline.forwardForecast;\n                yValue = this.getPolynomialYValue(polynomialSlopes, xValue);\n                pts.push(this.getDataPoint(xValue, yValue, points[points.length - 1], series, pts.length));\n            }\n            else {\n                x1 += (points.length + trendline.forwardForecast) / polynomialSlopes.length;\n                xValue = xValues[parseInt(x1.toString(), 10) - 1];\n                yValue = this.getPolynomialYValue(polynomialSlopes, xValue);\n                pts.push(this.getDataPoint(xValue, yValue, points[parseInt(x1.toString(), 10) - 1], series, pts.length));\n            }\n            index++;\n        }\n        return pts;\n    }\n    /**\n     * Defines the polynomial value of y\n     */\n    getPolynomialYValue(slopes, x) {\n        let sum$$1 = 0;\n        let index = 0;\n        while (index < slopes.length) {\n            sum$$1 += slopes[index] * Math.pow(x, index);\n            index++;\n        }\n        return sum$$1;\n    }\n    /**\n     * Defines the gauss jordan elimination\n     */\n    gaussJordanElimination(matrix, polynomialSlopes) {\n        let length = matrix.length;\n        let numArray1 = [];\n        let numArray2 = [];\n        let numArray3 = [];\n        numArray1.length = length;\n        numArray2.length = length;\n        numArray3.length = length;\n        let index = 0;\n        while (index < length) {\n            numArray3[index] = 0;\n            ++index;\n        }\n        let index1 = 0;\n        while (index1 < length) {\n            let num1 = 0;\n            let index2 = 0;\n            let index3 = 0;\n            let index4 = 0;\n            while (index4 < length) {\n                if (numArray3[index4] !== 1) {\n                    let index5 = 0;\n                    while (index5 < length) {\n                        if (numArray3[index5] === 0 && Math.abs(matrix[index4][index5]) >= num1) {\n                            num1 = Math.abs(matrix[index4][index5]);\n                            index2 = index4;\n                            index3 = index5;\n                        }\n                        ++index5;\n                    }\n                }\n                ++index4;\n            }\n            ++numArray3[index3];\n            if (index2 !== index3) {\n                let index4 = 0;\n                while (index4 < length) {\n                    let num2 = matrix[index2][index4];\n                    matrix[index2][index4] = matrix[index3][index4];\n                    matrix[index3][index4] = num2;\n                    ++index4;\n                }\n                let num3 = polynomialSlopes[index2];\n                polynomialSlopes[index2] = polynomialSlopes[index3];\n                polynomialSlopes[index3] = num3;\n            }\n            numArray2[index1] = index2;\n            numArray1[index1] = index3;\n            if (matrix[index3][index3] === 0.0) {\n                return false;\n            }\n            let num4 = 1.0 / matrix[index3][index3];\n            matrix[index3][index3] = 1.0;\n            let iindex4 = 0;\n            while (iindex4 < length) {\n                matrix[index3][iindex4] *= num4;\n                ++iindex4;\n            }\n            polynomialSlopes[index3] *= num4;\n            let iandex4 = 0;\n            while (iandex4 < length) {\n                if (iandex4 !== index3) {\n                    let num2 = matrix[iandex4][index3];\n                    matrix[iandex4][index3] = 0.0;\n                    let index5 = 0;\n                    while (index5 < length) {\n                        matrix[iandex4][index5] -= matrix[index3][index5] * num2;\n                        ++index5;\n                    }\n                    polynomialSlopes[iandex4] -= polynomialSlopes[index3] * num2;\n                }\n                ++iandex4;\n            }\n            ++index1;\n        }\n        let iindex1 = length - 1;\n        while (iindex1 >= 0) {\n            if (numArray2[iindex1] !== numArray1[iindex1]) {\n                let iindex2 = 0;\n                while (iindex2 < length) {\n                    let num = matrix[iindex2][numArray2[iindex1]];\n                    matrix[iindex2][numArray2[iindex1]] = matrix[iindex2][numArray1[iindex1]];\n                    matrix[iindex2][numArray1[iindex1]] = num;\n                    ++iindex2;\n                }\n            }\n            --iindex1;\n        }\n        return true;\n    }\n    /**\n     * Defines the trendline elements\n     */\n    getTrendLineElements(series, chart) {\n        findClipRect(series);\n        let clipRect = series.clipRect;\n        let clipRectElement = chart.renderer.drawClipPath(new RectOption(chart.element.id + '_ChartTrendlineClipRect_' + series.index, 'transparent', { width: 1, color: 'Gray' }, 1, {\n            x: 0, y: 0, width: clipRect.width,\n            height: clipRect.height,\n        }));\n        let element;\n        element = chart.renderer.createGroup({\n            'id': chart.element.id + 'TrendlineSeriesGroup' + series.index,\n            'transform': 'translate(' + clipRect.x + ',' + clipRect.y + ')',\n            'clip-path': 'url(#' + chart.element.id + '_ChartTrendlineClipRect_' + series.index + ')'\n        });\n        //defines the clip rect element\n        element.appendChild(clipRectElement);\n        for (let trendline of series.trendlines) {\n            this.createTrendLineElements(chart, trendline, trendline.index, element, clipRectElement);\n        }\n    }\n    /**\n     * To destroy the trendline\n     */\n    destroy(chart) {\n        /**\n         * Destroys the Linear Trendline\n         */\n    }\n    /**\n     * Get module name\n     */\n    getModuleName() {\n        /**\n         * Returns the module name of the series\n         */\n        return 'TrendLine';\n    }\n}\n\n/**\n * `Crosshair` module is used to render the crosshair for chart.\n */\nclass Crosshair {\n    /**\n     * Constructor for crosshair module.\n     * @private\n     */\n    constructor(chart) {\n        this.arrowLocation = new ChartLocation(0, 0);\n        this.rx = 2;\n        this.ry = 2;\n        this.chart = chart;\n        this.elementID = this.chart.element.id;\n        this.addEventListener();\n    }\n    /**\n     * @hidden\n     */\n    addEventListener() {\n        if (this.chart.isDestroyed) {\n            return;\n        }\n        let cancelEvent = Browser.isPointer ? 'pointerleave' : 'mouseleave';\n        this.chart.on(Browser.touchMoveEvent, this.mouseMoveHandler, this);\n        this.chart.on(Browser.touchEndEvent, this.mouseUpHandler, this);\n        this.chart.on(cancelEvent, this.mouseLeaveHandler, this);\n        this.chart.on('tapHold', this.longPress, this);\n    }\n    mouseUpHandler() {\n        if (this.chart.startMove) {\n            this.removeCrosshair(2000);\n        }\n    }\n    mouseLeaveHandler() {\n        this.removeCrosshair(1000);\n    }\n    mouseMoveHandler(event) {\n        let chart = this.chart;\n        if (event.type === 'touchmove' && (Browser.isIos || Browser.isIos7) && chart.startMove && event.preventDefault) {\n            event.preventDefault();\n        }\n        // Tooltip for chart series.\n        if (!chart.disableTrackTooltip) {\n            if (withInBounds(chart.mouseX, chart.mouseY, chart.chartAxisLayoutPanel.seriesClipRect)) {\n                if (chart.startMove || !chart.isTouch) {\n                    this.crosshair();\n                }\n            }\n            else {\n                this.removeCrosshair(1000);\n            }\n        }\n    }\n    /**\n     * Handles the long press on chart.\n     * @return {boolean}\n     * @private\n     */\n    longPress() {\n        let chart = this.chart;\n        if (withInBounds(chart.mouseX, chart.mouseY, chart.chartAxisLayoutPanel.seriesClipRect)) {\n            this.crosshair();\n        }\n        return false;\n    }\n    /**\n     * Renders the crosshair.\n     * @return {void}\n     */\n    crosshair() {\n        let chart = this.chart;\n        let horizontalCross = '';\n        let verticalCross = '';\n        let options;\n        let crosshair = chart.crosshair;\n        let chartRect = chart.chartAxisLayoutPanel.seriesClipRect;\n        let crossGroup = document.getElementById(this.elementID + '_UserInteraction');\n        this.stopAnimation();\n        if (chart.tooltip.enable && !withInBounds(chart.tooltipModule.valueX, chart.tooltipModule.valueY, chartRect)) {\n            return null;\n        }\n        this.valueX = chart.tooltip.enable ? chart.tooltipModule.valueX : chart.mouseX;\n        this.valueY = chart.tooltip.enable ? chart.tooltipModule.valueY : chart.mouseY;\n        crossGroup.setAttribute('opacity', '1');\n        if (crosshair.lineType === 'Both' || crosshair.lineType === 'Horizontal') {\n            horizontalCross += 'M ' + chartRect.x + ' ' + this.valueY +\n                ' L ' + (chartRect.x + chartRect.width) + ' ' + this.valueY;\n        }\n        if (crosshair.lineType === 'Both' || crosshair.lineType === 'Vertical') {\n            verticalCross += 'M ' + this.valueX + ' ' + chartRect.y +\n                ' L ' + this.valueX + ' ' + (chartRect.y + chartRect.height);\n        }\n        if (crossGroup.childNodes.length === 0) {\n            let axisTooltipGroup = chart.renderer.createGroup({ 'id': this.elementID + '_crosshair_axis' });\n            options = new PathOption(this.elementID + '_HorizontalLine', 'none', crosshair.line.width, crosshair.line.color || chart.themeStyle.crosshairLine, 1, null, horizontalCross);\n            this.renderCrosshairLine(options, crossGroup);\n            options.d = verticalCross;\n            options.id = this.elementID + '_VerticalLine';\n            this.renderCrosshairLine(options, crossGroup);\n            crossGroup.appendChild(axisTooltipGroup);\n            this.renderAxisTooltip(chart, chartRect, crossGroup.lastChild);\n        }\n        else {\n            document.getElementById(this.elementID + '_HorizontalLine').setAttribute('d', horizontalCross);\n            document.getElementById(this.elementID + '_VerticalLine').setAttribute('d', verticalCross);\n            this.renderAxisTooltip(chart, chartRect, crossGroup.lastChild);\n        }\n    }\n    renderCrosshairLine(options, crossGroup) {\n        let htmlObject = this.chart.renderer.drawPath(options);\n        crossGroup.appendChild(htmlObject);\n    }\n    renderAxisTooltip(chart, chartRect, axisGroup) {\n        let axis;\n        let text;\n        let rect;\n        let pathElement;\n        let textElem;\n        let options;\n        let padding = 5;\n        let direction;\n        let axisRect;\n        for (let k = 0, length = chart.axisCollections.length; k < length; k++) {\n            axis = chart.axisCollections[k];\n            axisRect = !axis.placeNextToAxisLine ? axis.rect : axis.updatedRect;\n            if (axis.crosshairTooltip.enable) {\n                if ((this.valueX <= (axisRect.x + axisRect.width) && axisRect.x <= this.valueX) ||\n                    (this.valueY <= (axisRect.y + axisRect.height) && axisRect.y <= this.valueY)) {\n                    pathElement = document.getElementById(this.elementID + '_axis_tooltip_' + k);\n                    textElem = document.getElementById(this.elementID + '_axis_tooltip_text_' + k);\n                    text = this.getAxisText(axis);\n                    if (!text) {\n                        continue;\n                    }\n                    rect = this.tooltipLocation(text, axis, chartRect, axisRect);\n                    if (pathElement === null) {\n                        pathElement = chart.renderer.drawPath({\n                            'id': this.elementID + '_axis_tooltip_' + k,\n                            'fill': axis.crosshairTooltip.fill || chart.themeStyle.crosshairFill\n                        });\n                        axisGroup.appendChild(pathElement);\n                        options = new TextOption(this.elementID + '_axis_tooltip_text_' + k, 0, 0, 'start', text);\n                        textElem = textElement(options, axis.crosshairTooltip.textStyle, axis.crosshairTooltip.textStyle.color || chart.themeStyle.crosshairLabel, axisGroup);\n                    }\n                    direction = findDirection(this.rx, this.ry, rect, this.arrowLocation, 10, this.isTop, this.isBottom, this.isLeft, this.valueX, this.valueY);\n                    pathElement.setAttribute('d', direction);\n                    textElem.textContent = text;\n                    textElem.setAttribute('x', (rect.x + padding).toString());\n                    textElem.setAttribute('y', (rect.y + padding + 3 * this.elementSize.height / 4).toString());\n                }\n                else {\n                    removeElement(this.elementID + '_axis_tooltip_' + k);\n                    removeElement(this.elementID + '_axis_tooltip_text_' + k);\n                }\n            }\n        }\n    }\n    getAxisText(axis) {\n        let value;\n        this.isBottom = false;\n        this.isTop = false;\n        this.isLeft = false;\n        this.isRight = false;\n        let labelValue = (axis.valueType === 'Category' && axis.labelPlacement === 'BetweenTicks')\n            ? 0.5 : 0;\n        if (axis.orientation === 'Horizontal') {\n            value = getValueXByPoint(Math.abs(this.valueX - axis.rect.x), axis.rect.width, axis) + labelValue;\n            this.isBottom = !axis.opposedPosition;\n            this.isTop = axis.opposedPosition;\n        }\n        else {\n            value = getValueYByPoint(Math.abs(this.valueY - axis.rect.y), axis.rect.height, axis) + labelValue;\n            this.isRight = axis.opposedPosition;\n            this.isLeft = !axis.opposedPosition;\n        }\n        if (axis.valueType === 'DateTime') {\n            return axis.format(new Date(value));\n        }\n        else if (axis.valueType === 'Category') {\n            return axis.labels[Math.floor(value)];\n        }\n        else if (axis.valueType === 'Logarithmic') {\n            return value = axis.format(Math.pow(axis.logBase, value));\n        }\n        else {\n            let customLabelFormat = axis.labelFormat && axis.labelFormat.match('{value}') !== null;\n            return customLabelFormat ? axis.labelFormat.replace('{value}', axis.format(value)) : axis.format(value);\n        }\n    }\n    tooltipLocation(text, axis, bounds, axisRect) {\n        let padding = 5;\n        let arrowPadding = 10;\n        let tooltipRect;\n        let boundsX = bounds.x;\n        let boundsY = bounds.y;\n        let islabelInside = axis.labelPosition === 'Inside';\n        this.elementSize = measureText(text, axis.crosshairTooltip.textStyle);\n        if (axis.orientation === 'Horizontal') {\n            let yLocation = islabelInside ? axisRect.y - this.elementSize.height - (padding * 2 + arrowPadding) : axisRect.y;\n            let height = islabelInside ? axisRect.y - this.elementSize.height - arrowPadding : axisRect.y + arrowPadding;\n            this.arrowLocation = new ChartLocation(this.valueX, yLocation);\n            tooltipRect = new Rect((this.valueX - (this.elementSize.width / 2) - padding), height, this.elementSize.width + padding * 2, this.elementSize.height + padding * 2);\n            if (axis.opposedPosition) {\n                tooltipRect.y = islabelInside ? axisRect.y : axisRect.y - (this.elementSize.height + padding * 2 + arrowPadding);\n            }\n            if (tooltipRect.x < boundsX) {\n                tooltipRect.x = boundsX;\n            }\n            if (tooltipRect.x + tooltipRect.width > boundsX + bounds.width) {\n                tooltipRect.x -= ((tooltipRect.x + tooltipRect.width) - (boundsX + bounds.width));\n            }\n            if (this.arrowLocation.x + arrowPadding / 2 > tooltipRect.x + tooltipRect.width - this.rx) {\n                this.arrowLocation.x = tooltipRect.x + tooltipRect.width - this.rx - arrowPadding / 2;\n            }\n            if (this.arrowLocation.x - arrowPadding / 2 < tooltipRect.x + this.rx) {\n                this.arrowLocation.x = tooltipRect.x + this.rx + arrowPadding / 2;\n            }\n        }\n        else {\n            this.arrowLocation = new ChartLocation(axisRect.x, this.valueY);\n            let width = islabelInside ? axisRect.x : axisRect.x - (this.elementSize.width) - (padding * 2 + arrowPadding);\n            tooltipRect = new Rect(width, this.valueY - (this.elementSize.height / 2) - padding, this.elementSize.width + (padding * 2), this.elementSize.height + padding * 2);\n            if (axis.opposedPosition) {\n                tooltipRect.x = islabelInside ? axisRect.x - this.elementSize.width - arrowPadding : axisRect.x + arrowPadding;\n                if ((tooltipRect.x + tooltipRect.width) > this.chart.availableSize.width) {\n                    this.arrowLocation.x -= ((tooltipRect.x + tooltipRect.width) - this.chart.availableSize.width);\n                    tooltipRect.x -= ((tooltipRect.x + tooltipRect.width) - this.chart.availableSize.width);\n                }\n            }\n            else {\n                if (tooltipRect.x < 0) {\n                    this.arrowLocation.x -= tooltipRect.x;\n                    tooltipRect.x = 0;\n                }\n            }\n            if (tooltipRect.y < boundsY) {\n                tooltipRect.y = boundsY;\n            }\n            if (tooltipRect.y + tooltipRect.height >= boundsY + bounds.height) {\n                tooltipRect.y -= ((tooltipRect.y + tooltipRect.height) - (boundsY + bounds.height));\n            }\n            if (this.arrowLocation.y + arrowPadding / 2 > tooltipRect.y + tooltipRect.height - this.ry) {\n                this.arrowLocation.y = tooltipRect.y + tooltipRect.height - this.ry - arrowPadding / 2;\n            }\n            if (this.arrowLocation.y - arrowPadding / 2 < tooltipRect.y + this.ry) {\n                this.arrowLocation.y = tooltipRect.y + this.ry + arrowPadding / 2;\n            }\n        }\n        return tooltipRect;\n    }\n    stopAnimation() {\n        stopTimer(this.crosshairInterval);\n    }\n    /**\n     * Removes the crosshair on mouse leave.\n     * @return {void}\n     * @private\n     */\n    removeCrosshair(duration) {\n        let chart = this.chart;\n        let crosshair = document.getElementById(this.elementID + '_UserInteraction');\n        this.stopAnimation();\n        if (crosshair && crosshair.getAttribute('opacity') !== '0') {\n            this.crosshairInterval = setTimeout(() => {\n                new Animation({}).animate(crosshair, {\n                    duration: 200,\n                    progress: (args) => {\n                        // crosshair.removeAttribute('e-animate');\n                        crosshair.style.animation = '';\n                        crosshair.setAttribute('opacity', (1 - (args.timeStamp / args.duration)).toString());\n                    },\n                    end: (model) => {\n                        crosshair.setAttribute('opacity', '0');\n                        chart.startMove = false;\n                        if (chart.tooltipModule) {\n                            chart.tooltipModule.valueX = null;\n                            chart.tooltipModule.valueY = null;\n                        }\n                    }\n                });\n            }, duration);\n        }\n    }\n    /**\n     * Get module name.\n     */\n    getModuleName() {\n        /**\n         * Returns the module name\n         */\n        return 'Crosshair';\n    }\n    /**\n     * To destroy the crosshair.\n     * @return {void}\n     * @private\n     */\n    destroy(chart) {\n        /**\n         * Destroy method performed here\n         */\n    }\n}\n\n/**\n * Tooltip Module used to render the tooltip for series.\n */\nclass BaseTooltip extends ChartData {\n    /**\n     * Constructor for tooltip module.\n     * @private.\n     */\n    constructor(chart) {\n        super(chart);\n        this.padding = 5;\n        this.arrowPadding = 12;\n        this.rx = 2;\n        this.ry = 2;\n        this.markerPoint = [];\n        this.element = this.chart.element;\n        this.textStyle = chart.tooltip.textStyle;\n        this.control = chart;\n    }\n    getElement(id) {\n        return document.getElementById(id);\n    }\n    /**\n     * Renders the tooltip.\n     * @return {void}\n     * @private\n     */\n    getTooltipElement(isTooltip) {\n        this.inverted = this.chart.requireInvertedAxis;\n        this.updateTemplateFn(this.control);\n        this.formattedText = [];\n        this.header = (this.control.tooltip.header === null) ?\n            ((this.control.tooltip.shared) ? '<b>${point.x}</b>' : '<b>${series.name}</b>')\n            : (this.control.tooltip.header);\n        if (!isTooltip) {\n            let elementCollection = document.getElementsByClassName('ejSVGTooltip');\n            for (let i = elementCollection.length - 1; i >= 0; i--) {\n                if (!this.getElement(this.element.id).contains(elementCollection[i])) {\n                    elementCollection[i].remove();\n                }\n            }\n            return this.createElement(this.control);\n        }\n        return null;\n    }\n    createElement(chart) {\n        this.textElements = [];\n        let tooltipDiv = document.createElement('div');\n        tooltipDiv.id = this.element.id + '_tooltip';\n        tooltipDiv.className = 'ejSVGTooltip';\n        tooltipDiv.setAttribute('style', 'pointer-events:none; position:absolute;z-index: 1');\n        if (!chart.tooltip.template || chart.tooltip.shared) {\n            // SVG element for tooltip\n            let svgObject = chart.renderer.createSvg({ id: this.element.id + '_tooltip_svg' });\n            tooltipDiv.appendChild(svgObject);\n            // Group to hold text and path.\n            let groupElement = chart.renderer.createGroup({ id: this.element.id + '_tooltip_group' });\n            svgObject.appendChild(groupElement);\n            let pathElement = chart.renderer.drawPath({\n                'id': this.element.id + '_tooltip_path', 'stroke-width': chart.tooltip.border.width,\n                'fill': chart.tooltip.fill || chart.themeStyle.tooltipFill, 'opacity': chart.tooltip.opacity,\n                'stroke': chart.tooltip.border.color\n            });\n            groupElement.appendChild(pathElement);\n        }\n        return tooltipDiv;\n    }\n    pushData(data, isFirst, tooltipDiv, isChart) {\n        if (data.series.enableTooltip) {\n            if (isChart) {\n                this.currentPoints.push(data);\n            }\n            else {\n                this.currentPoints.push(data);\n            }\n            this.stopAnimation();\n            if (isFirst) {\n                document.getElementById(this.element.id + '_Secondary_Element').appendChild(tooltipDiv);\n            }\n            return true;\n        }\n        return false;\n    }\n    renderTooltip(data, areaRect, location, textCollection, isFirst, cartesain) {\n        if (this.triggerEvent(data, isFirst, textCollection)) {\n            this.renderText(isFirst, this.control);\n            this.removeHighlight(this.control);\n            this.highlightPoints(data);\n            return this.renderTooltipElement(this.control, data, areaRect, location, cartesain, isFirst);\n        }\n        else {\n            this.removeHighlight(this.control);\n            this.getElement(this.element.id + '_tooltip').remove();\n            return null;\n        }\n    }\n    renderTemplate(data, rect, location, point, isFirst) {\n        this.removeHighlight(this.control);\n        this.createTemplate(point, data, rect, location, this.getElement(this.element.id + '_tooltip'), isFirst);\n    }\n    renderTooltipElement(chart, pointData, areaRect, location, cartesain, isFirst) {\n        let tooltipDiv = this.getElement(this.element.id + '_tooltip');\n        let arrowLocation = new ChartLocation(0, 0);\n        let tipLocation = new ChartLocation(0, 0);\n        let svgObject = this.getElement(this.element.id + '_tooltip_svg');\n        let groupElement = this.getElement(this.element.id + '_tooltip_group');\n        let pathElement = this.getElement(this.element.id + '_tooltip_path');\n        let rect;\n        let isTop = false;\n        let isLeft = false;\n        let isBottom = false;\n        let x = 0;\n        let y = 0;\n        this.tipRadius = 1;\n        let series = pointData.series;\n        if (this.header !== '') {\n            this.elementSize.height += 5;\n        }\n        if (this.currentPoints.length > 1) {\n            this.arrowPadding = 0;\n            rect = this.sharedTooltipLocation(areaRect, this.valueX, this.valueY);\n            isTop = true;\n        }\n        else {\n            this.arrowPadding = 12;\n            rect = this.seriesTooltipLocation(pointData, areaRect, location, arrowLocation, tipLocation);\n            if (!this.inverted || !series.isRectSeries) {\n                isTop = (rect.y < (location.y + (cartesain ? series.clipRect.y : 0)));\n                isBottom = !isTop;\n                y = (isTop ? 0 : this.arrowPadding);\n            }\n            else {\n                isLeft = (rect.x < (location.x + series.clipRect.x));\n                x = (isLeft ? 0 : this.arrowPadding);\n            }\n        }\n        if (this.header !== '') {\n            let headerSize = measureText(this.header, chart.tooltip.textStyle).height + (this.padding * 2) +\n                (isBottom ? this.arrowPadding : 0); //header padding;\n            let xLength = (this.padding * 3) + (!isLeft && !isTop && !isBottom ? this.arrowPadding : 0);\n            let direction = 'M ' + xLength + ' ' + headerSize +\n                'L ' + (rect.width + (!isLeft && !isTop && !isBottom ? this.arrowPadding : 0) - (this.padding * 2)) +\n                ' ' + headerSize;\n            let pathElement = this.chart.renderer.drawPath({\n                'id': this.element.id + '_header_path', 'stroke-width': 1,\n                'fill': null, 'opacity': 0.8, 'stroke': chart.themeStyle.tooltipHeaderLine, 'd': direction\n            });\n            groupElement.appendChild(pathElement);\n        }\n        let start = chart.tooltip.border.width / 2;\n        let pointRect = new Rect(start + x, start + y, rect.width - start, rect.height - start);\n        groupElement.setAttribute('opacity', '1');\n        if (chart.tooltip.enableAnimation && !chart.tooltip.shared && !isFirst && !this.isComplete) {\n            this.animateTooltipDiv(tooltipDiv, rect);\n        }\n        else {\n            this.updateDiv(tooltipDiv, rect.x, rect.y);\n        }\n        this.isComplete = false;\n        svgObject.setAttribute('height', (rect.height + chart.tooltip.border.width + (!((!this.inverted) ||\n            (!pointData.series.isRectSeries)) ? 0 : this.arrowPadding)).toString());\n        svgObject.setAttribute('width', (rect.width + chart.tooltip.border.width + (((!this.inverted) ||\n            (!pointData.series.isRectSeries)) ? 0 : this.arrowPadding)).toString());\n        svgObject.setAttribute('opacity', '1');\n        pathElement.setAttribute('d', findDirection(this.rx, this.ry, pointRect, arrowLocation, this.arrowPadding, isTop, isBottom, isLeft, tipLocation.x, tipLocation.y, this.tipRadius));\n        pathElement.setAttribute('filter', Browser.isIE ? '' : 'url(#chart_shadow_tooltip)');\n        let shadowElement = '<filter id=\"chart_shadow_tooltip\" height=\"130%\"><feGaussianBlur in=\"SourceAlpha\" stdDeviation=\"3\"/>';\n        shadowElement += '<feOffset dx=\"3\" dy=\"3\" result=\"offsetblur\"/><feComponentTransfer><feFuncA type=\"linear\" slope=\"0.5\"/>';\n        shadowElement += '</feComponentTransfer><feMerge><feMergeNode/><feMergeNode in=\"SourceGraphic\"/></feMerge></filter>';\n        let defElement = chart.renderer.createDefs();\n        defElement.setAttribute('id', 'chart_tooltip_definition');\n        groupElement.appendChild(defElement);\n        defElement.innerHTML = shadowElement;\n        pathElement.setAttribute('stroke', chart.tooltip.border.color);\n        this.changeText(new ChartLocation(x, y), isBottom, !isLeft && !isTop && !isBottom, rect);\n        return new Side(isBottom, !isLeft && !isTop && !isBottom);\n    }\n    changeText(point, isBottom, isRight, rect) {\n        let element = document.getElementById(this.element.id + '_tooltip_text');\n        if (isBottom) {\n            element.setAttribute('transform', 'translate(0,' + this.arrowPadding + ')');\n        }\n        if (isRight) {\n            element.setAttribute('transform', 'translate(' + this.arrowPadding + ' 0)');\n        }\n    }\n    renderText(isRender, chart) {\n        let height = 0;\n        let width = 0; // Padding for text;\n        let subWidth = 0;\n        let size;\n        let lines;\n        let key = 'properties';\n        let font = extend({}, this.chart.tooltip.textStyle, null, true)[key];\n        let groupElement = this.getElement(this.element.id + '_tooltip_group');\n        let tspanElement;\n        let tspanStyle = '';\n        let line;\n        let tspanOption;\n        this.header = this.header.replace(/<b>/g, '').replace(/<\\/b>/g, '').trim();\n        let headerSpace = (this.header !== '' && this.formattedText[0] !== '') ? 5 : 0;\n        let isRow = true;\n        let isColumn = true;\n        this.markerPoint = [];\n        let markerSize = 10;\n        let spaceWidth = 4;\n        let dy = (22 / parseFloat(Theme.tooltipLabelFont.size)) * (parseFloat(font.size));\n        if (!isRender) {\n            removeElement(this.element.id + '_tooltip_text');\n            removeElement(this.element.id + '_header_path');\n            removeElement(this.element.id + '_tooltip_trackball_group');\n            removeElement('chart_tooltip_definition');\n        }\n        let options = new TextOption(this.element.id + '_tooltip_text', this.padding * 2, this.padding * 4, 'start', '');\n        let parentElement = textElement(options, font, null, groupElement, false);\n        for (let k = 0, pointsLength = this.formattedText.length; k < pointsLength; k++) {\n            let textCollection = this.formattedText[k].replace(/<(b|strong)>/g, '<b>')\n                .replace(/<\\/(b|strong)>/g, '</b>')\n                .split(/<br.*?>/g);\n            size = measureText(this.formattedText[k], font);\n            if ((k !== 0) || (this.header === '')) {\n                this.markerPoint.push((this.header !== '' ? (this.padding) : 0) + options.y + height);\n            }\n            for (let i = 0, len = textCollection.length; i < len; i++) {\n                lines = textCollection[i].replace(/<b>/g, '<br><b>').replace(/<\\/b>/g, '</b><br>').split('<br>');\n                subWidth = 0;\n                isColumn = true;\n                height += dy;\n                for (let k = 0, len = lines.length; k < len; k++) {\n                    line = lines[k];\n                    if (line.replace(/<b>/g, '').replace(/<\\/b>/g, '').trim() !== '') {\n                        subWidth += spaceWidth;\n                        if (isColumn && !isRow) {\n                            tspanOption = { x: (this.padding * 2) + (markerSize + 5), dy: dy + ((isColumn) ? headerSpace : 0), fill: '' };\n                            headerSpace = null;\n                        }\n                        else {\n                            if (isRow && isColumn) {\n                                tspanOption = { x: (this.header === '') ? ((this.padding * 2) + (markerSize + 5)) : (this.padding * 2) };\n                            }\n                            else {\n                                tspanOption = {};\n                            }\n                        }\n                        isColumn = false;\n                        tspanElement = chart.renderer.createTSpan(tspanOption, '');\n                        parentElement.appendChild(tspanElement);\n                        if (line.indexOf('<b>') > -1) {\n                            tspanStyle = 'font-weight:bold';\n                            font.fontWeight = 'bold';\n                            (tspanElement).setAttribute('fill', chart.tooltip.textStyle.color || chart.themeStyle.tooltipBoldLabel);\n                        }\n                        else {\n                            tspanStyle = '';\n                            font.fontWeight = 'Normal';\n                            (tspanElement).setAttribute('fill', chart.tooltip.textStyle.color || chart.themeStyle.tooltipLightLabel);\n                        }\n                        (tspanElement).textContent = line = line.replace(/<[a-zA-Z\\/](.|\\n)*?>/g, '');\n                        subWidth += measureText(line, font).width;\n                        if (tspanStyle !== '') {\n                            tspanElement.setAttribute('style', tspanStyle);\n                        }\n                        isRow = false;\n                    }\n                }\n                subWidth -= spaceWidth;\n                width = Math.max(width, subWidth);\n            }\n        }\n        height -= (this.header ? this.padding : 0);\n        this.elementSize = new Size(width + (width > 0 ? (2 * this.padding) : 0), height + (this.header !== '' ? this.padding : 0));\n        this.elementSize.width += (markerSize + 5); // marker size + marker Spacing\n        let element = (parentElement.childNodes[0]);\n        if (this.header !== '' && element) {\n            font.fontWeight = 'bold';\n            let width = (this.elementSize.width + (2 * this.padding)) / 2 - measureText(this.header, font).width / 2;\n            element.setAttribute('x', width.toString());\n        }\n    }\n    createTemplate(point, data, areaRect, location, parent, isFirst) {\n        let chart = this.control;\n        this.highlightPoints(data);\n        let argsData = { cancel: false, name: tooltipRender, point: data.point, series: data.series, };\n        this.chart.trigger(tooltipRender, argsData);\n        let firstElement = this.getElement(this.element.id + '_tooltip').firstChild;\n        if (firstElement) {\n            firstElement.remove();\n        }\n        if (!argsData.cancel) {\n            let templateElement = this.templateFn(point);\n            let elem = createElement('div');\n            while (templateElement.length > 0) {\n                elem.appendChild(templateElement[0]);\n            }\n            parent.appendChild(elem);\n            let rect = parent.getBoundingClientRect();\n            this.padding = 0;\n            this.elementSize = new Size(rect.width, rect.height);\n            let tooltipRect = this.seriesTooltipLocation(data, areaRect, location, new ChartLocation(0, 0), new ChartLocation(0, 0));\n            if (chart.tooltip.enableAnimation && !chart.tooltip.shared && !isFirst && !this.isComplete) {\n                this.animateTooltipDiv(parent, tooltipRect);\n            }\n            else {\n                this.updateDiv(parent, tooltipRect.x, tooltipRect.y);\n            }\n            this.isComplete = false;\n        }\n        else {\n            this.removeHighlight(chart);\n            this.getElement(this.element.id + '_tooltip').remove();\n        }\n    }\n    sharedTooltipLocation(bounds, x, y) {\n        let width = this.elementSize.width + (2 * this.padding);\n        let height = this.elementSize.height + (2 * this.padding);\n        let tooltipRect = new Rect(x + 2 * this.padding, y - height - this.padding, width, height);\n        if (tooltipRect.y < bounds.y) {\n            tooltipRect.y += (tooltipRect.height + 2 * this.padding);\n        }\n        if (tooltipRect.x + tooltipRect.width > bounds.x + bounds.width) {\n            tooltipRect.x -= (tooltipRect.width + 4 * this.padding);\n        }\n        return tooltipRect;\n    }\n    seriesTooltipLocation(pointData, bounds, symbolLocation, arrowLocation, tipLocation) {\n        let series = pointData.series;\n        let location = new ChartLocation(symbolLocation.x, symbolLocation.y);\n        if (series.type === 'RangeArea' && pointData.point.regions[0]) {\n            if (!series.chart.requireInvertedAxis) {\n                location.y = pointData.point.regions[0].y + pointData.point.regions[0].height / 2;\n            }\n            else {\n                location.x = pointData.point.regions[0].x + pointData.point.regions[0].width / 2;\n            }\n        }\n        let width = this.elementSize.width + (2 * this.padding);\n        let height = this.elementSize.height + (2 * this.padding);\n        let markerHeight = 0;\n        if (!series.isRectSeries) {\n            let chartSeries = pointData.series;\n            markerHeight = (this.chart.tooltip.shared || chartSeries.marker.visible || series.type === 'Scatter'\n                || chartSeries.drawType === 'Scatter') ? ((chartSeries.marker.height + 2) / 2 + (2 * chartSeries.marker.border.width)) : 0;\n        }\n        let clipX = this.chart.chartAreaType === 'PolarRadar' ? 0 : series.clipRect.x;\n        let clipY = this.chart.chartAreaType === 'PolarRadar' ? 0 : series.clipRect.y;\n        let boundsX = bounds.x;\n        let boundsY = bounds.y;\n        if (!this.inverted || !series.isRectSeries) {\n            location.y = (series.type === 'Waterfall' && pointData.point.y < 0) ?\n                location.y - pointData.point.regions[0].height : location.y;\n            location = new ChartLocation(location.x + clipX - this.elementSize.width / 2 - this.padding, location.y + clipY - this.elementSize.height - (2 * this.padding) - this.arrowPadding - markerHeight);\n            arrowLocation.x = tipLocation.x = width / 2;\n            if (location.y < boundsY || (series.isRectSeries && pointData.point.y < 0 && series.type !== 'Waterfall')) {\n                location.y = (symbolLocation.y < 0 ? 0 : symbolLocation.y) + clipY + markerHeight;\n            }\n            if (location.y + height + this.arrowPadding > boundsY + bounds.height) {\n                location.y = (symbolLocation.y > bounds.height ? bounds.height : symbolLocation.y)\n                    + clipY - this.elementSize.height - (2 * this.padding) - this.arrowPadding - markerHeight;\n            }\n            tipLocation.x = width / 2;\n            if (location.x < boundsX) {\n                arrowLocation.x -= (boundsX - location.x);\n                tipLocation.x -= (boundsX - location.x);\n                location.x = boundsX;\n            }\n            if (location.x + width > boundsX + bounds.width) {\n                arrowLocation.x += ((location.x + width) - (boundsX + bounds.width));\n                tipLocation.x += ((location.x + width) - (boundsX + bounds.width));\n                location.x -= ((location.x + width) - (boundsX + bounds.width));\n            }\n            if (arrowLocation.x + this.arrowPadding / 2 > width - this.rx) {\n                arrowLocation.x = width - this.rx - this.arrowPadding / 2;\n                tipLocation.x = width;\n                this.tipRadius = 0;\n            }\n            if (arrowLocation.x - this.arrowPadding / 2 < this.rx) {\n                arrowLocation.x = this.rx + this.arrowPadding / 2;\n                tipLocation.x = 0;\n                this.tipRadius = 0;\n            }\n        }\n        else {\n            location.x = (series.type === 'Waterfall' && pointData.point.y < 0) ?\n                location.x + pointData.point.regions[0].width : location.x;\n            location = new ChartLocation(location.x + clipX + markerHeight, location.y + clipY - this.elementSize.height / 2 - (this.padding));\n            arrowLocation.y = tipLocation.y = height / 2;\n            if ((location.x + width + this.arrowPadding > boundsX + bounds.width) || (series.isRectSeries &&\n                pointData.point.y < 0 && series.type !== 'Waterfall')) {\n                location.x = (symbolLocation.x > bounds.width ? bounds.width : symbolLocation.x)\n                    + clipX - markerHeight - (width + this.arrowPadding);\n            }\n            if (location.x < boundsX) {\n                location.x = (symbolLocation.x < 0 ? 0 : symbolLocation.x) + clipX + markerHeight;\n            }\n            if (location.y <= boundsY) {\n                arrowLocation.y -= (boundsY - location.y);\n                tipLocation.y -= (boundsY - location.y);\n                location.y = boundsY;\n            }\n            if (location.y + height >= boundsY + bounds.height) {\n                arrowLocation.y += ((location.y + height) - (boundsY + bounds.height));\n                tipLocation.y += ((location.y + height) - (boundsY + bounds.height));\n                location.y -= ((location.y + height) - (boundsY + bounds.height));\n            }\n            if (arrowLocation.y + this.arrowPadding / 2 > height - this.ry) {\n                arrowLocation.y = height - this.ry - this.arrowPadding / 2;\n                tipLocation.y = height;\n                this.tipRadius = 0;\n            }\n            if (arrowLocation.y - this.arrowPadding / 2 < this.ry) {\n                arrowLocation.y = this.ry + this.arrowPadding / 2;\n                tipLocation.y = 0;\n                this.tipRadius = 0;\n            }\n        }\n        return new Rect(location.x, location.y, width, height);\n    }\n    /*\n   * @hidden\n   */\n    progressAnimation(element, tooltipGroup, series, opacity, rectOpacity, timeStamp, isRect, shared) {\n        tooltipGroup.style.animation = '';\n        tooltipGroup.setAttribute('opacity', (opacity - timeStamp).toString());\n        if (element && isRect && !shared) {\n            element.setAttribute('opacity', (rectOpacity + (rectOpacity * timeStamp)).toString());\n        }\n    }\n    /*\n     * @hidden\n     */\n    endAnimation(element, tooltipGroup, series, shared) {\n        this.currentPoints = [];\n        if (element && series.isRectSeries) {\n            element.setAttribute('opacity', series.opacity.toString());\n        }\n        this.removeHighlight(this.control);\n        tooltipGroup.setAttribute('opacity', '0');\n        if (this.control.tooltip.template && !shared) {\n            tooltipGroup.style.display = 'none';\n        }\n        this.isComplete = true;\n        this.control.trigger('animationComplete', {});\n    }\n    removeHighlight(chart) {\n        let item;\n        let series;\n        for (let i = 0, len = this.previousPoints.length; i < len; i++) {\n            item = this.previousPoints[i];\n            if (item.series.isRectSeries) {\n                if (item.series.visible) {\n                    this.highlightPoint(item.series, item.point.index, false);\n                }\n                continue;\n            }\n            series = item.series;\n            if (!series.marker.visible && item.series.type !== 'Scatter' && item.series.type !== 'Bubble') {\n                this.previousPoints.shift();\n                len -= 1;\n            }\n        }\n    }\n    highlightPoint(series, pointIndex, highlight) {\n        let element = this.getElement(this.element.id + '_Series_' + series.index + '_Point_' + pointIndex);\n        if (element) {\n            element.setAttribute('opacity', (highlight ? series.opacity / 2 : series.opacity).toString());\n        }\n    }\n    highlightPoints(item) {\n        if (item.series.isRectSeries) {\n            this.highlightPoint(item.series, item.point.index, true);\n            return null;\n        }\n    }\n    animateTooltipDiv(tooltipDiv, rect) {\n        let x = parseFloat(tooltipDiv.style.left);\n        let y = parseFloat(tooltipDiv.style.top);\n        let currenDiff;\n        new Animation({}).animate(tooltipDiv, {\n            duration: 300,\n            progress: (args) => {\n                currenDiff = (args.timeStamp / args.duration);\n                tooltipDiv.style.animation = null;\n                tooltipDiv.style.left = (x + currenDiff * (rect.x - x)) + 'px';\n                tooltipDiv.style.top = (y + currenDiff * (rect.y - y)) + 'px';\n            },\n            end: (model) => {\n                this.updateDiv(tooltipDiv, rect.x, rect.y);\n            }\n        });\n    }\n    updateDiv(tooltipDiv, x, y) {\n        tooltipDiv.style.left = x + 'px';\n        tooltipDiv.style.top = y + 'px';\n    }\n    triggerEvent(point, isFirst, textCollection, firstText = true) {\n        let argsData = {\n            cancel: false, name: tooltipRender, text: textCollection,\n            point: point.point, series: point.series, textStyle: this.textStyle\n        };\n        this.chart.trigger(tooltipRender, argsData);\n        if (!argsData.cancel) {\n            if (point.series.type === 'BoxAndWhisker') {\n                this.removeText();\n                isFirst = true;\n            }\n            this.formattedText = this.formattedText.concat(argsData.text);\n        }\n        return !argsData.cancel;\n    }\n    removeText() {\n        this.textElements = [];\n        let element = this.getElement(this.element.id + '_tooltip_group');\n        if (element.childNodes.length > 0) {\n            while (element.lastChild && element.childNodes.length !== 1) {\n                element.removeChild(element.lastChild);\n            }\n        }\n    }\n    updateTemplateFn(chart) {\n        if (chart.tooltip.template) {\n            try {\n                if (document.querySelectorAll(chart.tooltip.template).length) {\n                    this.templateFn = compile(document.querySelector(chart.tooltip.template).innerHTML.trim());\n                }\n            }\n            catch (e) {\n                this.templateFn = compile(chart.tooltip.template);\n            }\n        }\n    }\n    stopAnimation() {\n        stopTimer(this.toolTipInterval);\n    }\n}\nclass Side {\n    constructor(bottom, right) {\n        this.isRight = right;\n        this.isBottom = bottom;\n    }\n}\n\n/**\n * `Tooltip` module is used to render the tooltip for chart series.\n */\nclass Tooltip extends BaseTooltip {\n    /**\n     * Constructor for tooltip module.\n     * @private.\n     */\n    constructor(chart) {\n        super(chart);\n        this.addEventListener();\n    }\n    /**\n     * @hidden\n     */\n    addEventListener() {\n        if (this.chart.isDestroyed) {\n            return;\n        }\n        let cancelEvent = Browser.isPointer ? 'pointerleave' : 'mouseleave';\n        this.chart.on(cancelEvent, this.mouseLeaveHandler, this);\n        this.chart.on('tapHold', this.longPress, this);\n        this.chart.on(Browser.touchMoveEvent, this.mouseMoveHandler, this);\n        this.chart.on(Browser.touchEndEvent, this.mouseUpHandler, this);\n    }\n    mouseUpHandler() {\n        let chart = this.control;\n        if (chart.isTouch && !this.isSelected(chart) &&\n            ((withInBounds(chart.mouseX, chart.mouseY, chart.chartAxisLayoutPanel.seriesClipRect) && chart.tooltip.shared)\n                || !chart.tooltip.shared)) {\n            if (!chart.crosshair.enable) {\n                this.tooltip();\n                this.removeTooltip(2000);\n            }\n            else if (chart.startMove) {\n                this.removeTooltip(2000);\n            }\n        }\n    }\n    mouseLeaveHandler() {\n        this.removeTooltip(1000);\n    }\n    mouseMoveHandler() {\n        let chart = this.chart;\n        // Tooltip for chart series.\n        if (!chart.disableTrackTooltip && !this.isSelected(chart)) {\n            if (!chart.tooltip.shared && (!chart.isTouch || (chart.startMove))) {\n                this.tooltip();\n            }\n            if (withInBounds(chart.mouseX, chart.mouseY, chart.chartAxisLayoutPanel.seriesClipRect)) {\n                if (chart.tooltip.shared && (!chart.isTouch || (chart.startMove))) {\n                    this.tooltip();\n                }\n            }\n            else {\n                if (chart.tooltip.shared) {\n                    this.removeTooltip(1000);\n                }\n            }\n        }\n    }\n    /**\n     * Handles the long press on chart.\n     * @return {boolean}\n     * @private\n     */\n    longPress() {\n        let chart = this.chart;\n        if (chart.crosshair.enable && withInBounds(chart.mouseX, chart.mouseY, chart.chartAxisLayoutPanel.seriesClipRect)) {\n            this.tooltip();\n        }\n        return false;\n    }\n    /**\n     * Renders the tooltip.\n     * @return {void}\n     */\n    tooltip() {\n        let isTooltip = this.getElement(this.element.id + '_tooltip');\n        let tooltipDiv = this.getTooltipElement(isTooltip);\n        if (!this.chart.tooltip.shared) {\n            this.renderSeriesTooltip(this.chart, !isTooltip, tooltipDiv);\n        }\n        else {\n            this.renderGroupedTooltip(this.chart, !isTooltip, tooltipDiv);\n        }\n    }\n    findHeader(data) {\n        this.header = this.parseTemplate(data.point, data.series, this.header, data.series.xAxis, data.series.yAxis);\n        if (this.header.replace(/<b>/g, '').replace(/<\\/b>/g, '').trim() !== '') {\n            this.formattedText = this.formattedText.concat(this.header);\n        }\n    }\n    renderSeriesTooltip(chart, isFirst, tooltipDiv) {\n        let data = this.getData();\n        let markerSide;\n        data.lierIndex = this.lierIndex;\n        let rect = chart.chartAxisLayoutPanel.seriesClipRect;\n        this.currentPoints = [];\n        if (this.findData(data, this.previousPoints[0])) {\n            if (this.pushData(data, isFirst, tooltipDiv, true)) {\n                let text = this.getTooltipText(data);\n                if (!chart.tooltip.template) {\n                    if (this.header !== '') {\n                        this.findHeader(data);\n                    }\n                    markerSide = this.renderTooltip(data, rect, this.getSymbolLocation(data), text, isFirst, chart.chartAreaType === 'Cartesian');\n                    if (markerSide) {\n                        this.drawMarker(markerSide.isBottom, markerSide.isRight, 10);\n                    }\n                }\n                else {\n                    this.renderTemplate(data, rect, this.getSymbolLocation(data), this.getTemplateText(data), isFirst);\n                }\n                this.isRemove = true;\n            }\n            this.previousPoints = extend([], this.currentPoints, null, true);\n        }\n        else {\n            if (!data.point && this.isRemove) {\n                this.removeTooltip(1000);\n                this.isRemove = false;\n            }\n            else {\n                for (let series of chart.visibleSeries) {\n                    if (series.visible) {\n                        data = this.getClosestX(chart, series) || data;\n                    }\n                }\n            }\n        }\n        if (data && data.point) {\n            this.findMouseValue(data, chart);\n        }\n    }\n    findData(data, previous) {\n        return data.point && ((!previous || (previous.point !== data.point)) ||\n            (previous && previous.lierIndex > 3 && previous.lierIndex !== this.lierIndex));\n    }\n    getSymbolLocation(data) {\n        return data.series.type === 'BoxAndWhisker' ?\n            this.getBoxLocation(data) : data.point.symbolLocations[0];\n    }\n    getTooltipText(pointData) {\n        let series = pointData.series;\n        return this.parseTemplate(pointData.point, series, this.getFormat(this.chart, series), series.xAxis, series.yAxis);\n    }\n    getTemplateText(data) {\n        let point = extend({}, data.point);\n        point.x = this.formatPointValue(data.point, data.series.xAxis, 'x', true, false);\n        if ((data.series.seriesType === 'XY')) {\n            point.y = this.formatPointValue(data.point, data.series.yAxis, 'y', false, true);\n        }\n        else {\n            point.low = this.formatPointValue(data.point, data.series.yAxis, 'low', false, true);\n            point.high = this.formatPointValue(data.point, data.series.yAxis, 'high', false, true);\n        }\n        return point;\n    }\n    findMouseValue(data, chart) {\n        if (!chart.requireInvertedAxis) {\n            if (chart.chartAreaType === 'PolarRadar') {\n                this.valueX = valueToPolarCoefficient(data.point.xValue, data.series.xAxis) * data.series.xAxis.rect.width\n                    + data.series.xAxis.rect.x;\n            }\n            else {\n                this.valueX = valueToCoefficient(data.point.xValue, data.series.xAxis) * data.series.xAxis.rect.width\n                    + data.series.xAxis.rect.x;\n            }\n            this.valueY = chart.mouseY;\n        }\n        else {\n            this.valueY = (1 - valueToCoefficient(data.point.xValue, data.series.xAxis)) * data.series.xAxis.rect.height\n                + data.series.xAxis.rect.y;\n            this.valueX = chart.mouseX;\n        }\n    }\n    renderGroupedTooltip(chart, isFirst, tooltipDiv) {\n        let data;\n        let pointData = chart.chartAreaType === 'PolarRadar' ? this.getData() : null;\n        this.stopAnimation();\n        this.removeHighlight(chart);\n        this.currentPoints = [];\n        let extraPoints = [];\n        let markerSide;\n        if (isFirst) {\n            document.getElementById(this.element.id + '_Secondary_Element').appendChild(tooltipDiv);\n        }\n        this.removeText();\n        for (let series of chart.visibleSeries) {\n            if (!series.enableTooltip) {\n                continue;\n            }\n            if (chart.chartAreaType === 'Cartesian' && series.visible) {\n                data = this.getClosestX(chart, series);\n            }\n            else if (chart.chartAreaType === 'PolarRadar' && series.visible && pointData.point !== null) {\n                data = new PointData(series.points[pointData.point.index], series);\n            }\n            if (data && this.header !== '' && this.currentPoints.length === 0) {\n                this.findHeader(data);\n            }\n            if (data && this.triggerEvent(data, isFirst, this.getTooltipText(data))) {\n                if (series.category === 'Series') {\n                    this.highlightPoints(data);\n                }\n                this.findMouseValue(data, chart);\n                this.currentPoints.push(data);\n                data = null;\n            }\n            else if (data) {\n                extraPoints.push(data);\n            }\n        }\n        if (this.currentPoints.length > 0) {\n            this.renderText(isFirst, chart);\n            markerSide = this.renderTooltipElement(chart, this.currentPoints[0], chart.chartAxisLayoutPanel.seriesClipRect, this.getSymbolLocation(this.currentPoints[0]), chart.chartAreaType === 'Cartesian', isFirst);\n            this.drawMarker(markerSide.isBottom, markerSide.isRight, 10);\n        }\n        else {\n            this.getElement(this.element.id + '_tooltip_path').setAttribute('d', '');\n        }\n        this.currentPoints = this.currentPoints.concat(extraPoints);\n        this.previousPoints = extend([], this.currentPoints, null, true);\n    }\n    getBoxLocation(data) {\n        let location;\n        location = this.lierIndex > 3 ? data.point.symbolLocations[this.lierIndex - 4] :\n            {\n                x: data.point.regions[0].x + (data.point.regions[0].width / 2),\n                y: data.point.regions[0].y + (data.point.regions[0].height / 2)\n            };\n        return location;\n    }\n    drawMarker(isBottom, isRight, size) {\n        let shapeOption;\n        let count = 0;\n        let series;\n        let markerGroup = this.chart.renderer.createGroup({ id: this.element.id + '_tooltip_trackball_group' });\n        let groupElement = this.getElement(this.element.id + '_tooltip_group');\n        let x = (this.padding * 2) + (size / 2) + (isRight ? this.arrowPadding : 0);\n        for (let data of this.currentPoints) {\n            series = data.series;\n            if (series.visible && series.enableTooltip && data.point.visible) {\n                shapeOption = new PathOption(this.element.id + '_Tooltip_Trackball_' + series.index, this.findColor(data, series) || series.interior, 1, '#cccccc', series.opacity, null);\n                markerGroup.appendChild(drawSymbol(new ChartLocation(x, this.markerPoint[count] - this.padding + (isBottom ? this.arrowPadding : 0)), data.point.marker.shape || series.marker.shape, new Size(size, size), series.marker.imageUrl, shapeOption, null));\n                count++;\n            }\n        }\n        groupElement.appendChild(markerGroup);\n    }\n    findColor(data, series) {\n        if (series.isRectSeries) {\n            return data.point.color;\n        }\n        else {\n            return (data.point.color && data.point.color !== '#ffffff' ? data.point.color : data.point.interior) || series.marker.fill;\n        }\n    }\n    parseTemplate(point, series, format, xAxis, yAxis) {\n        let val;\n        let textValue;\n        let chart = this.chart;\n        for (let dataValue of Object.keys(point)) {\n            val = new RegExp('${point' + '.' + dataValue + '}', 'gm');\n            format = format.replace(val.source, this.formatPointValue(point, val.source === '${point.x}' ? xAxis : yAxis, dataValue, val.source === '${point.x}', (val.source === '${point.high}' ||\n                val.source === '${point.open}' ||\n                val.source === '${point.close}' ||\n                val.source === '${point.low}' ||\n                val.source === '${point.y}' ||\n                val.source === '${point.minimum}' ||\n                val.source === '${point.maximum}' ||\n                val.source === '${point.outliers}' ||\n                val.source === '${point.upperQuartile}' ||\n                val.source === '${point.lowerQuartile}' ||\n                val.source === '${point.median}')));\n        }\n        for (let dataValue of Object.keys(Object.getPrototypeOf(series))) {\n            val = new RegExp('${series' + '.' + dataValue + '}', 'gm');\n            textValue = series[dataValue];\n            format = format.replace(val.source, textValue);\n        }\n        return format;\n    }\n    formatPointValue(point, axis, dataValue, isXPoint, isYPoint) {\n        let textValue;\n        let customLabelFormat;\n        let value;\n        if (axis.valueType !== 'Category' && isXPoint) {\n            customLabelFormat = axis.labelFormat && axis.labelFormat.match('{value}') !== null;\n            textValue = customLabelFormat ? axis.labelFormat.replace('{value}', axis.format(point[dataValue])) :\n                axis.format(point[dataValue]);\n        }\n        else if (isYPoint) {\n            customLabelFormat = axis.labelFormat && axis.labelFormat.match('{value}') !== null;\n            value = dataValue === 'outliers' ? axis.format(point[dataValue][this.lierIndex - 4]) :\n                axis.format(point[dataValue]);\n            textValue = customLabelFormat ? axis.labelFormat.replace('{value}', value) : value;\n        }\n        else {\n            textValue = point[dataValue];\n        }\n        return textValue;\n    }\n    getFormat(chart, series) {\n        if (chart.tooltip.format) {\n            if (series.seriesType === 'XY' && series.category === 'Indicator') {\n                return this.getIndicatorTooltipFormat(series, chart, chart.tooltip.format);\n            }\n            return chart.tooltip.format;\n        }\n        let format = !chart.tooltip.shared ? '${point.x}' : '${series.name}';\n        switch (series.seriesType) {\n            case 'XY':\n                if (series.category === 'Indicator') {\n                    this.getIndicatorTooltipFormat(series, chart, chart.tooltip.format);\n                }\n                return format + ' : ' + ((series.type === 'Bubble') ? '<b>${point.y}</b>  Size : <b>${point.size}</b>'\n                    : '<b>${point.y}</b>');\n            case 'HighLow':\n                return format + ('<br/>High : <b>${point.high}</b><br/>Low : <b>${point.low}</b>');\n            case 'HighLowOpenClose':\n                return format + ('<br/>High : <b>${point.high}</b><br/>Low : <b>${point.low}</b><br/>' +\n                    'Open : <b>${point.open}</b><br/>Close : <b>${point.close}</b>');\n            case 'BoxPlot': {\n                return format + '<br/>' + (this.lierIndex > 3 ? 'Outliers : <b>${point.outliers}</b>' :\n                    'Maximum : <b>${point.maximum}</b><br/>Q1 : <b>${point.upperQuartile}</b><br/>' +\n                        'Median : <b>${point.median}</b><br/>Q3 : <b>${point.lowerQuartile}</b><br/>Minimum : <b>${point.minimum}</b>');\n            }\n        }\n        return '';\n    }\n    getIndicatorTooltipFormat(series, chart, format) {\n        let toolTip;\n        if (series.seriesType === 'XY') {\n            toolTip = series.name + ' : ${point.y}';\n        }\n        else {\n            toolTip = format;\n        }\n        return toolTip;\n    }\n    /*\n   * @hidden\n   */\n    removeHighlightedMarker(data) {\n        for (let item of data) {\n            removeElement(this.element.id + '_Series_' + item.series.index +\n                '_Point_' + item.point.index + '_Trackball');\n        }\n        if (this.chart.markerRender) {\n            this.chart.markerRender.removeHighlightedMarker();\n        }\n        this.previousPoints = [];\n    }\n    /**\n     * Removes the tooltip on mouse leave.\n     * @return {void}\n     * @private\n     */\n    removeTooltip(duration) {\n        let chart = this.chart;\n        let tooltipElement = this.getElement(this.element.id + '_tooltip');\n        this.stopAnimation();\n        if (tooltipElement && this.previousPoints.length > 0) {\n            let data = this.previousPoints;\n            this.toolTipInterval = setTimeout(() => {\n                let rectOpacity;\n                let tooltipGroup = tooltipElement.firstChild;\n                let series = data[0].series;\n                let element = this.getElement(chart.element.id + '_Series_' + data[0].series.index\n                    + '_Point_' + data[0].point.index);\n                let opacity = parseFloat(tooltipGroup.getAttribute('opacity')) || 1;\n                if (element && series.isRectSeries && !chart.tooltip.shared) {\n                    rectOpacity = parseFloat(element.getAttribute('opacity'));\n                }\n                new Animation({}).animate(tooltipGroup, {\n                    duration: 200,\n                    progress: (args) => {\n                        //  tooltipGroup.removeAttribute('e-animate');\n                        this.progressAnimation(element, tooltipGroup, series, opacity, rectOpacity, (args.timeStamp / args.duration), series.isRectSeries, !chart.tooltip.shared);\n                    },\n                    end: (model) => {\n                        this.valueX = null;\n                        this.valueY = null;\n                        this.endAnimation(element, tooltipGroup, series, chart.tooltip.shared);\n                        this.removeHighlightedMarker(data);\n                    }\n                });\n            }, duration);\n        }\n    }\n    /**\n     * Get module name.\n     */\n    getModuleName() {\n        /**\n         * Returns the module name\n         */\n        return 'Tooltip';\n    }\n    /**\n     * To destroy the tooltip.\n     * @return {void}\n     * @private\n     */\n    destroy(chart) {\n        /**\n         * Destroy method performed here\n         */\n    }\n}\n\n/**\n * Zooming Toolkit created here\n * @private\n */\nclass Toolkit {\n    /** @private */\n    constructor(chart) {\n        this.chart = chart;\n        this.elementId = chart.element.id;\n        this.selectionColor = '#ff4081';\n        this.fillColor = '#737373';\n    }\n    /**\n     * To create the pan button.\n     * @return {void}\n     * @private\n     */\n    createPanButton(childElement, parentElement, chart) {\n        let render = this.chart.renderer;\n        let fillColor = this.chart.zoomModule.isPanning ? this.selectionColor : this.fillColor;\n        let direction = 'M5,3h2.3L7.275,5.875h1.4L8.65,3H11L8,0L5,3z M3,11V8.7l2.875,0.025v-1.4L3,7.35V5L0,8L3,';\n        direction += '11z M11,13H8.7l0.025-2.875h-1.4L7.35,13H5l3,3L11,13z M13,5v2.3l-2.875-0.025v1.4L13,8.65V11l3-3L13,5z';\n        childElement.id = this.elementId + '_Zooming_Pan';\n        childElement.setAttribute('aria-label', this.chart.getLocalizedLabel('Pan'));\n        this.panElements = childElement;\n        childElement.appendChild(render.drawRectangle(new RectOption(this.elementId + '_Zooming_Pan_1', 'transparent', {}, 1, new Rect(0, 0, 16, 16))));\n        childElement.appendChild(render.drawPath(new PathOption(this.elementId + '_Zooming_Pan_2', fillColor, null, null, 1, null, direction)));\n        parentElement.appendChild(childElement);\n        this.wireEvents(childElement, this.pan);\n    }\n    /**\n     * To create the zoom button.\n     * @return {void}\n     * @private\n     */\n    createZoomButton(childElement, parentElement, chart) {\n        let render = this.chart.renderer;\n        let fillColor = this.chart.zoomModule.isPanning ? this.fillColor : this.selectionColor;\n        let direction = 'M0.001,14.629L1.372,16l4.571-4.571v-0.685l0.228-0.274c1.051,0.868,2.423,1.417,3.885,1.417c3.291,0,';\n        direction += '5.943-2.651,5.943-5.943S13.395,0,10.103,0S4.16,2.651,4.16,5.943c0,1.508,0.503,2.834,1.417,3.885l-0.274,0.228H4.571';\n        direction = direction + 'L0.001,14.629L0.001,14.629z M5.943,5.943c0-2.285,1.828-4.114,4.114-4.114s4.114,1.828,4.114,';\n        childElement.id = this.elementId + '_Zooming_Zoom';\n        childElement.setAttribute('aria-label', this.chart.getLocalizedLabel('Zoom'));\n        this.zoomElements = childElement;\n        childElement.appendChild(render.drawRectangle(new RectOption(this.elementId + '_Zooming_Zoom_1', 'transparent', {}, 1, new Rect(0, 0, 16, 16))));\n        childElement.appendChild(render.drawPath(new PathOption(this.elementId + '_Zooming_Zoom_3', fillColor, null, null, 1, null, direction + '4.114s-1.828,4.114-4.114,4.114S5.943,8.229,5.943,5.943z')));\n        parentElement.appendChild(childElement);\n        this.wireEvents(childElement, this.zoom);\n    }\n    /**\n     * To create the ZoomIn button.\n     * @return {void}\n     * @private\n     */\n    createZoomInButton(childElement, parentElement, chart) {\n        let render = this.chart.renderer;\n        let fillColor = this.fillColor;\n        let direction = 'M10.103,0C6.812,0,4.16,2.651,4.16,5.943c0,1.509,0.503,2.834,1.417,3.885l-0.274,0.229H4.571L0,';\n        direction += '14.628l0,0L1.372,16l4.571-4.572v-0.685l0.228-0.275c1.052,0.868,2.423,1.417,3.885,1.417c3.291,0,5.943-2.651,';\n        direction += '5.943-5.943C16,2.651,13.395,0,10.103,0z M10.058,10.058c-2.286,0-4.114-1.828-4.114-4.114c0-2.286,1.828-4.114,';\n        childElement.id = this.elementId + '_Zooming_ZoomIn';\n        childElement.setAttribute('aria-label', this.chart.getLocalizedLabel('ZoomIn'));\n        let polygonDirection = '12.749,5.466 10.749,5.466 10.749,3.466 9.749,3.466 9.749,5.466 7.749,5.466 7.749,6.466';\n        childElement.appendChild(render.drawRectangle(new RectOption(this.elementId + '_Zooming_ZoomIn_1', 'transparent', {}, 1, new Rect(0, 0, 16, 16))));\n        childElement.appendChild(render.drawPath(new PathOption(this.elementId + '_Zooming_ZoomIn_2', fillColor, null, null, 1, null, direction + '4.114-4.114c2.286,0,4.114,1.828,4.114,4.114C14.172,8.229,12.344,10.058,10.058,10.058z')));\n        childElement.appendChild(render.drawPolygon(new PolygonOption(this.elementId + '_Zooming_ZoomIn_3', polygonDirection + ' 9.749,6.466 9.749,8.466 10.749,8.466 10.749,6.466 12.749,6.466', fillColor)));\n        this.zoomInElements = childElement;\n        this.elementOpacity = chart.zoomModule.isPanning ? '0.2' : '1';\n        childElement.setAttribute('opacity', this.elementOpacity);\n        parentElement.appendChild(childElement);\n        this.wireEvents(childElement, this.zoomIn);\n    }\n    /**\n     * To create the ZoomOut button.\n     * @return {void}\n     * @private\n     */\n    createZoomOutButton(childElement, parentElement, chart) {\n        let render = this.chart.renderer;\n        let fillColor = this.fillColor;\n        let direction = 'M0,14.622L1.378,16l4.533-4.533v-0.711l0.266-0.266c1.022,0.889,2.4,1.422,3.866,';\n        direction += '1.422c3.289,0,5.955-2.666,5.955-5.955S13.333,0,10.044,0S4.089,2.667,4.134,5.911c0,1.466,0.533,2.844,';\n        direction += '1.422,3.866l-0.266,0.266H4.578L0,14.622L0,14.622z M5.911,5.911c0-2.311,1.822-4.133,4.133-4.133s4.133,1.822,4.133,';\n        childElement.id = this.elementId + '_Zooming_ZoomOut';\n        childElement.setAttribute('aria-label', this.chart.getLocalizedLabel('ZoomOut'));\n        childElement.appendChild(render.drawRectangle(new RectOption(this.elementId + '_Zooming_ZoomOut_1', 'transparent', {}, 1, new Rect(0, 0, 16, 16))));\n        childElement.appendChild(render.drawPath(new PathOption(this.elementId + '_Zooming_ZoomOut_2', fillColor, null, null, 1, null, direction + '4.133s-1.866,4.133-4.133,4.133S5.911,8.222,5.911,5.911z M12.567,6.466h-5v-1h5V6.466z')));\n        this.zoomOutElements = childElement;\n        this.elementOpacity = chart.zoomModule.isPanning ? '0.2' : '1';\n        childElement.setAttribute('opacity', this.elementOpacity);\n        parentElement.appendChild(childElement);\n        this.wireEvents(childElement, this.zoomOut);\n    }\n    /**\n     * To create the Reset button.\n     * @return {void}\n     * @private\n     */\n    createResetButton(childElement, parentElement, chart, isDevice) {\n        let render = this.chart.renderer;\n        let fillColor = this.fillColor;\n        let size;\n        let direction = 'M12.364,8h-2.182l2.909,3.25L16,8h-2.182c0-3.575-2.618-6.5-5.818-6.5c-1.128,0-2.218,0.366-3.091,';\n        direction += '1.016l1.055,1.178C6.581,3.328,7.272,3.125,8,3.125C10.4,3.125,12.363,5.319,12.364,8L12.364,8z M11.091,';\n        direction += '13.484l-1.055-1.178C9.419,12.672,8.728,12.875,8,12.875c-2.4,0-4.364-2.194-4.364-4.875h2.182L2.909,4.75L0,8h2.182c0,';\n        childElement.id = this.elementId + '_Zooming_Reset';\n        childElement.setAttribute('aria-label', this.chart.getLocalizedLabel('Reset'));\n        if (!isDevice) {\n            childElement.appendChild(render.drawRectangle(new RectOption(this.elementId + '_Zooming_Reset_1', 'transparent', {}, 1, new Rect(0, 0, 16, 16))));\n            childElement.appendChild(render.drawPath(new PathOption(this.elementId + '_Zooming_Reset_2', fillColor, null, null, 1, null, direction + '3.575,2.618,6.5,5.818,6.5C9.128,14.5,10.219,14.134,11.091,13.484L11.091,13.484z')));\n        }\n        else {\n            size = measureText(this.chart.getLocalizedLabel('ResetZoom'), { size: '12px' });\n            childElement.appendChild(render.drawRectangle(new RectOption(this.elementId + '_Zooming_Reset_1', 'transparent', {}, 1, new Rect(0, 0, size.width, size.height))));\n            textElement(new TextOption(this.elementId + '_Zooming_Reset_2', 0 + size.width / 2, 0 + size.height * 3 / 4, 'middle', this.chart.getLocalizedLabel('ResetZoom'), 'rotate(0,' + (0) + ',' + (0) + ')', 'auto'), { size: '12px' }, 'black', childElement);\n        }\n        parentElement.appendChild(childElement);\n        this.wireEvents(childElement, this.reset);\n    }\n    /**\n     * To bind events.\n     * @return {void}\n     * @private\n     */\n    wireEvents(element, process) {\n        EventHandler.add(element, 'mousedown touchstart', process, this);\n        EventHandler.add(element, 'mouseover', this.showTooltip, this);\n        EventHandler.add(element, 'mouseout', this.removeTooltip, this);\n    }\n    /**\n     * To show tooltip.\n     * @return {void}\n     * @private\n     */\n    showTooltip(event) {\n        let text = event.currentTarget.id.split('_Zooming_')[1];\n        let left = (event.pageX - (measureText(text, { size: '10px' }).width + 5));\n        if (!this.chart.isTouch) {\n            createTooltip('EJ2_Chart_ZoomTip', this.chart.getLocalizedLabel(text), (event.pageY + 10), left, '10px');\n        }\n    }\n    /** @private */\n    removeTooltip() {\n        removeElement('EJ2_Chart_ZoomTip');\n    }\n    // Toolkit events function calculation here.\n    /** @private */\n    reset() {\n        let chart = this.chart;\n        if (!chart.zoomModule.isDevice) {\n            remove(chart.zoomModule.toolkitElements);\n        }\n        this.removeTooltip();\n        chart.svgObject.setAttribute('cursor', 'auto');\n        chart.axisCollections.forEach((axis) => {\n            axis.zoomFactor = 1;\n            axis.zoomPosition = 0;\n        });\n        chart.disableTrackTooltip = false;\n        chart.zoomModule.isZoomed = chart.zoomModule.isPanning = chart.isChartDrag = chart.delayRedraw = false;\n        chart.zoomModule.touchMoveList = chart.zoomModule.touchStartList = [];\n        chart.zoomModule.pinchTarget = null;\n        chart.removeSvg();\n        chart.refreshAxis();\n        chart.refreshBound();\n        this.elementOpacity = '1';\n        return false;\n    }\n    zoomIn(e) {\n        this.zoomInOutCalculation(1, this.chart, this.chart.axisCollections, this.chart.zoomSettings.mode);\n        return false;\n    }\n    zoomOut(e) {\n        this.zoomInOutCalculation(-1, this.chart, this.chart.axisCollections, this.chart.zoomSettings.mode);\n        return false;\n    }\n    zoom(e) {\n        this.chart.zoomModule.isPanning = false;\n        let zoomModule = this.chart.zoomModule;\n        this.elementOpacity = '1';\n        this.chart.svgObject.setAttribute('cursor', 'auto');\n        this.zoomInElements.setAttribute('opacity', this.elementOpacity);\n        this.zoomOutElements.setAttribute('opacity', this.elementOpacity);\n        this.applySelection(this.zoomElements.childNodes, this.selectionColor);\n        this.applySelection(this.panElements.childNodes, '#737373');\n        return false;\n    }\n    /** @private */\n    pan() {\n        let zoomModule = this.chart.zoomModule;\n        let element;\n        this.chart.zoomModule.isPanning = true;\n        this.chart.svgObject.setAttribute('cursor', 'pointer');\n        this.elementOpacity = '0.2';\n        element = this.zoomInElements ? this.zoomInElements.setAttribute('opacity', this.elementOpacity) : null;\n        element = this.zoomOutElements ? this.zoomOutElements.setAttribute('opacity', this.elementOpacity) : null;\n        element = this.panElements ? this.applySelection(this.panElements.childNodes, this.selectionColor) : null;\n        element = this.zoomElements ? this.applySelection(this.zoomElements.childNodes, '#737373') : null;\n        return false;\n    }\n    zoomInOutCalculation(scale, chart, axes, mode) {\n        if (!chart.zoomModule.isPanning && this.elementOpacity !== '0.2') {\n            let zoomFactor;\n            let zoomPosition;\n            let cumulative;\n            chart.disableTrackTooltip = true;\n            chart.delayRedraw = true;\n            axes.forEach((axis) => {\n                if ((axis.orientation === 'Horizontal' && mode !== 'Y') ||\n                    (axis.orientation === 'Vertical' && mode !== 'X')) {\n                    cumulative = Math.max(Math.max(1 / minMax(axis.zoomFactor, 0, 1), 1) + (0.25 * scale), 1);\n                    zoomFactor = (cumulative === 1) ? 1 : minMax(1 / cumulative, 0, 1);\n                    zoomPosition = (cumulative === 1) ? 0 : axis.zoomPosition + ((axis.zoomFactor - zoomFactor) * 0.5);\n                    if (axis.zoomPosition !== zoomPosition || axis.zoomFactor !== zoomFactor) {\n                        zoomFactor = (zoomPosition + zoomFactor) > 1 ? (1 - zoomPosition) : zoomFactor;\n                    }\n                    axis.zoomFactor = zoomFactor;\n                    axis.zoomPosition = zoomPosition;\n                }\n            });\n        }\n    }\n    applySelection(elements, color) {\n        for (let i = 1, length = elements.length; i < length; i++) {\n            elements[i].setAttribute('fill', color);\n        }\n    }\n}\n\n/**\n * `Zooming` module handles the zooming for chart.\n */\nclass Zoom {\n    /**\n     * Constructor for Zooming module.\n     * @private.\n     */\n    constructor(chart) {\n        this.chart = chart;\n        this.isPointer = Browser.isPointer;\n        this.browserName = Browser.info.name;\n        this.wheelEvent = this.browserName === 'mozilla' ? (this.isPointer ? 'mousewheel' : 'DOMMouseScroll') : 'mousewheel';\n        this.cancelEvent = this.isPointer ? 'pointerleave' : 'mouseleave';\n        this.addEventListener();\n        this.isDevice = Browser.isDevice;\n        let zooming = chart.zoomSettings;\n        this.toolkit = new Toolkit(chart);\n        this.zooming = zooming;\n        this.elementId = chart.element.id;\n        this.zoomingRect = new Rect(0, 0, 0, 0);\n        this.zoomAxes = [];\n        this.zoomkitOpacity = 0.3;\n        this.isIOS = Browser.isIos || Browser.isIos7;\n        this.isZoomed = this.performedUI = this.zooming.enablePan && this.zooming.enableSelectionZooming;\n    }\n    /**\n     * Function that handles the Rectangular zooming.\n     * @return {void}\n     */\n    renderZooming(e, chart, isTouch) {\n        this.calculateZoomAxesRange(chart, chart.axisCollections);\n        if (this.zooming.enableSelectionZooming && (!isTouch\n            || (chart.isDoubleTap && this.touchStartList.length === 1)) && (!this.isPanning || chart.isDoubleTap)) {\n            this.isPanning = this.isDevice ? true : this.isPanning;\n            this.performedUI = true;\n            this.drawZoomingRectangle(chart);\n        }\n        else if (this.isPanning && chart.isChartDrag) {\n            if (!isTouch || (isTouch && this.touchStartList.length === 1)) {\n                this.pinchTarget = isTouch ? e.target : null;\n                this.doPan(chart, chart.axisCollections);\n            }\n        }\n    }\n    // Zooming rectangle drawn here\n    drawZoomingRectangle(chart) {\n        let areaBounds = chart.chartAxisLayoutPanel.seriesClipRect;\n        let startLocation = new ChartLocation(chart.previousMouseMoveX, chart.previousMouseMoveY);\n        let endLocation = new ChartLocation(chart.mouseX, chart.mouseY);\n        let rect = this.zoomingRect = getRectLocation(startLocation, endLocation, areaBounds);\n        if (rect.width > 0 && rect.height > 0) {\n            this.isZoomed = true;\n            chart.disableTrackTooltip = true;\n            chart.svgObject.setAttribute('cursor', 'crosshair');\n            if (this.zooming.mode === 'X') {\n                rect.height = areaBounds.height;\n                rect.y = areaBounds.y;\n            }\n            else if (this.zooming.mode === 'Y') {\n                rect.width = areaBounds.width;\n                rect.x = areaBounds.x;\n            }\n            chart.svgObject.appendChild(chart.renderer.drawRectangle(new RectOption(this.elementId + '_ZoomArea', chart.themeStyle.selectionRectFill, { color: chart.themeStyle.selectionRectStroke, width: 1 }, 1, rect, 0, 0, '', '3')));\n        }\n    }\n    // Panning performed here\n    doPan(chart, axes) {\n        if (chart.startMove && chart.crosshair.enable) {\n            return null;\n        }\n        let currentScale;\n        let offset;\n        this.isZoomed = true;\n        let translateX;\n        let translateY;\n        this.offset = !chart.delayRedraw ? chart.chartAxisLayoutPanel.seriesClipRect : this.offset;\n        chart.delayRedraw = true;\n        chart.disableTrackTooltip = true;\n        axes.forEach((axis) => {\n            currentScale = Math.max(1 / minMax(axis.zoomFactor, 0, 1), 1);\n            if (axis.orientation === 'Horizontal') {\n                offset = (chart.previousMouseMoveX - chart.mouseX) / axis.rect.width / currentScale;\n                axis.zoomPosition = minMax(axis.zoomPosition + offset, 0, (1 - axis.zoomFactor));\n            }\n            else {\n                offset = (chart.previousMouseMoveY - chart.mouseY) / axis.rect.height / currentScale;\n                axis.zoomPosition = minMax(axis.zoomPosition - offset, 0, (1 - axis.zoomFactor));\n            }\n        });\n        if (this.zooming.enableDeferredZooming) {\n            translateX = chart.mouseX - chart.mouseDownX;\n            translateY = chart.mouseY - chart.mouseDownY;\n            switch (this.zooming.mode) {\n                case 'X':\n                    translateY = 0;\n                    break;\n                case 'Y':\n                    translateX = 0;\n                    break;\n            }\n            this.setTransform(translateX, translateY, null, null, chart, false);\n            this.refreshAxis(chart.chartAxisLayoutPanel, chart, chart.axisCollections);\n        }\n        else {\n            this.performZoomRedraw(chart);\n        }\n        chart.previousMouseMoveX = chart.mouseX;\n        chart.previousMouseMoveY = chart.mouseY;\n    }\n    /**\n     * Redraw the chart on zooming.\n     * @return {void}\n     * @private\n     */\n    performZoomRedraw(chart) {\n        let rect = this.zoomingRect;\n        chart.animateSeries = false;\n        if (this.isZoomed) {\n            if (rect.width > 0 && rect.height > 0) {\n                this.performedUI = true;\n                chart.svgObject.setAttribute('cursor', 'auto');\n                this.doZoom(chart, chart.axisCollections, chart.chartAxisLayoutPanel.seriesClipRect);\n                chart.isDoubleTap = false;\n            }\n            else if (chart.disableTrackTooltip) {\n                chart.disableTrackTooltip = false;\n                chart.delayRedraw = false;\n                chart.removeSvg();\n                chart.refreshAxis();\n                chart.refreshBound();\n            }\n        }\n    }\n    refreshAxis(layout, chart, axes) {\n        let mode = chart.zoomSettings.mode;\n        layout.measureAxis(new Rect(chart.initialClipRect.x, chart.initialClipRect.y, chart.initialClipRect.width, chart.initialClipRect.height));\n        axes.map((axis, index) => {\n            if (axis.orientation === 'Horizontal' && mode !== 'Y') {\n                layout.drawXAxisLabels(axis, index, null, (axis.placeNextToAxisLine ? axis.updatedRect : axis.rect));\n            }\n            if (axis.orientation === 'Vertical' && mode !== 'X') {\n                layout.drawYAxisLabels(axis, index, null, (axis.placeNextToAxisLine ? axis.updatedRect : axis.rect));\n            }\n        });\n    }\n    // Rectangular zoom calculated here performed here\n    doZoom(chart, axes, bounds) {\n        let zoomRect = this.zoomingRect;\n        let mode = this.zooming.mode;\n        let argsData;\n        let previousZF;\n        let previousZP;\n        let currentZF;\n        let currentZP;\n        this.isPanning = chart.zoomSettings.enablePan || this.isPanning;\n        axes.forEach((axis) => {\n            previousZF = currentZF = axis.zoomFactor;\n            previousZP = currentZP = axis.zoomPosition;\n            argsData = {\n                cancel: false, name: zoomComplete, axis: axis, previousZoomFactor: previousZF, previousZoomPosition: previousZP,\n                currentZoomFactor: currentZF, currentZoomPosition: currentZP\n            };\n            if (axis.orientation === 'Horizontal') {\n                if (mode !== 'Y') {\n                    currentZP += Math.abs((zoomRect.x - bounds.x) / (bounds.width)) * axis.zoomFactor;\n                    currentZF *= (zoomRect.width / bounds.width);\n                    argsData.currentZoomPosition = currentZP;\n                    argsData.currentZoomFactor = currentZF;\n                    chart.trigger(zoomComplete, argsData);\n                }\n            }\n            else {\n                if (mode !== 'X') {\n                    currentZP += (1 - Math.abs((zoomRect.height + (zoomRect.y - bounds.y)) / (bounds.height))) * axis.zoomFactor;\n                    currentZF *= (zoomRect.height / bounds.height);\n                    argsData.currentZoomFactor = currentZF;\n                    argsData.currentZoomPosition = currentZP;\n                    chart.trigger(zoomComplete, argsData);\n                }\n            }\n            if (!argsData.cancel) {\n                axis.zoomFactor = argsData.currentZoomFactor;\n                axis.zoomPosition = argsData.currentZoomPosition;\n            }\n        });\n        this.zoomingRect = new Rect(0, 0, 0, 0);\n        this.performZoomRedraw(chart);\n    }\n    /**\n     * Function that handles the Mouse wheel zooming.\n     * @return {void}\n     * @private\n     */\n    performMouseWheelZooming(e, mouseX, mouseY, chart, axes) {\n        let direction = (this.browserName === 'mozilla' && !this.isPointer) ?\n            -(e.detail) / 3 > 0 ? 1 : -1 : (e.wheelDelta / 120) > 0 ? 1 : -1;\n        let mode = this.zooming.mode;\n        let origin = 0.5;\n        let cumulative;\n        let zoomFactor;\n        let zoomPosition;\n        this.isZoomed = true;\n        this.calculateZoomAxesRange(chart, chart.axisCollections);\n        chart.disableTrackTooltip = true;\n        this.performedUI = true;\n        this.isPanning = chart.zoomSettings.enablePan || this.isPanning;\n        axes.forEach((axis) => {\n            if ((axis.orientation === 'Vertical' && mode !== 'X') ||\n                (axis.orientation === 'Horizontal' && mode !== 'Y')) {\n                cumulative = Math.max(Math.max(1 / minMax(axis.zoomFactor, 0, 1), 1) + (0.25 * direction), 1);\n                if (cumulative >= 1) {\n                    origin = axis.orientation === 'Horizontal' ? mouseX / axis.rect.width : 1 - (mouseY / axis.rect.height);\n                    origin = origin > 1 ? 1 : origin < 0 ? 0 : origin;\n                    zoomFactor = (cumulative === 1) ? 1 : minMax(1 / cumulative, 0, 1);\n                    zoomPosition = (cumulative === 1) ? 0 : axis.zoomPosition + ((axis.zoomFactor - zoomFactor) * origin);\n                    if (axis.zoomPosition !== zoomPosition || axis.zoomFactor !== zoomFactor) {\n                        zoomFactor = (zoomPosition + zoomFactor) > 1 ? (1 - zoomPosition) : zoomFactor;\n                    }\n                }\n                axis.zoomFactor = zoomFactor;\n                axis.zoomPosition = zoomPosition;\n            }\n        });\n        this.performZoomRedraw(chart);\n    }\n    /**\n     * Function that handles the Pinch zooming.\n     * @return {void}\n     * @private\n     */\n    performPinchZooming(e, chart) {\n        if ((this.zoomingRect.width > 0 && this.zoomingRect.height > 0) || (chart.startMove && chart.crosshair.enable)) {\n            return false;\n        }\n        this.calculateZoomAxesRange(chart, chart.axisCollections);\n        this.isZoomed = true;\n        this.isPanning = true;\n        this.performedUI = true;\n        this.offset = !chart.delayRedraw ? chart.chartAxisLayoutPanel.seriesClipRect : this.offset;\n        chart.delayRedraw = true;\n        chart.disableTrackTooltip = true;\n        let elementOffset = chart.element.getBoundingClientRect();\n        let touchDown = this.touchStartList;\n        let touchMove = this.touchMoveList;\n        let touch0StartX = touchDown[0].pageX - elementOffset.left;\n        let touch0StartY = touchDown[0].pageY - elementOffset.top;\n        let touch0EndX = touchMove[0].pageX - elementOffset.left;\n        let touch0EndY = touchMove[0].pageY - elementOffset.top;\n        let touch1StartX = touchDown[1].pageX - elementOffset.left;\n        let touch1StartY = touchDown[1].pageY - elementOffset.top;\n        let touch1EndX = touchMove[1].pageX - elementOffset.left;\n        let touch1EndY = touchMove[1].pageY - elementOffset.top;\n        let scaleX;\n        let scaleY;\n        let translateXValue;\n        let translateYValue;\n        let pinchRect;\n        let clipX;\n        let clipY;\n        scaleX = Math.abs(touch0EndX - touch1EndX) / Math.abs(touch0StartX - touch1StartX);\n        scaleY = Math.abs(touch0EndY - touch1EndY) / Math.abs(touch0StartY - touch1StartY);\n        clipX = ((this.offset.x - touch0EndX) / scaleX) + touch0StartX;\n        clipY = ((this.offset.y - touch0EndY) / scaleY) + touch0StartY;\n        pinchRect = new Rect(clipX, clipY, this.offset.width / scaleX, this.offset.height / scaleY);\n        translateXValue = (touch0EndX - (scaleX * touch0StartX));\n        translateYValue = (touch0EndY - (scaleY * touch0StartY));\n        if (!isNaN(scaleX - scaleX) && !isNaN(scaleY - scaleY)) {\n            switch (this.zooming.mode) {\n                case 'XY':\n                    this.setTransform(translateXValue, translateYValue, scaleX, scaleY, chart, true);\n                    break;\n                case 'X':\n                    this.setTransform(translateXValue, 0, scaleX, 1, chart, true);\n                    break;\n                case 'Y':\n                    this.setTransform(0, translateYValue, 1, scaleY, chart, true);\n                    break;\n            }\n        }\n        this.calculatePinchZoomFactor(chart, pinchRect);\n        this.refreshAxis(chart.chartAxisLayoutPanel, chart, chart.axisCollections);\n        return true;\n    }\n    calculatePinchZoomFactor(chart, pinchRect) {\n        let mode = this.zooming.mode;\n        let selectionMin;\n        let selectionMax;\n        let rangeMin;\n        let rangeMax;\n        let value;\n        let axisTrans;\n        chart.axisCollections.forEach((axis, index) => {\n            if ((axis.orientation === 'Horizontal' && mode !== 'Y') ||\n                (axis.orientation === 'Vertical' && mode !== 'X')) {\n                if (axis.orientation === 'Horizontal') {\n                    value = pinchRect.x - this.offset.x;\n                    axisTrans = axis.rect.width / this.zoomAxes[index].delta;\n                    rangeMin = value / axisTrans + this.zoomAxes[index].min;\n                    value = pinchRect.x + pinchRect.width - this.offset.x;\n                    rangeMax = value / axisTrans + this.zoomAxes[index].min;\n                }\n                else {\n                    value = pinchRect.y - this.offset.y;\n                    axisTrans = axis.rect.height / this.zoomAxes[index].delta;\n                    rangeMin = (value * -1 + axis.rect.height) / axisTrans + this.zoomAxes[index].min;\n                    value = pinchRect.y + pinchRect.height - this.offset.y;\n                    rangeMax = (value * -1 + axis.rect.height) / axisTrans + this.zoomAxes[index].min;\n                }\n                selectionMin = Math.min(rangeMin, rangeMax);\n                selectionMax = Math.max(rangeMin, rangeMax);\n                axis.zoomPosition = (selectionMin - this.zoomAxes[index].actualMin) / this.zoomAxes[index].actualDelta;\n                axis.zoomFactor = (selectionMax - selectionMin) / this.zoomAxes[index].actualDelta;\n                axis.zoomPosition = axis.zoomPosition < 0 ? 0 : axis.zoomPosition;\n                axis.zoomFactor = axis.zoomFactor > 1 ? 1 : axis.zoomFactor;\n            }\n        });\n    }\n    // Series transformation style applied here.\n    setTransform(transX, transY, scaleX, scaleY, chart, isPinch) {\n        chart.seriesElements.setAttribute('clip-path', 'url(#' + this.elementId + '_ChartAreaClipRect_)');\n        if (chart.indicatorElements) {\n            chart.indicatorElements.setAttribute('clip-path', 'url(#' + this.elementId + '_ChartAreaClipRect_)');\n        }\n        let translate;\n        let xAxisLoc;\n        let yAxisLoc;\n        let element;\n        if (transX !== null && transY !== null) {\n            chart.visibleSeries.forEach((value) => {\n                xAxisLoc = chart.requireInvertedAxis ? value.yAxis.rect.x : value.xAxis.rect.x;\n                yAxisLoc = chart.requireInvertedAxis ? value.xAxis.rect.y : value.yAxis.rect.y;\n                translate = 'translate(' + (transX + (isPinch ? (scaleX * xAxisLoc) : xAxisLoc)) +\n                    ',' + (transY + (isPinch ? (scaleY * yAxisLoc) : yAxisLoc)) + ')';\n                translate = (scaleX || scaleY) ? translate + ' scale(' + scaleX + ' ' + scaleY + ')' : translate;\n                if (value.category === 'Indicator') {\n                    value.seriesElement.parentElement.setAttribute('transform', translate);\n                }\n                else {\n                    value.seriesElement.setAttribute('transform', translate);\n                }\n                element = getElement(chart.element.id + '_Series_' + value.index + '_DataLabelCollections');\n                if (value.errorBarElement) {\n                    value.errorBarElement.setAttribute('transform', translate);\n                }\n                if (value.symbolElement) {\n                    value.symbolElement.setAttribute('transform', translate);\n                }\n                if (value.textElement) {\n                    value.textElement.setAttribute('visibility', 'hidden');\n                    value.shapeElement.setAttribute('visibility', 'hidden');\n                }\n                if (element) {\n                    element.style.visibility = 'hidden';\n                }\n            });\n        }\n    }\n    calculateZoomAxesRange(chart, axes) {\n        let range;\n        let axisRange;\n        chart.axisCollections.forEach((axis, index) => {\n            axisRange = axis.visibleRange;\n            if (this.zoomAxes[index]) {\n                if (!chart.delayRedraw) {\n                    this.zoomAxes[index].min = axisRange.min;\n                    this.zoomAxes[index].delta = axisRange.delta;\n                }\n            }\n            else {\n                range = {\n                    actualMin: axis.actualRange.min,\n                    actualDelta: axis.actualRange.delta,\n                    min: axisRange.min,\n                    delta: axisRange.delta\n                };\n                this.zoomAxes[index] = range;\n            }\n        });\n    }\n    // Zooming Toolkit created here\n    showZoomingToolkit(chart) {\n        let toolboxItems = this.zooming.toolbarItems;\n        let areaBounds = chart.chartAxisLayoutPanel.seriesClipRect;\n        let spacing = 5;\n        let render = chart.renderer;\n        let length = this.isDevice ? 1 : toolboxItems.length;\n        let iconSize = this.isDevice ? measureText('Reset Zoom', { size: '12px' }).width : 16;\n        let height = this.isDevice ? measureText('Reset Zoom', { size: '12px' }).height : 22;\n        let width = (length * iconSize) + ((length + 1) * spacing) + ((length - 1) * spacing);\n        let transX = areaBounds.x + areaBounds.width - width - spacing;\n        let transY = (areaBounds.y + spacing);\n        let xPosition = spacing;\n        let outerElement;\n        let toolkit = this.toolkit;\n        let element;\n        let shadowElement = '<filter id=\"chart_shadow\" height=\"130%\"><feGaussianBlur in=\"SourceAlpha\" stdDeviation=\"5\"/>';\n        shadowElement += '<feOffset dx=\"-3\" dy=\"4\" result=\"offsetblur\"/><feComponentTransfer><feFuncA type=\"linear\" slope=\"1\"/>';\n        shadowElement += '</feComponentTransfer><feMerge><feMergeNode/><feMergeNode in=\"SourceGraphic\"/></feMerge></filter>';\n        if (length === 0 || getElement(this.elementId + '_Zooming_KitCollection')) {\n            return false;\n        }\n        let defElement = render.createDefs();\n        toolboxItems = this.isDevice ? ['Reset'] : toolboxItems;\n        defElement.innerHTML = shadowElement;\n        this.toolkitElements = render.createGroup({\n            id: this.elementId + '_Zooming_KitCollection',\n            transform: 'translate(' + transX + ',' + transY + ')'\n        });\n        this.toolkitElements.appendChild(defElement);\n        this.toolkitElements.appendChild(render.drawRectangle(new RectOption(this.elementId + '_Zooming_Rect', '#fafafa', { color: 'transparent', width: 1 }, 1, new Rect(0, 0, width, (height + (spacing * 2))), 0, 0)));\n        outerElement = render.drawRectangle(new RectOption(this.elementId + '_Zooming_Rect', '#fafafa', { color: 'transparent', width: 1 }, 0.1, new Rect(0, 0, width, (height + (spacing * 2))), 0, 0));\n        outerElement.setAttribute('filter', 'url(#chart_shadow)');\n        this.toolkitElements.appendChild(outerElement);\n        let currentItem;\n        for (let i = 1; i <= length; i++) {\n            currentItem = toolboxItems[i - 1];\n            element = render.createGroup({\n                transform: 'translate(' + xPosition + ',' + (this.isDevice ? spacing : (spacing + 3)) + ')'\n            });\n            // for desktop toolkit hight is 32 and top padding is 8 icon size 16\n            switch (currentItem) {\n                case 'Pan':\n                    toolkit.createPanButton(element, this.toolkitElements, chart);\n                    break;\n                case 'Zoom':\n                    toolkit.createZoomButton(element, this.toolkitElements, chart);\n                    break;\n                case 'ZoomIn':\n                    toolkit.createZoomInButton(element, this.toolkitElements, chart);\n                    break;\n                case 'ZoomOut':\n                    toolkit.createZoomOutButton(element, this.toolkitElements, chart);\n                    break;\n                case 'Reset':\n                    toolkit.createResetButton(element, this.toolkitElements, chart, this.isDevice);\n                    break;\n            }\n            xPosition += iconSize + (spacing * 2);\n        }\n        this.toolkitElements.setAttribute('opacity', this.isDevice ? '1' : '' + this.zoomkitOpacity);\n        this.toolkitElements.setAttribute('cursor', 'auto');\n        chart.svgObject.appendChild(this.toolkitElements);\n        if (!this.isDevice) {\n            EventHandler.add(this.toolkitElements, 'mousemove touchstart', this.zoomToolkitMove, this);\n            EventHandler.add(this.toolkitElements, 'mouseleave touchend', this.zoomToolkitLeave, this);\n            if (this.isPanning) {\n                toolkit.pan();\n            }\n        }\n        return true;\n    }\n    /**\n     * To the show the zooming toolkit.\n     * @return {void}\n     * @private\n     */\n    applyZoomToolkit(chart, axes) {\n        let showToolkit = this.isAxisZoomed(axes);\n        if (showToolkit) {\n            this.showZoomingToolkit(chart);\n            this.isZoomed = true;\n        }\n        else {\n            this.toolkit.removeTooltip();\n            this.isPanning = false;\n            this.isZoomed = false;\n            chart.svgObject.setAttribute('cursor', 'auto');\n        }\n    }\n    /**\n     * Return boolean property to show zooming toolkit.\n     * @return {void}\n     * @private\n     */\n    isAxisZoomed(axes) {\n        let showToolkit = false;\n        axes.forEach((axis) => {\n            showToolkit = (showToolkit || (axis.zoomFactor !== 1 || axis.zoomPosition !== 0));\n        });\n        return showToolkit;\n    }\n    zoomToolkitMove(e) {\n        let element = this.toolkitElements;\n        let opacity = +element.getAttribute('opacity');\n        this.zoomkitOpacity = 1;\n        element.setAttribute('opacity', '' + this.zoomkitOpacity);\n        return false;\n    }\n    zoomToolkitLeave(e) {\n        let element = this.toolkitElements;\n        this.zoomkitOpacity = 0.3;\n        element.setAttribute('opacity', '' + this.zoomkitOpacity);\n        return false;\n    }\n    /**\n     * @hidden\n     */\n    addEventListener() {\n        if (this.chart.isDestroyed) {\n            return;\n        }\n        EventHandler.add(this.chart.element, this.wheelEvent, this.chartMouseWheel, this);\n        this.chart.on(Browser.touchMoveEvent, this.mouseMoveHandler, this);\n        this.chart.on(Browser.touchStartEvent, this.mouseDownHandler, this);\n        this.chart.on(Browser.touchEndEvent, this.mouseUpHandler, this);\n        this.chart.on(this.cancelEvent, this.mouseCancelHandler, this);\n    }\n    /**\n     * @hidden\n     */\n    removeEventListener() {\n        if (this.chart.isDestroyed) {\n            return;\n        }\n        EventHandler.remove(this.chart.element, this.wheelEvent, this.chartMouseWheel);\n        this.chart.off(Browser.touchMoveEvent, this.mouseMoveHandler);\n        this.chart.off(Browser.touchStartEvent, this.mouseDownHandler);\n        this.chart.off(Browser.touchEndEvent, this.mouseUpHandler);\n        this.chart.off(this.cancelEvent, this.mouseCancelHandler);\n    }\n    /**\n     * Handles the mouse wheel on chart.\n     * @return {boolean}\n     * @private\n     */\n    chartMouseWheel(e) {\n        let chart = this.chart;\n        let offset = chart.element.getBoundingClientRect();\n        let svgRect = getElement(chart.element.id + '_svg').getBoundingClientRect();\n        let mouseX = (e.clientX - offset.left) - Math.max(svgRect.left - offset.left, 0);\n        let mouseY = (e.clientY - offset.top) - Math.max(svgRect.top - offset.top, 0);\n        if (this.zooming.enableMouseWheelZooming &&\n            withInBounds(mouseX, mouseY, chart.chartAxisLayoutPanel.seriesClipRect)) {\n            e.preventDefault();\n            this.performMouseWheelZooming(e, mouseX, mouseY, chart, chart.axisCollections);\n        }\n        return false;\n    }\n    /**\n     * @hidden\n     */\n    mouseMoveHandler(e) {\n        //Zooming for chart\n        let chart = this.chart;\n        let touches = null;\n        if (e.type === 'touchmove') {\n            if (e.preventDefault && this.isIOS &&\n                (this.isPanning || (chart.isDoubleTap)\n                    || (this.zooming.enablePinchZooming && this.touchStartList.length > 1))) {\n                e.preventDefault();\n            }\n            touches = e.touches;\n        }\n        if (chart.isChartDrag) {\n            if (chart.isTouch) {\n                this.touchMoveList = this.addTouchPointer(this.touchMoveList, e, touches);\n                if (this.zooming.enablePinchZooming && this.touchMoveList.length > 1\n                    && this.touchStartList.length > 1) {\n                    this.performPinchZooming(e, chart);\n                }\n            }\n            this.renderZooming(e, chart, chart.isTouch);\n        }\n    }\n    /**\n     * @hidden\n     */\n    mouseDownHandler(e) {\n        //Zooming for chart\n        let chart = this.chart;\n        let touches = null;\n        let target;\n        if (e.type === 'touchstart') {\n            touches = e.touches;\n            target = e.target;\n        }\n        else {\n            target = e.target;\n        }\n        if (target.id.indexOf(chart.element.id + '_Zooming_') === -1 &&\n            withInBounds(chart.previousMouseMoveX, chart.previousMouseMoveY, chart.chartAxisLayoutPanel.seriesClipRect)) {\n            chart.isChartDrag = true;\n        }\n        if (chart.isTouch) {\n            this.touchStartList = this.addTouchPointer(this.touchStartList, e, touches);\n        }\n    }\n    /**\n     * @hidden\n     */\n    mouseUpHandler(e) {\n        let chart = this.chart;\n        let performZoomRedraw = e.target.id.indexOf(chart.element.id + '_ZoomOut_') === -1 ||\n            e.target.id.indexOf(chart.element.id + '_ZoomIn_') === -1;\n        if (chart.isChartDrag || performZoomRedraw) {\n            this.performZoomRedraw(chart);\n        }\n        if (chart.isTouch) {\n            if (chart.isDoubleTap && withInBounds(chart.mouseX, chart.mouseY, chart.chartAxisLayoutPanel.seriesClipRect)\n                && this.touchStartList.length === 1 && this.isZoomed) {\n                this.toolkit.reset();\n            }\n            this.touchStartList = [];\n            chart.isDoubleTap = false;\n        }\n    }\n    /**\n     * @hidden\n     */\n    mouseCancelHandler(e) {\n        if (this.isZoomed) {\n            this.performZoomRedraw(this.chart);\n        }\n        this.pinchTarget = null;\n        this.touchStartList = [];\n        this.touchMoveList = [];\n    }\n    /**\n     * Handles the touch pointer.\n     * @return {boolean}\n     * @private\n     */\n    addTouchPointer(touchList, e, touches) {\n        if (touches) {\n            touchList = [];\n            for (let i = 0, length = touches.length; i < length; i++) {\n                touchList.push({ pageX: touches[i].clientX, pageY: touches[i].clientY, pointerId: null });\n            }\n        }\n        else {\n            touchList = touchList ? touchList : [];\n            if (touchList.length === 0) {\n                touchList.push({ pageX: e.clientX, pageY: e.clientY, pointerId: e.pointerId });\n            }\n            else {\n                for (let i = 0, length = touchList.length; i < length; i++) {\n                    if (touchList[i].pointerId === e.pointerId) {\n                        touchList[i] = { pageX: e.clientX, pageY: e.clientY, pointerId: e.pointerId };\n                    }\n                    else {\n                        touchList.push({ pageX: e.clientX, pageY: e.clientY, pointerId: e.pointerId });\n                    }\n                }\n            }\n        }\n        return touchList;\n    }\n    /**\n     * Get module name.\n     */\n    getModuleName() {\n        // Returns te module name\n        return 'Zoom';\n    }\n    /**\n     * To destroy the zooming.\n     * @return {void}\n     * @private\n     */\n    destroy(chart) {\n        // Destroy method performed here\n        this.removeEventListener();\n    }\n}\n\n/**\n * Selection Module handles the selection for chart.\n * @private\n */\nclass BaseSelection {\n    constructor(control) {\n        this.control = control;\n    }\n    /**\n     * To create selection styles for series\n     */\n    seriesStyles() {\n        let seriesclass;\n        let style = document.getElementById(this.styleId);\n        if (isNullOrUndefined(style)) {\n            style = document.createElement('style');\n            style.setAttribute('id', this.styleId);\n            for (let series of this.control.visibleSeries) {\n                seriesclass = series.selectionStyle || this.styleId + '_series_' + series.index;\n                style.innerHTML += series.selectionStyle ? '' : '.' + seriesclass + ' { } ';\n            }\n            style.innerHTML += '.' + this.unselected + ' { opacity:' + (0.3) + ';} ';\n            document.body.appendChild(style);\n        }\n    }\n    /**\n     * To concat indexes\n     */\n    concatIndexes(userIndexes, localIndexes) {\n        return userIndexes.concat(localIndexes);\n    }\n    /**\n     * Selected points series visibility checking on legend click\n     */\n    checkVisibility(selectedIndexes) {\n        let visible = false;\n        let uniqueSeries = [];\n        for (let index of selectedIndexes) {\n            if (uniqueSeries.indexOf(index.series) === -1) {\n                uniqueSeries.push(index.series);\n            }\n        }\n        for (let index of uniqueSeries) {\n            if (this.control.series[index].visible) {\n                visible = true;\n                break;\n            }\n        }\n        return visible;\n    }\n    /**\n     * To add svg element style class\n     * @private\n     */\n    addSvgClass(element, className) {\n        let elementClassName = element.getAttribute('class') || '';\n        elementClassName += ((elementClassName !== '') ? ' ' : '');\n        if (elementClassName.indexOf(className) === -1) {\n            element.setAttribute('class', elementClassName + className);\n        }\n    }\n    /**\n     * To remove svg element style class\n     * @private\n     */\n    removeSvgClass(element, className) {\n        let elementClassName = element.getAttribute('class') || '';\n        if (elementClassName.indexOf(className) > -1) {\n            element.setAttribute('class', elementClassName.replace(className, ''));\n        }\n    }\n    /**\n     * To get children from parent element\n     */\n    getChildren(parent) {\n        let children = [];\n        for (let i = 0; i < parent.childNodes.length; i++) {\n            if (parent.childNodes[i].tagName !== 'defs') {\n                children.push(parent.childNodes[i]);\n            }\n        }\n        return children;\n    }\n}\n\n/**\n * Selection src file\n */\n/**\n * `Selection` module handles the selection for chart.\n * @private\n */\nclass Selection extends BaseSelection {\n    /**\n     * Constructor for selection module.\n     * @private.\n     */\n    constructor(chart) {\n        super(chart);\n        this.chart = chart;\n        this.renderer = chart.renderer;\n        this.addEventListener();\n    }\n    /**\n     * Binding events for selection module.\n     */\n    addEventListener() {\n        if (this.chart.isDestroyed) {\n            return;\n        }\n        let cancelEvent = Browser.isPointer ? 'pointerleave' : 'mouseleave';\n        this.chart.on(Browser.touchMoveEvent, this.mouseMove, this);\n        this.chart.on(cancelEvent, this.completeSelection, this);\n        this.chart.on('click', this.calculateSelectedElements, this);\n        this.chart.on(Browser.touchStartEvent, this.mousedown, this);\n        this.chart.on(Browser.touchEndEvent, this.completeSelection, this);\n    }\n    /**\n     * Chart mouse down\n     */\n    mousedown(e) {\n        let chart = this.chart;\n        if (chart.selectionMode === 'None' || chart.isChartDrag) {\n            return;\n        }\n        if (chart.isDoubleTap || !chart.isTouch || this.rectPoints) {\n            this.dragStart(chart, chart.chartAxisLayoutPanel.seriesClipRect, chart.mouseDownX, chart.mouseDownY, e);\n        }\n    }\n    /**\n     * UnBinding events for selection module.\n     */\n    removeEventListener() {\n        if (this.chart.isDestroyed) {\n            return;\n        }\n        this.chart.off(Browser.touchMoveEvent, this.mouseMove);\n        this.chart.off('pointerleave' || 'mouseleave', this.completeSelection);\n        this.chart.off('click', this.calculateSelectedElements);\n        this.chart.off(Browser.touchStartEvent, this.mousedown);\n        this.chart.off(Browser.touchEndEvent, this.completeSelection);\n    }\n    /**\n     * To find private variable values\n     */\n    initPrivateVariables(chart) {\n        this.styleId = chart.element.id + '_ej2_chart_selection';\n        this.unselected = chart.element.id + '_ej2_deselected';\n        this.closeIconId = chart.element.id + '_ej2_drag_close';\n        this.draggedRectGroup = chart.element.id + '_ej2_drag_group';\n        this.draggedRect = chart.element.id + '_ej2_drag_rect';\n        this.selectedDataIndexes = [];\n        this.rectPoints = null;\n        this.isSeriesMode = chart.selectionMode === 'Series';\n    }\n    /**\n     * Method to select the point and series.\n     * @return {void}\n     */\n    invokeSelection(chart) {\n        this.initPrivateVariables(chart);\n        this.series = extend({}, chart.visibleSeries, null, true);\n        this.seriesStyles();\n        if (!(chart.selectionMode.indexOf('Drag') > -1)) {\n            this.selectDataIndex(chart, this.concatIndexes(chart.selectedDataIndexes, this.selectedDataIndexes));\n        }\n    }\n    generateStyle(series) {\n        if (series) {\n            return (series.selectionStyle || this.styleId + '_series_' + series.index);\n        }\n        return 'undefined';\n    }\n    selectDataIndex(chart, indexes) {\n        for (let index of indexes) {\n            this.performSelection(index, chart, this.getElementByIndex(chart, index)[0]);\n        }\n    }\n    getElementByIndex(chart, index, suffix = '') {\n        let elementId = chart.element.id + '_Series_' + index.series + '_Point' + '_' + index.point;\n        let series = chart.series[index.series];\n        elementId = (!series.isRectSeries && series.type !== 'Scatter' && series.type !== 'Bubble' &&\n            series.marker.visible) ? (elementId + '_Symbol' + suffix) : elementId;\n        return [getElement(elementId), (series.type === 'RangeArea' && series.marker.visible) ? getElement(elementId + '1') : null];\n    }\n    getClusterElements(chart, index) {\n        let clusters = [];\n        for (let series of chart.visibleSeries) {\n            index = new Index(series.index, index.point);\n            clusters.push(this.getElementByIndex(chart, index)[0]);\n        }\n        return clusters;\n    }\n    findElements(chart, series, index, suffix = '') {\n        if (this.isSeriesMode) {\n            return this.getSeriesElements(series);\n        }\n        else if (chart.selectionMode === 'Cluster') {\n            return this.getClusterElements(chart, index);\n        }\n        else {\n            return this.getElementByIndex(chart, index, suffix);\n        }\n    }\n    /**\n     * To find the selected element.\n     * @return {void}\n     * @private\n     */\n    calculateSelectedElements(event) {\n        if (this.chart.selectionMode === 'None' || event.target.id.indexOf(this.chart.element.id + '_') === -1) {\n            return;\n        }\n        if (event.target.id.indexOf('_Series_') > -1) {\n            this.performSelection(this.indexFinder(event.target.id), this.chart, event.target);\n        }\n    }\n    performSelection(index, chart, element) {\n        this.isSeriesMode = chart.selectionMode === 'Series';\n        if (chart.series[index.series].type === 'BoxAndWhisker' &&\n            element.id === chart.element.id + '_Series_' + index.series + '_Point_' + index.point + '_BoxPath') {\n            element = element.parentElement;\n        }\n        switch (chart.selectionMode) {\n            case 'Series':\n                this.selection(chart, index, this.getSeriesElements(chart.series[index.series]));\n                this.blurEffect(chart.element.id, chart.visibleSeries);\n                break;\n            case 'Point':\n                if (!isNaN(index.point)) {\n                    this.selection(chart, index, [element]);\n                    this.blurEffect(chart.element.id, chart.visibleSeries);\n                }\n                break;\n            case 'Cluster':\n                if (!isNaN(index.point)) {\n                    this.clusterSelection(chart, chart.series, index);\n                    this.blurEffect(chart.element.id, chart.visibleSeries);\n                }\n                break;\n        }\n    }\n    selection(chart, index, selectedElements) {\n        if (!chart.isMultiSelect && (chart.selectionMode.indexOf('Drag') === -1)) {\n            this.removeMultiSelectEelments(chart, this.selectedDataIndexes, index, chart.series);\n        }\n        let className = selectedElements[0] && (selectedElements[0].getAttribute('class') || '');\n        if (selectedElements[0] && className.indexOf(this.getSelectionClass(selectedElements[0].id)) > -1) {\n            this.removeStyles(selectedElements);\n            this.addOrRemoveIndex(this.selectedDataIndexes, index);\n        }\n        else {\n            this.applyStyles(selectedElements);\n            this.addOrRemoveIndex(this.selectedDataIndexes, index, true);\n        }\n    }\n    clusterSelection(chart, series, index) {\n        this.selection(chart, index, this.getClusterElements(chart, new Index(index.series, index.point)));\n    }\n    removeMultiSelectEelments(chart, index, currentIndex, seriesCollection) {\n        let series;\n        for (let i = 0; i < index.length; i++) {\n            series = seriesCollection[index[i].series];\n            if ((this.isSeriesMode && !this.toEquals(index[i], currentIndex, this.isSeriesMode)) ||\n                (this.control.selectionMode === 'Cluster' && !this.toEquals(index[i], currentIndex, false)) ||\n                (!this.isSeriesMode && this.toEquals(index[i], currentIndex, true) && !this.toEquals(index[i], currentIndex, false))) {\n                this.removeStyles(this.findElements(chart, series, index[i]));\n                index.splice(i, 1);\n                i--;\n            }\n        }\n    }\n    blurEffect(chartId, visibleSeries) {\n        let visibility = this.checkVisibility(this.selectedDataIndexes); // legend click scenario\n        for (let series of visibleSeries) {\n            if (series.visible) {\n                this.checkSelectionElements(getElement(chartId + 'SeriesGroup' + series.index), this.generateStyle(series), visibility);\n                if (!isNullOrUndefined(getElement(chartId + 'SymbolGroup' + series.index))) {\n                    this.checkSelectionElements(getElement(chartId + 'SymbolGroup' + series.index), this.generateStyle(series), visibility);\n                }\n            }\n        }\n    }\n    checkSelectionElements(element, className, visibility) {\n        let children = (this.isSeriesMode ? [element] : element.childNodes);\n        let elementClassName;\n        let parentClassName;\n        let legendShape;\n        let selectElement = element;\n        for (let i = 0; i < children.length; i++) {\n            elementClassName = children[i].getAttribute('class') || '';\n            parentClassName = children[i].parentNode.getAttribute('class') || '';\n            if (elementClassName.indexOf(className) === -1 &&\n                parentClassName.indexOf(className) === -1 && visibility) {\n                this.addSvgClass(children[i], this.unselected);\n            }\n            else {\n                selectElement = children[i];\n                this.removeSvgClass(children[i], this.unselected);\n            }\n        }\n        if (this.control.legendModule && this.control.legendSettings.visible) {\n            legendShape = document.getElementById(this.control.element.id + '_chart_legend_shape_' + className.split('_series_')[1]);\n            if (legendShape) {\n                elementClassName = selectElement.getAttribute('class') || '';\n                parentClassName = selectElement.parentNode.getAttribute('class') || '';\n                if (elementClassName.indexOf(className) === -1 && parentClassName.indexOf(className) === -1 && visibility) {\n                    this.addSvgClass(legendShape, this.unselected);\n                }\n                else {\n                    this.removeSvgClass(legendShape, this.unselected);\n                }\n            }\n        }\n    }\n    applyStyles(elements) {\n        for (let element of elements) {\n            if (element) {\n                this.removeSvgClass(element.parentNode, this.unselected);\n                this.removeSvgClass(element, this.unselected);\n                this.addSvgClass(element, this.getSelectionClass(element.id));\n            }\n        }\n    }\n    getSelectionClass(id) {\n        return this.generateStyle(this.control.series[this.indexFinder(id).series]);\n    }\n    removeStyles(elements) {\n        for (let element of elements) {\n            if (element) {\n                this.removeSvgClass(element, this.getSelectionClass(element.id));\n            }\n        }\n    }\n    addOrRemoveIndex(indexes, index, add) {\n        for (let i = 0; i < indexes.length; i++) {\n            if (this.toEquals(indexes[i], index, this.isSeriesMode)) {\n                indexes.splice(i, 1);\n                i--;\n            }\n        }\n        if (add) {\n            indexes.push(index);\n        }\n    }\n    toEquals(first, second, checkSeriesOnly) {\n        return ((first.series === second.series || (this.control.selectionMode === 'Cluster' && !checkSeriesOnly))\n            && (checkSeriesOnly || (first.point === second.point)));\n    }\n    /**\n     * To redraw the selected points.\n     * @return {void}\n     * @private\n     */\n    redrawSelection(chart, oldMode) {\n        this.isSeriesMode = oldMode === 'Series';\n        let selectedDataIndexes = extend([], this.selectedDataIndexes, null, true);\n        this.removeSelectedElements(chart, this.selectedDataIndexes, chart.series);\n        this.blurEffect(chart.element.id, chart.visibleSeries);\n        this.selectDataIndex(chart, selectedDataIndexes);\n    }\n    /** @private */\n    legendSelection(chart, series) {\n        let seriesStyle = this.generateStyle(chart.visibleSeries[series]);\n        let selectedElements = document.getElementsByClassName(seriesStyle);\n        this.isSeriesMode = chart.selectionMode === 'Series';\n        let isBlurEffectNeeded = true;\n        if (selectedElements.length > 0) {\n            let elements = [];\n            for (let i = 0; i < selectedElements.length; i++) {\n                elements.push(selectedElements[i]);\n            }\n            this.removeStyles(elements);\n            this.isSeriesMode = true;\n            this.addOrRemoveIndex(this.selectedDataIndexes, new Index(series, NaN));\n            for (let series of chart.visibleSeries) {\n                seriesStyle = this.generateStyle(series);\n                if (document.getElementsByClassName(seriesStyle).length > 0) {\n                    for (let element of elements) {\n                        this.checkSelectionElements(element, seriesStyle, true);\n                    }\n                    isBlurEffectNeeded = false;\n                    break;\n                }\n            }\n            if (isBlurEffectNeeded) {\n                this.isSeriesMode = chart.selectionMode === 'Series';\n                this.blurEffect(chart.element.id, chart.visibleSeries);\n            }\n        }\n        else {\n            let seriesElements = this.getSeriesElements(chart.visibleSeries[series]);\n            for (let seriesElement of seriesElements) {\n                this.checkSelectionElements(seriesElement, seriesStyle, false);\n            }\n            this.isSeriesMode = true;\n            this.selection(chart, new Index(series, NaN), seriesElements);\n            this.isSeriesMode = chart.selectionMode === 'Series';\n            this.blurEffect(chart.element.id, chart.visibleSeries);\n        }\n    }\n    getSeriesElements(series) {\n        let seriesElements = [series.seriesElement];\n        if (series.marker.visible && series.type !== 'Scatter' && series.type !== 'Bubble' && !series.isRectSeries) {\n            seriesElements.push(series.symbolElement);\n        }\n        return seriesElements;\n    }\n    indexFinder(id) {\n        let ids = ['NaN', 'NaN'];\n        if (id.indexOf('SeriesGroup') > -1) {\n            ids = id.split('SeriesGroup');\n            ids[0] = ids[1];\n        }\n        else if (id.indexOf('SymbolGroup') > -1) {\n            ids = id.split('SymbolGroup');\n            ids[0] = ids[1];\n        }\n        else if (id.indexOf('_Point_') > -1) {\n            ids = id.split('_Series_')[1].split('_Point_');\n        }\n        else if (id.indexOf('_Series_') > -1) {\n            ids[0] = id.split('_Series_')[1];\n        }\n        return new Index(parseInt(ids[0], 10), parseInt(ids[1], 10));\n    }\n    /**\n     * Drag selection that returns the selected data.\n     * @return {void}\n     * @private\n     */\n    calculateDragSelectedElements(chart, dragRect) {\n        this.removeSelectedElements(chart, this.selectedDataIndexes, chart.series);\n        let rect = new Rect(dragRect.x, dragRect.y, dragRect.width, dragRect.height);\n        let axisOffset = new ChartLocation(chart.chartAxisLayoutPanel.seriesClipRect.x, chart.chartAxisLayoutPanel.seriesClipRect.y);\n        this.removeOffset(rect, axisOffset);\n        let points;\n        let index;\n        let selectedPointValues = [];\n        let selectedSeriesValues = [];\n        this.isSeriesMode = false;\n        for (let series of chart.visibleSeries) {\n            if (series.visible) {\n                points = series.points;\n                selectedPointValues = [];\n                let xAxisOffset;\n                let yAxisOffset;\n                if ((chart.isTransposed || series.type.indexOf('Bar') !== -1) &&\n                    !(chart.isTransposed && series.type.indexOf('Bar') !== -1)) {\n                    xAxisOffset = series.xAxis.rect.y - axisOffset.y;\n                    yAxisOffset = series.yAxis.rect.x - axisOffset.x;\n                }\n                else {\n                    xAxisOffset = series.xAxis.rect.x - axisOffset.x;\n                    yAxisOffset = series.yAxis.rect.y - axisOffset.y;\n                }\n                for (let j = 0; j < points.length; j++) {\n                    let yValue = series.type !== 'RangeArea' ? points[j].yValue :\n                        points[j].regions[0].y;\n                    let isCurrentPoint;\n                    if (series.type === 'BoxAndWhisker') {\n                        isCurrentPoint = points[j].regions.some((region) => {\n                            return withInBounds(region.x + xAxisOffset, region.y + yAxisOffset, rect);\n                        });\n                    }\n                    else {\n                        isCurrentPoint = points[j].symbolLocations.some((location) => {\n                            return location && withInBounds(location.x + xAxisOffset, location.y + yAxisOffset, rect);\n                        });\n                    }\n                    if (isCurrentPoint && series.category !== 'Indicator') {\n                        index = new Index(series.index, points[j].index);\n                        this.selection(chart, index, this.findElements(chart, series, index));\n                        selectedPointValues.push({ x: points[j].xValue.toString(), y: yValue });\n                    }\n                    if (isCurrentPoint && series.type === 'RangeArea') {\n                        selectedPointValues.push({ x: points[j].xValue.toString(), y: points[j].regions[0].y });\n                    }\n                }\n                selectedSeriesValues.push(selectedPointValues);\n            }\n        }\n        this.blurEffect(chart.element.id, chart.visibleSeries);\n        this.rectPoints = new Rect(dragRect.x, dragRect.y, dragRect.width, dragRect.height);\n        this.createCloseButton((dragRect.x + dragRect.width), dragRect.y);\n        let args = {\n            name: dragComplete,\n            selectedDataValues: selectedSeriesValues,\n            cancel: false\n        };\n        chart.trigger(dragComplete, args);\n    }\n    removeOffset(rect, clip) {\n        rect.x -= clip.x;\n        rect.y -= clip.y;\n    }\n    /**\n     * Method to draw dragging rect.\n     * @return {void}\n     * @private\n     */\n    drawDraggingRect(chart, dragRect) {\n        let cartesianLayout = chart.chartAxisLayoutPanel.seriesClipRect;\n        switch (chart.selectionMode) {\n            case 'DragX':\n                dragRect.y = cartesianLayout.y;\n                dragRect.height = cartesianLayout.height;\n                break;\n            case 'DragY':\n                dragRect.x = cartesianLayout.x;\n                dragRect.width = cartesianLayout.width;\n                break;\n        }\n        if (dragRect.width < 5 || dragRect.height < 5) {\n            return null;\n        }\n        let element = getElement(this.draggedRect);\n        if (this.closeIcon) {\n            removeElement(this.closeIconId);\n        }\n        if (element) {\n            this.setAttributes(element, dragRect);\n        }\n        else {\n            let dragGroup = chart.renderer.createGroup({ id: this.draggedRectGroup });\n            chart.svgObject.appendChild(dragGroup);\n            element = chart.renderer.drawRectangle(new RectOption(this.draggedRect, chart.themeStyle.selectionRectFill, { color: chart.themeStyle.selectionRectStroke, width: 1 }, 1, dragRect));\n            element.setAttribute('style', 'cursor:move;');\n            dragGroup.appendChild(element);\n        }\n    }\n    createCloseButton(x, y) {\n        let closeIcon = this.chart.renderer.createGroup({\n            id: this.closeIconId,\n            style: 'cursor:pointer; visibility: visible;'\n        });\n        closeIcon.appendChild(this.chart.renderer.drawCircle(new CircleOption(this.closeIconId + '_circle', '#FFFFFF', { color: this.chart.themeStyle.selectionCircleStroke, width: 1 }, 1, x, y, 10)));\n        let direction = 'M ' + (x - 4) + ' ' + (y - 4) + ' L ' + (x + 4) + ' ' + (y + 4) + ' M ' + (x - 4) + ' ' + (y + 4) +\n            ' L ' + (x + 4) + ' ' + (y - 4);\n        closeIcon.appendChild(this.chart.renderer.drawPath({\n            id: this.closeIconId + '_cross', d: direction,\n            stroke: this.chart.themeStyle.selectionCircleStroke,\n            'stroke-width': 2, fill: this.chart.themeStyle.selectionCircleStroke\n        }));\n        this.closeIcon = closeIcon;\n        getElement(this.draggedRectGroup).appendChild(closeIcon);\n    }\n    /**\n     * Method to remove dragged element.\n     * @return {void}\n     * @private\n     */\n    removeDraggedElements(chart, event) {\n        if ((event.target.id.indexOf(this.closeIconId) > -1) && (event.type.indexOf('move') === -1)) {\n            this.removeSelectedElements(chart, this.selectedDataIndexes, chart.series);\n            this.blurEffect(chart.element.id, chart.visibleSeries);\n            remove(getElement(this.draggedRectGroup));\n            this.changeCursorStyle(false, chart.svgObject, 'auto');\n            this.rectPoints = null;\n        }\n    }\n    /**\n     * Method to resize the drag rect.\n     * @return {void}\n     * @private\n     */\n    resizingSelectionRect(chart, location, tapped) {\n        let rect = new Rect(this.rectPoints.x, this.rectPoints.y, this.rectPoints.width, this.rectPoints.height);\n        let resize = this.findResizeMode(chart.svgObject, rect, location);\n        if (this.resizing) {\n            rect = getDraggedRectLocation(rect.x, rect.y, (rect.x + rect.width), (rect.y + rect.height), chart.chartAxisLayoutPanel.seriesClipRect);\n            this.drawDraggingRect(chart, rect);\n            this.dragRect = rect;\n        }\n        if (tapped) {\n            this.resizing = resize;\n        }\n    }\n    findResizeMode(chartSvgObject, rect, location) {\n        let cursorStyle = 'se-resize';\n        let resize = false;\n        if (!this.resizing) {\n            let resizeEdges = [new Rect(rect.x, (rect.y - 10), rect.width - 5, 20),\n                new Rect((rect.x - 10), rect.y, 20, rect.height),\n                new Rect(rect.x, (rect.y + rect.height - 10), rect.width - 10, 20),\n                new Rect((rect.x + rect.width - 10), rect.y + 5, 20, rect.height - 15),\n                new Rect((rect.x + rect.width - 10), (rect.y + rect.height - 10), 20, 20)]; //corner\n            for (let i = 0; i < resizeEdges.length; i++) {\n                if (withInBounds(location.x, location.y, resizeEdges[i])) {\n                    cursorStyle = (i === 4) ? cursorStyle : (i % 2 === 0) ? 'ns-resize' : 'ew-resize';\n                    resize = true;\n                    this.resizeMode = i;\n                    break;\n                }\n            }\n        }\n        else {\n            let x = rect.x;\n            let y = rect.y;\n            let width = (location.x - x);\n            let height = (location.y - y);\n            switch (this.resizeMode) {\n                case 0:\n                    height = Math.abs((rect.height + rect.y) - location.y);\n                    rect.y = Math.min((rect.height + rect.y), location.y);\n                    rect.height = height;\n                    break;\n                case 1:\n                    width = Math.abs((rect.width + rect.x) - location.x);\n                    rect.x = Math.min((rect.width + rect.x), location.x);\n                    rect.width = width;\n                    break;\n                case 2:\n                    rect.height = Math.abs(height);\n                    rect.y = Math.min(location.y, y);\n                    break;\n                case 3:\n                    rect.width = Math.abs(width);\n                    rect.x = Math.min(location.x, x);\n                    break;\n                case 4:\n                    rect.width = Math.abs(width);\n                    rect.height = Math.abs(height);\n                    rect.x = Math.min(location.x, x);\n                    rect.y = Math.min(location.y, y);\n                    break;\n            }\n        }\n        this.changeCursorStyle(resize, getElement(this.draggedRect), cursorStyle);\n        this.changeCursorStyle(resize, chartSvgObject, cursorStyle);\n        return resize;\n    }\n    changeCursorStyle(isResize, rectelement, cursorStyle) {\n        cursorStyle = isResize ? cursorStyle : (this.control.svgObject === rectelement) ? 'auto' : 'move';\n        rectelement.setAttribute('style', 'cursor:' + cursorStyle + ';');\n    }\n    removeSelectedElements(chart, index, seriesCollection) {\n        index.splice(0, index.length);\n        let seriesElements;\n        for (let series of seriesCollection) {\n            seriesElements = this.getSeriesElements(series);\n            this.removeStyles(seriesElements);\n            for (let seriesElement of seriesElements) {\n                this.removeStyles(this.getChildren(seriesElement));\n            }\n        }\n    }\n    setAttributes(ele, object) {\n        let keys = Object.keys(object);\n        for (let key of keys) {\n            ele.setAttribute(key, object[key]);\n        }\n    }\n    /**\n     * Method to move the dragged rect.\n     * @return {void}\n     * @private\n     */\n    draggedRectMoved(chart, grabbedPoint, doDrawing) {\n        let rect = new Rect(this.rectPoints.x, this.rectPoints.y, this.rectPoints.width, this.rectPoints.height);\n        rect.x -= (grabbedPoint.x - chart.mouseX);\n        rect.y -= (grabbedPoint.y - chart.mouseY);\n        rect = getDraggedRectLocation(rect.x, rect.y, rect.x + rect.width, rect.height + rect.y, chart.chartAxisLayoutPanel.seriesClipRect);\n        if (doDrawing) {\n            this.drawDraggingRect(chart, rect);\n        }\n        else {\n            this.calculateDragSelectedElements(chart, rect);\n        }\n    }\n    /**\n     * To complete the selection.\n     * @return {void}\n     * @private\n     */\n    completeSelection(e) {\n        let chart = this.chart;\n        if (chart.selectionMode === 'None') {\n            return;\n        }\n        if ((this.dragging || this.resizing) && this.dragRect.width > 5 && this.dragRect.height > 5) {\n            this.calculateDragSelectedElements(chart, this.dragRect);\n        }\n        else if (this.rectGrabbing && this.rectPoints.width && this.rectPoints.height) {\n            this.draggedRectMoved(chart, this.dragRect);\n        }\n        this.dragging = false;\n        this.rectGrabbing = false;\n        this.resizing = false;\n        this.removeDraggedElements(chart, e);\n    }\n    getDragRect(chart, seriesClipRect) {\n        return getDraggedRectLocation(chart.mouseDownX, chart.mouseDownY, chart.mouseX, chart.mouseY, seriesClipRect);\n    }\n    /** @private */\n    dragStart(chart, seriesClipRect, mouseDownX, mouseDownY, event) {\n        this.dragging = (chart.selectionMode.indexOf('Drag') > -1) && (chart.isDoubleTap || !chart.isTouch) &&\n            chart.chartAreaType !== 'PolarRadar';\n        if (this.dragging) {\n            this.dragRect = new Rect(chart.mouseDownX, chart.mouseDownY, 0, 0);\n            if (chart.mouseDownX < seriesClipRect.x || chart.mouseDownX > (seriesClipRect.x + seriesClipRect.width) ||\n                chart.mouseDownY < seriesClipRect.y || chart.mouseDownY > (seriesClipRect.y + seriesClipRect.height)) {\n                this.dragging = false;\n            }\n        }\n        if (this.rectPoints) {\n            this.dragRect = new Rect(chart.mouseDownX, chart.mouseDownY, 0, 0);\n            this.resizingSelectionRect(chart, new ChartLocation(mouseDownX, mouseDownY), true);\n            this.rectGrabbing = withInBounds(mouseDownX, mouseDownY, this.rectPoints);\n        }\n    }\n    /** @private */\n    mouseMove(event) {\n        let chart = this.chart;\n        if (chart.selectionMode === 'None') {\n            return;\n        }\n        if (event.type === 'touchmove' && (Browser.isIos || Browser.isIos7) && this.dragging && event.preventDefault) {\n            event.preventDefault();\n        }\n        let insideMoving = withInBounds(chart.mouseX, chart.mouseY, chart.chartAxisLayoutPanel.seriesClipRect);\n        if (insideMoving) {\n            if (this.rectGrabbing && !this.resizing) {\n                this.draggedRectMoved(chart, this.dragRect, true);\n            }\n            else if (this.dragging && !this.resizing) {\n                this.dragRect = this.getDragRect(chart, chart.chartAxisLayoutPanel.seriesClipRect);\n                this.drawDraggingRect(chart, this.dragRect);\n            }\n            if (this.rectPoints) {\n                this.resizingSelectionRect(chart, new ChartLocation(chart.mouseX, chart.mouseY));\n            }\n        }\n        else {\n            this.completeSelection(event);\n        }\n    }\n    /**\n     * Get module name.\n     * @private\n     */\n    getModuleName() {\n        return 'Selection';\n    }\n    /**\n     * To destroy the selection.\n     * @return {void}\n     * @private\n     */\n    destroy(chart) {\n        this.removeEventListener();\n        // Destroy method performed here\n    }\n}\n\n/**\n * `DataLabel` module is used to render data label for the data point.\n */\nclass DataLabel {\n    /**\n     * Constructor for the data label module.\n     * @private\n     */\n    constructor(chart) {\n        this.errorHeight = 0;\n        this.chart = chart;\n    }\n    initPrivateVariables(series, marker) {\n        let transform;\n        let render = series.chart.renderer;\n        transform = series.chart.chartAreaType === 'Cartesian' ? 'translate(' + series.clipRect.x + ',' + (series.clipRect.y) + ')' : '';\n        if (marker.dataLabel.visible) {\n            series.shapeElement = render.createGroup({\n                'id': this.chart.element.id + 'ShapeGroup' + series.index,\n                'transform': transform,\n                'clip-path': 'url(#' + this.chart.element.id + '_ChartSeriesClipRect_' + series.index + ')'\n            });\n            series.textElement = render.createGroup({\n                'id': this.chart.element.id + 'TextGroup' + series.index,\n                'transform': transform,\n                'clip-path': 'url(#' + this.chart.element.id + '_ChartSeriesClipRect_' + series.index + ')'\n            });\n        }\n        this.markerHeight = ((series.type === 'Scatter' || marker.visible) && !this.isRectSeries(series)) ? (marker.height / 2) : 0;\n        this.commonId = this.chart.element.id + '_Series_' + series.index + '_Point_';\n        this.calculateErrorHeight(series, series.marker.dataLabel.position);\n        this.chartBackground = this.chart.chartArea.background === 'trasparent' ?\n            this.chart.background || this.chart.themeStyle.background : this.chart.chartArea.background;\n    }\n    calculateErrorHeight(series, position) {\n        if (!series.errorBar.visible) {\n            return null;\n        }\n        else if (series.errorBar.visible && this.chart.chartAreaType !== 'PolarRadar') {\n            let direction = series.errorBar.direction;\n            let positiveHeight = this.chart.errorBarModule.positiveHeight;\n            let negativeHeight = this.chart.errorBarModule.negativeHeight;\n            if (this.isRectSeries(series)) {\n                if (position === 'Top' || position === 'Auto') {\n                    if (direction === 'Both' || direction === 'Minus') {\n                        this.errorHeight = negativeHeight;\n                    }\n                    else {\n                        this.errorHeight = 0;\n                    }\n                }\n                if (position === 'Outer' || position === 'Auto') {\n                    if (direction === 'Both' || direction === 'Plus') {\n                        this.errorHeight = positiveHeight;\n                    }\n                    else {\n                        this.errorHeight = 0;\n                    }\n                }\n            }\n            else {\n                if (position === 'Top' || position === 'Outer' || position === 'Auto') {\n                    if ((direction === 'Both' || direction === 'Plus') && (!series.chart.isTransposed)) {\n                        this.errorHeight = positiveHeight;\n                    }\n                    else {\n                        this.errorHeight = 0;\n                    }\n                }\n                if (position === 'Bottom' || position === 'Auto') {\n                    if (direction === 'Both' || direction === 'Minus') {\n                        this.errorHeight = negativeHeight;\n                    }\n                    else {\n                        this.errorHeight = 0;\n                    }\n                }\n            }\n        }\n        else {\n            this.errorHeight = 0;\n        }\n    }\n    isRectSeries(series) {\n        return series.isRectSeries || series.type === 'RangeArea';\n    }\n    /**\n     * Render the data label for series.\n     * @return {void}\n     */\n    render(series, chart, dataLabel) {\n        // initialize the private variable\n        this.initPrivateVariables(series, series.marker);\n        let rect;\n        let rgbValue;\n        let contrast;\n        let argsData;\n        let border;\n        let textSize;\n        this.inverted = chart.requireInvertedAxis;\n        this.yAxisInversed = series.yAxis.isInversed;\n        let element = createElement('div', {\n            id: chart.element.id + '_Series_' + series.index + '_DataLabelCollections'\n        });\n        // Data label point iteration started\n        series.points.map((point, index) => {\n            this.margin = dataLabel.margin;\n            let labelText = [];\n            let labelLength;\n            let clip = series.clipRect;\n            border = { width: dataLabel.border.width, color: dataLabel.border.color };\n            if ((point.symbolLocations.length && point.symbolLocations[0]) ||\n                (series.type === 'BoxAndWhisker' && point.regions.length)) {\n                labelText = getLabelText(point, series, chart);\n                labelLength = labelText.length;\n                for (let i = 0; i < labelLength; i++) {\n                    argsData = {\n                        cancel: false, name: textRender, series: series,\n                        point: point, text: labelText[i], border: border,\n                        color: dataLabel.fill, template: dataLabel.template\n                    };\n                    chart.trigger(textRender, argsData);\n                    if (!argsData.cancel) {\n                        this.fontBackground = argsData.color;\n                        this.isDataLabelShape(argsData);\n                        this.markerHeight = series.type === 'Bubble' ? (point.regions[0].height / 2) : this.markerHeight;\n                        if (argsData.template !== null) {\n                            this.createDataLabelTemplate(element, series, dataLabel, point, argsData, i);\n                        }\n                        else {\n                            textSize = measureText(argsData.text, dataLabel.font);\n                            rect = this.calculateTextPosition(point, series, textSize, dataLabel, i);\n                            if (!isCollide(rect, chart.dataLabelCollections, clip)) {\n                                chart.dataLabelCollections.push(new Rect(rect.x + clip.x, rect.y + clip.y, rect.width, rect.height));\n                                if (this.isShape) {\n                                    series.shapeElement.appendChild(chart.renderer.drawRectangle(new RectOption(this.commonId + index + '_TextShape_' + i, argsData.color, argsData.border, dataLabel.opacity, rect, dataLabel.rx, dataLabel.ry)));\n                                }\n                                // Checking the font color\n                                rgbValue = convertHexToColor(colorNameToHex(this.fontBackground));\n                                contrast = Math.round((rgbValue.r * 299 + rgbValue.g * 587 + rgbValue.b * 114) / 1000);\n                                textElement(new TextOption(this.commonId + index + '_Text_' + i, rect.x + this.margin.left + textSize.width / 2, rect.y + this.margin.top + textSize.height * 3 / 4, 'middle', argsData.text, 'rotate(0,' + (rect.x) + ',' + (rect.y) + ')', 'auto'), dataLabel.font, dataLabel.font.color ||\n                                    ((contrast >= 128 || series.type === 'Hilo') ? 'black' : 'white'), series.textElement);\n                            }\n                        }\n                    }\n                }\n            }\n        });\n        if (element.childElementCount) {\n            getElement(chart.element.id + '_Secondary_Element').appendChild(element);\n        }\n    }\n    /**\n     * Render the data label template.\n     * @return {void}\n     * @private\n     */\n    createDataLabelTemplate(parentElement, series, dataLabel, point, data, labelIndex) {\n        this.margin = { left: 0, right: 0, bottom: 0, top: 0 };\n        let clip = series.clipRect;\n        let childElement = createTemplate(createElement('div', {\n            id: this.chart.element.id + '_Series_' + series.index + '_DataLabel_'\n                + point.index + (labelIndex ? ('_' + labelIndex) : ''),\n            styles: 'position: absolute;background-color:' + data.color + ';' +\n                getFontStyle(dataLabel.font) + ';border:' + data.border.width + 'px solid ' + data.border.color + ';'\n        }), point.index, data.template, this.chart, point, series);\n        let elementRect = measureElementRect(childElement);\n        let rect = this.calculateTextPosition(point, series, { width: elementRect.width, height: elementRect.height }, dataLabel, labelIndex);\n        childElement.style.left = ((this.chart.chartAreaType === 'PolarRadar' ? 0 : series.clipRect.x) + rect.x) + 'px';\n        childElement.style.top = ((this.chart.chartAreaType === 'PolarRadar' ? 0 : series.clipRect.y) + rect.y) + 'px';\n        let rgbValue = convertHexToColor(colorNameToHex(this.fontBackground));\n        let vAxis = series.chart.requireInvertedAxis ? series.xAxis : series.yAxis;\n        let hAxis = series.chart.requireInvertedAxis ? series.yAxis : series.xAxis;\n        childElement.style.color = dataLabel.font.color ||\n            ((Math.round((rgbValue.r * 299 + rgbValue.g * 587 + rgbValue.b * 114) / 1000)) >= 128 ? 'black' : 'white');\n        if (childElement.childElementCount && !isCollide(rect, this.chart.dataLabelCollections, clip)\n            && (series.seriesType !== 'XY' || point.yValue === undefined || withIn(point.yValue, series.yAxis.visibleRange) ||\n                (series.type.indexOf('100') > -1 && withIn(series.stackedValues.endValues[point.index], series.yAxis.visibleRange)))\n            && withIn(point.xValue, series.xAxis.visibleRange) && parseFloat(childElement.style.top) >= vAxis.rect.y &&\n            parseFloat(childElement.style.left) >= hAxis.rect.x && parseFloat(childElement.style.top) <= vAxis.rect.y + vAxis.rect.height &&\n            parseFloat(childElement.style.left) <= hAxis.rect.x + hAxis.rect.width) {\n            this.chart.dataLabelCollections.push(new Rect(rect.x + clip.x, rect.y + clip.y, rect.width, rect.height));\n            parentElement.appendChild(childElement);\n            if (series.animation.enable && this.chart.animateSeries) {\n                this.doDataLabelAnimation(series, childElement);\n            }\n        }\n    }\n    calculateTextPosition(point, series, textSize, dataLabel, labelIndex) {\n        let labelRegion = labelIndex > 1 ? (series.type === 'Candle') ? point.regions[1] : point.regions[0] : point.regions[0];\n        if (labelIndex > 1 && series.type === 'HiloOpenClose') {\n            labelRegion = (labelIndex === 2) ? point.regions[1] : point.regions[2];\n        }\n        let location;\n        location = this.getLabelLocation(point, series, textSize, labelIndex);\n        let padding = 5;\n        let clipRect = series.clipRect;\n        let rect;\n        // calculating alignment\n        if (!this.chart.requireInvertedAxis || !this.isRectSeries(series) || series.type === 'BoxAndWhisker') {\n            this.locationX = location.x;\n            let alignmentValue = textSize.height + (this.borderWidth * 2) + this.markerHeight +\n                this.margin.bottom + this.margin.top + padding;\n            location.y = (dataLabel.position === 'Auto') ? location.y :\n                this.calculateAlignment(alignmentValue, location.y, dataLabel.alignment, this.isRectSeries(series) ? point.yValue < 0 : false);\n            // calculating position\n            location.y = (!this.isRectSeries(series) || series.type === 'BoxAndWhisker') ?\n                this.calculatePathPosition(location.y, dataLabel.position, series, point, textSize, labelIndex) :\n                this.calculateRectPosition(location.y, labelRegion, point.yValue < 0 !== this.yAxisInversed, dataLabel.position, series, textSize, labelIndex, point);\n            if (this.isRectSeries(series) && this.chart.chartAreaType === 'PolarRadar') {\n                location = this.calculatePolarRectPosition(location, dataLabel.position, series, point, textSize, labelIndex);\n            }\n        }\n        else {\n            this.locationY = location.y;\n            let alignmentValue = textSize.width + this.borderWidth + this.margin.left + this.margin.right - padding;\n            location.x = dataLabel.position === 'Auto' ? location.x :\n                this.calculateAlignment(alignmentValue, location.x, dataLabel.alignment, point.yValue < 0);\n            location.x = this.calculateRectPosition(location.x, labelRegion, point.yValue < 0 !== this.yAxisInversed, dataLabel.position, series, textSize, labelIndex, point);\n        }\n        rect = calculateRect(location, textSize, this.margin);\n        // Checking the condition whether data Label has been exist the clip rect\n        if (!((rect.y > clipRect.height) || (rect.x > clipRect.width) ||\n            (rect.x + rect.width < 0) || (rect.y + rect.height < 0))) {\n            rect.x = rect.x < 0 ? padding : rect.x;\n            rect.y = rect.y < 0 ? padding : rect.y;\n            rect.x -= (rect.x + rect.width) > clipRect.width ? (rect.x + rect.width) - clipRect.width + padding : 0;\n            rect.y -= (rect.y + rect.height) > clipRect.height ? (rect.y + rect.height) - clipRect.height + padding : 0;\n            this.fontBackground = this.fontBackground === 'transparent' ? this.chartBackground : this.fontBackground;\n        }\n        return rect;\n    }\n    // Calculation label location for polar column draw types\n    calculatePolarRectPosition(location, position, series, point, size, labelIndex) {\n        let padding = 5;\n        let columnRadius;\n        let angle = (point.regionData.startAngle - 0.5 * Math.PI) + (point.regionData.endAngle - point.regionData.startAngle) / 2;\n        if (labelIndex === 0) {\n            columnRadius = point.regionData.radius < point.regionData.innerRadius ? point.regionData.innerRadius\n                : point.regionData.radius;\n        }\n        else {\n            columnRadius = point.regionData.radius > point.regionData.innerRadius ? point.regionData.innerRadius\n                : point.regionData.radius;\n        }\n        this.fontBackground = this.fontBackground === 'transparent' ? this.chartBackground : this.fontBackground;\n        if (series.drawType.indexOf('Stacking') > -1) {\n            position = position === 'Outer' ? 'Top' : position;\n        }\n        else if (series.drawType.indexOf('Range') > -1) {\n            position = (position === 'Outer' || position === 'Top') ? position : 'Auto';\n        }\n        if (position === 'Outer') {\n            columnRadius = labelIndex === 0 ? columnRadius + 2 * padding : columnRadius - 2 * padding;\n        }\n        else if (position === 'Middle') {\n            columnRadius = columnRadius / 2 + padding;\n        }\n        else if (position === 'Top') {\n            columnRadius = labelIndex === 0 ? columnRadius - 2 * padding : columnRadius + 2 * padding;\n        }\n        else if (position === 'Bottom') {\n            columnRadius = padding;\n        }\n        else {\n            if (labelIndex === 0) {\n                columnRadius = columnRadius >= series.chart.radius ? columnRadius - padding :\n                    series.drawType === 'StackingColumn' ? columnRadius - 2 * padding : columnRadius + 2 * padding;\n            }\n            else {\n                columnRadius = columnRadius >= series.chart.radius ? columnRadius + padding : columnRadius - 2 * padding;\n            }\n        }\n        location.x = series.clipRect.width / 2 + series.clipRect.x + columnRadius * Math.cos(angle);\n        location.y = series.clipRect.height / 2 + series.clipRect.y + columnRadius * Math.sin(angle);\n        return location;\n    }\n    /**\n     * Get the label location\n     */\n    getLabelLocation(point, series, textSize, labelIndex) {\n        let location = new ChartLocation(0, 0);\n        let labelRegion = (series.type === 'Candle' && labelIndex > 1) ? point.regions[1] : point.regions[0];\n        if (series.type === 'HiloOpenClose') {\n            labelRegion = (labelIndex === 2) ? point.regions[1] : point.regions[2];\n        }\n        let xAxis = series.xAxis;\n        let yAxis = series.yAxis;\n        let isInverted = series.chart.requireInvertedAxis;\n        if (series.type === 'BoxAndWhisker') {\n            this.markerHeight = 0;\n            switch (labelIndex) {\n                case 0:\n                    location = getPoint(point.xValue, point.median, xAxis, yAxis, isInverted);\n                    break;\n                case 1:\n                    location = getPoint(point.xValue, point.maximum, xAxis, yAxis, isInverted);\n                    break;\n                case 2:\n                    location = getPoint(point.xValue, point.minimum, xAxis, yAxis, isInverted);\n                    break;\n                case 3:\n                    location = getPoint(point.xValue, point.upperQuartile, xAxis, yAxis, isInverted);\n                    break;\n                case 4:\n                    location = getPoint(point.xValue, point.lowerQuartile, xAxis, yAxis, isInverted);\n                    break;\n                default: {\n                    location = getPoint(point.xValue, point.outliers[labelIndex - 5], xAxis, yAxis, isInverted);\n                    this.markerHeight = series.marker.height / 2;\n                    break;\n                }\n            }\n        }\n        else if (labelIndex === 0 || labelIndex === 1) {\n            location = new ChartLocation(point.symbolLocations[0].x, point.symbolLocations[0].y);\n        }\n        else if ((labelIndex === 2 || labelIndex === 3) && series.type === 'Candle') {\n            location = new ChartLocation(point.symbolLocations[1].x, point.symbolLocations[1].y);\n        }\n        else if (isInverted) {\n            location = { x: labelRegion.x + (labelRegion.width) / 2, y: labelRegion.y };\n        }\n        else {\n            location = { x: labelRegion.x + labelRegion.width, y: labelRegion.y + (labelRegion.height) / 2 };\n        }\n        //Aligning the label at the beginning of the tick, when tick size is less than text size\n        if (labelIndex > 1 && series.type === 'HiloOpenClose') {\n            if (series.chart.requireInvertedAxis) {\n                let height = labelRegion.height;\n                location.y = labelRegion.y + height / 2 + 2 * (labelIndex === 2 ? 1 : -1);\n            }\n            else {\n                let width = labelRegion.width;\n                location.x = labelRegion.x + width / 2 + 2 * (labelIndex === 2 ? 1 : -1);\n            }\n        }\n        return location;\n    }\n    calculateRectPosition(labelLocation, rect, isMinus, position, series, textSize, labelIndex, point) {\n        if (series.chart.chartAreaType === 'PolarRadar') {\n            return null;\n        }\n        let padding = 5;\n        let margin = this.margin;\n        let textLength = !this.inverted ? textSize.height : textSize.width;\n        let extraSpace = this.borderWidth + textLength / 2 + padding;\n        if (series.type.indexOf('Stacking') > -1) {\n            position = position === 'Outer' ? 'Top' : position;\n        }\n        else if (series.type.indexOf('Range') > -1) {\n            position = (position === 'Outer' || position === 'Top') ? position : 'Auto';\n        }\n        else if (series.type === 'Waterfall') {\n            position = position === 'Auto' ? 'Middle' : position;\n        }\n        switch (position) {\n            case 'Bottom':\n                labelLocation = !this.inverted ?\n                    isMinus ? (labelLocation - rect.height + extraSpace + margin.top) :\n                        (labelLocation + rect.height - extraSpace - margin.bottom) :\n                    isMinus ? (labelLocation + rect.width - extraSpace - margin.left) :\n                        (labelLocation - rect.width + extraSpace + margin.right);\n                break;\n            case 'Middle':\n                labelLocation = labelLocation = !this.inverted ?\n                    (isMinus ? labelLocation - (rect.height / 2) : labelLocation + (rect.height / 2)) :\n                    (isMinus ? labelLocation + (rect.width / 2) : labelLocation - (rect.width / 2));\n                break;\n            case 'Auto':\n                labelLocation = this.calculateRectActualPosition(labelLocation, rect, isMinus, series, textSize, labelIndex, point);\n                break;\n            default:\n                extraSpace += this.errorHeight;\n                labelLocation = this.calculateTopAndOuterPosition(labelLocation, rect, position, series, labelIndex, extraSpace, isMinus);\n                break;\n        }\n        let check = !this.inverted ? (labelLocation < rect.y || labelLocation > rect.y + rect.height) :\n            (labelLocation < rect.x || labelLocation > rect.x + rect.width);\n        this.fontBackground = check ?\n            (this.fontBackground === 'transparent' ? this.chartBackground : this.fontBackground)\n            : this.fontBackground === 'transparent' ? (point.color || series.interior) : this.fontBackground;\n        return labelLocation;\n    }\n    calculatePathPosition(labelLocation, position, series, point, size, labelIndex) {\n        let padding = 5;\n        if ((series.type.indexOf('Area') > -1 && series.type !== 'RangeArea')\n            && this.yAxisInversed && series.marker.dataLabel.position !== 'Auto') {\n            position = position === 'Top' ? 'Bottom' : position === 'Bottom' ? 'Top' : position;\n        }\n        this.fontBackground = this.fontBackground === 'transparent' ? this.chartBackground : this.fontBackground;\n        switch (position) {\n            case 'Top':\n            case 'Outer':\n                labelLocation = labelLocation - this.markerHeight - this.borderWidth - size.height / 2 - this.margin.bottom - padding -\n                    this.errorHeight;\n                break;\n            case 'Bottom':\n                labelLocation = labelLocation + this.markerHeight + this.borderWidth + size.height / 2 + this.margin.top + padding +\n                    this.errorHeight;\n                break;\n            case 'Auto':\n                labelLocation = this.calculatePathActualPosition(labelLocation, this.markerHeight, series, point, size, labelIndex);\n                break;\n        }\n        return labelLocation;\n    }\n    isDataLabelShape(style) {\n        this.isShape = (style.color !== 'transparent' || style.border.width > 0);\n        this.borderWidth = style.border.width;\n        if (!this.isShape) {\n            this.margin = { left: 0, right: 0, bottom: 0, top: 0 };\n        }\n    }\n    calculateRectActualPosition(labelLocation, rect, isMinus, series, size, labelIndex, point) {\n        let location;\n        let labelRect;\n        let isOverLap = true;\n        let position = 0;\n        let collection = this.chart.dataLabelCollections;\n        let finalPosition = series.type.indexOf('Range') !== -1 || series.type === 'Hilo' ? 2 : 4;\n        while (isOverLap && position < finalPosition) {\n            location = this.calculateRectPosition(labelLocation, rect, isMinus, this.getPosition(position), series, size, labelIndex, point);\n            if (!this.inverted) {\n                labelRect = calculateRect(new ChartLocation(this.locationX, location), size, this.margin);\n                isOverLap = labelRect.y < 0 || isCollide(labelRect, collection, series.clipRect) || labelRect.y > series.clipRect.height;\n            }\n            else {\n                labelRect = calculateRect(new ChartLocation(location, this.locationY), size, this.margin);\n                isOverLap = labelRect.x < 0 || isCollide(labelRect, collection, series.clipRect) ||\n                    labelRect.x + labelRect.width > series.clipRect.width;\n            }\n            position++;\n        }\n        return location;\n    }\n    // alignment calculation assigned here\n    calculateAlignment(value, labelLocation, alignment, isMinus) {\n        switch (alignment) {\n            case 'Far':\n                labelLocation = !this.inverted ? (isMinus ? labelLocation + value : labelLocation - value) :\n                    (isMinus ? labelLocation - value : labelLocation + value);\n                break;\n            case 'Near':\n                labelLocation = !this.inverted ? (isMinus ? labelLocation - value : labelLocation + value) :\n                    (isMinus ? labelLocation + value : labelLocation - value);\n                break;\n            case 'Center':\n                labelLocation = labelLocation;\n                break;\n        }\n        return labelLocation;\n    }\n    //calculation for top and outer position of datalabel for rect series\n    calculateTopAndOuterPosition(location, rect, position, series, index, extraSpace, isMinus) {\n        let margin = this.margin;\n        let top;\n        switch (series.type) {\n            case 'RangeColumn':\n            case 'RangeArea':\n            case 'Hilo':\n                top = (index === 0 && !this.yAxisInversed) || (index === 1 && this.yAxisInversed);\n                location = this.updateLabelLocation(position, location, extraSpace, margin, rect, top);\n                break;\n            case 'Candle':\n                top = (index === 0 || index === 2) && !this.yAxisInversed\n                    || (index === 1 || index === 3) && this.yAxisInversed;\n                location = this.updateLabelLocation(position, location, extraSpace, margin, rect, top, index > 1);\n                break;\n            case 'HiloOpenClose':\n                if (index <= 1) {\n                    top = (index === 0 && !this.yAxisInversed) || (index === 1 && this.yAxisInversed);\n                    location = this.updateLabelLocation(position, location, extraSpace, margin, rect, top);\n                }\n                else {\n                    if (this.yAxisInversed) {\n                        location = !this.inverted ? location + extraSpace + margin.top : location - extraSpace - margin.right;\n                    }\n                    else {\n                        location = !this.inverted ? location - extraSpace - margin.bottom : location + extraSpace + margin.left;\n                    }\n                }\n                break;\n            default:\n                if ((isMinus && position === 'Top') || (!isMinus && position === 'Outer')) {\n                    location = !this.inverted ? location - extraSpace - margin.bottom : location + extraSpace + margin.left;\n                }\n                else {\n                    location = !this.inverted ? location + extraSpace + margin.top : location - extraSpace - margin.right;\n                }\n                break;\n        }\n        return location;\n    }\n    /**\n     * Updates the label location\n     */\n    updateLabelLocation(position, location, extraSpace, margin, rect, top, inside$$1 = false) {\n        if (!this.inverted) {\n            if (top) {\n                location = (position === 'Outer' && !inside$$1) ? location - extraSpace - margin.bottom : location + extraSpace + margin.top;\n            }\n            else {\n                location = (position === 'Outer' && !inside$$1) ? location + rect.height + extraSpace + margin.top :\n                    location + rect.height - extraSpace - margin.bottom;\n            }\n        }\n        else {\n            if (top) {\n                location = (position === 'Outer' && !inside$$1) ? location + extraSpace + margin.left : location - extraSpace - margin.right;\n            }\n            else {\n                location = (position === 'Outer' && !inside$$1) ? location - rect.width - extraSpace - margin.right :\n                    location - rect.width + extraSpace + margin.left;\n            }\n        }\n        return location;\n    }\n    calculatePathActualPosition(y, markerSize, series, point, size, labelIndex) {\n        let points = series.points;\n        let index = point.index;\n        let yValue = points[index].yValue;\n        let position;\n        let nextPoint = points.length - 1 > index ? points[index + 1] : null;\n        let previousPoint = index > 0 ? points[index - 1] : null;\n        let yLocation;\n        let isOverLap = true;\n        let labelRect;\n        let isBottom;\n        let positionIndex;\n        let collection = this.chart.dataLabelCollections;\n        if (series.type === 'Bubble') {\n            position = 'Top';\n        }\n        else if (series.type.indexOf('Step') > -1) {\n            position = 'Top';\n            if (index) {\n                position = (!previousPoint || !previousPoint.visible || (yValue > previousPoint.yValue !== this.yAxisInversed)\n                    || yValue === previousPoint.yValue) ? 'Top' : 'Bottom';\n            }\n        }\n        else if (series.type === 'BoxAndWhisker') {\n            if (labelIndex === 1 || labelIndex === 3 || labelIndex > 4) {\n                position = series.yAxis.isInversed ? 'Bottom' : 'Top';\n            }\n            else if (labelIndex === 2 || labelIndex === 4) {\n                position = series.yAxis.isInversed ? 'Top' : 'Bottom';\n            }\n            else {\n                isOverLap = false;\n                position = 'Middle';\n                yLocation = this.calculatePathPosition(y, position, series, point, size, labelIndex);\n            }\n        }\n        else {\n            if (index === 0) {\n                position = (!nextPoint || !nextPoint.visible || yValue > nextPoint.yValue ||\n                    (yValue < nextPoint.yValue && this.yAxisInversed)) ? 'Top' : 'Bottom';\n            }\n            else if (index === points.length - 1) {\n                position = (!previousPoint || !previousPoint.visible || yValue > previousPoint.yValue ||\n                    (yValue < previousPoint.yValue && this.yAxisInversed)) ? 'Top' : 'Bottom';\n            }\n            else {\n                if (!nextPoint.visible && !(previousPoint && previousPoint.visible)) {\n                    position = 'Top';\n                }\n                else if (!nextPoint.visible || !previousPoint) {\n                    position = (nextPoint.yValue > yValue || (previousPoint && previousPoint.yValue > yValue)) ?\n                        'Bottom' : 'Top';\n                }\n                else {\n                    let slope = (nextPoint.yValue - previousPoint.yValue) / 2;\n                    let intersectY = (slope * index) + (nextPoint.yValue - (slope * (index + 1)));\n                    position = !this.yAxisInversed ? intersectY < yValue ? 'Top' : 'Bottom' :\n                        intersectY < yValue ? 'Bottom' : 'Top';\n                }\n            }\n        }\n        isBottom = position === 'Bottom';\n        positionIndex = ['Outer', 'Top', 'Bottom', 'Middle', 'Auto'].indexOf(position);\n        while (isOverLap && positionIndex < 4) {\n            yLocation = this.calculatePathPosition(y, this.getPosition(positionIndex), series, point, size, labelIndex);\n            labelRect = calculateRect(new ChartLocation(this.locationX, yLocation), size, this.margin);\n            isOverLap = labelRect.y < 0 || isCollide(labelRect, collection, series.clipRect)\n                || (labelRect.y + labelRect.height) > series.clipRect.height;\n            positionIndex = isBottom ? positionIndex - 1 : positionIndex + 1;\n            isBottom = false;\n        }\n        return yLocation;\n    }\n    /**\n     * Animates the data label.\n     * @param  {Series} series - Data label of the series gets animated.\n     * @return {void}\n     */\n    doDataLabelAnimation(series, element) {\n        let shapeElements = series.shapeElement.childNodes;\n        let textNode = series.textElement.childNodes;\n        let delay = series.animation.delay + series.animation.duration;\n        let location;\n        let length = element ? 1 : textNode.length;\n        for (let i = 0; i < length; i++) {\n            if (element) {\n                element.style.visibility = 'hidden';\n                templateAnimate(element, delay, 200, 'ZoomIn');\n            }\n            else {\n                location = new ChartLocation((+textNode[i].getAttribute('x')) + ((+textNode[i].getAttribute('width')) / 2), (+textNode[i].getAttribute('y')) + ((+textNode[i].getAttribute('height')) / 2));\n                markerAnimate(textNode[i], delay, 200, series, null, location, true);\n                if (shapeElements[i]) {\n                    location = new ChartLocation((+shapeElements[i].getAttribute('x')) + ((+shapeElements[i].getAttribute('width')) / 2), (+shapeElements[i].getAttribute('y')) + ((+shapeElements[i].getAttribute('height')) / 2));\n                    markerAnimate(shapeElements[i], delay, 200, series, null, location, true);\n                }\n            }\n        }\n    }\n    getPosition(index) {\n        return (['Outer', 'Top', 'Bottom', 'Middle', 'Auto'][index]);\n    }\n    /**\n     * Get module name.\n     */\n    getModuleName() {\n        // Returns the module name\n        return 'DataLabel';\n    }\n    /**\n     * To destroy the dataLabel for series.\n     * @return {void}\n     * @private\n     */\n    destroy(chart) {\n        // Destroy method performed here\n    }\n}\n\n/**\n * `ErrorBar` module is used to render the error bar for series.\n */\nclass ErrorBar {\n    /**\n     * Constructor for the error bar module.\n     * @private\n     */\n    constructor(chart) {\n        this.chart = chart;\n    }\n    /**\n     * Render the error bar for series.\n     * @return {void}\n     */\n    render(series) {\n        if (this.chart.chartAreaType === 'PolarRadar') {\n            return null;\n        }\n        this.createElement(series);\n        this.renderErrorBar(series);\n    }\n    renderErrorBar(series) {\n        let seriesIndex = series.index;\n        let symbolId;\n        let capId;\n        let errorbar = series.errorBar;\n        let errorBarCap = series.errorBar.errorBarCap;\n        let border = series.border;\n        let errorDirection = ['', ''];\n        for (let point of series.points) {\n            if (point.visible && point.symbolLocations[0]) {\n                let errorX = 0;\n                let errorY = 0;\n                switch (errorbar.mode) {\n                    case 'Vertical':\n                        errorY = errorbar.verticalError;\n                        break;\n                    case 'Horizontal':\n                        errorX = errorbar.horizontalError;\n                        break;\n                    case 'Both':\n                        errorX = errorbar.horizontalError;\n                        errorY = errorbar.verticalError;\n                        break;\n                }\n                errorDirection = this['calculate' + errorbar.type + 'Value'](point, series, this.chart.requireInvertedAxis, errorX, errorY);\n                symbolId = this.chart.element.id + '_Series_' + '_ErrorBarGroup_' + seriesIndex + '_Point_' + point.index;\n                capId = this.chart.element.id + '_Series_' + '_ErrorBarCap_' + seriesIndex + '_Point_' + point.index;\n                let shapeOption = new PathOption(symbolId, '', errorbar.width, errorbar.color || this.chart.themeStyle.errorBar, null, '', errorDirection[0]);\n                let path = this.chart.renderer.drawPath(shapeOption);\n                series.errorBarElement.appendChild(path);\n                let capOption = new PathOption(capId, '', errorBarCap.width, errorBarCap.color || this.chart.themeStyle.errorBar, null, '', errorDirection[1]);\n                let capPath = this.chart.renderer.drawPath(capOption);\n                series.errorBarElement.appendChild(capPath);\n            }\n        }\n    }\n    // path calculation for error bar\n    findLocation(point, series, isInverted, x1, y1) {\n        let errorbar = series.errorBar;\n        let direction = errorbar.direction;\n        let location = [];\n        let stackedValue = series.stackedValues;\n        let yValue = series.type.indexOf('Stacking') > -1 ? series.stackedValues.endValues[point.index] :\n            (series.seriesType === 'HighLow' || series.seriesType === 'HighLowOpenClose') ? (series.points[point.index].high) :\n                point.yValue;\n        let startPoint = getPoint(point.xValue + ((direction === 'Plus' || direction === 'Both') ? (errorbar.type === 'Custom' &&\n            (errorbar.mode === 'Horizontal' || errorbar.mode === 'Both')) ? x1 = errorbar.horizontalPositiveError : x1 : 0), yValue + ((direction === 'Plus' || direction === 'Both') ? (errorbar.type === 'Custom' &&\n            (errorbar.mode === 'Vertical' || errorbar.mode === 'Both')) ? y1 = errorbar.verticalPositiveError : y1 : 0), series.xAxis, series.yAxis, isInverted);\n        location.push(startPoint);\n        if (series.isRectSeries) {\n            let midPoint = point.symbolLocations[0];\n            location.push(midPoint);\n        }\n        else {\n            let midPoint = getPoint(point.xValue, point.yValue, series.xAxis, series.yAxis, isInverted);\n            location.push(midPoint);\n        }\n        let endPoint = getPoint(point.xValue - ((direction === 'Minus' || direction === 'Both') ? (errorbar.type === 'Custom' &&\n            (errorbar.mode === 'Horizontal' || errorbar.mode === 'Both')) ? x1 = errorbar.horizontalNegativeError : x1 : 0), yValue - ((direction === 'Minus' || direction === 'Both') ? (errorbar.type === 'Custom' &&\n            (errorbar.mode === 'Vertical' || errorbar.mode === 'Both')) ? y1 = errorbar.verticalNegativeError : y1 : 0), series.xAxis, series.yAxis, isInverted);\n        location.push(endPoint);\n        // calculate error height for datalabel position alignment\n        point.error = (errorbar.mode === 'Vertical') ? errorbar.verticalError : errorbar.horizontalError;\n        this.negativeHeight = (errorbar.mode === 'Vertical' || errorbar.mode === 'Both') ? (isInverted ? (location[1].x - location[2].x) :\n            (location[2].y - location[1].y)) : 0;\n        this.positiveHeight = (errorbar.mode === 'Vertical' || errorbar.mode === 'Both') ? (isInverted ? (location[0].x - location[1].x) :\n            (location[1].y - location[0].y)) : 0;\n        return this.getErrorDirection(location[0], location[1], location[2], series, isInverted);\n    }\n    // calculations for eror bar types\n    calculateFixedValue(point, series, isInverted, errorX, errorY, xAxis, yAxis) {\n        let errorbar = series.errorBar;\n        return this.findLocation(point, series, isInverted, errorX, errorY);\n    }\n    calculatePercentageValue(point, series, isInverted, errorX, errorY, xAxis, yAxis) {\n        errorX = (errorX / 100) * point.xValue;\n        errorY = (errorY / 100) * point.yValue;\n        return this.findLocation(point, series, isInverted, errorX, errorY);\n    }\n    calculateStandardDeviationValue(point, series, isInverted, errorX, errorY, xAxis, yAxis) {\n        let getMean = this.meanCalculation(series, series.errorBar.mode);\n        errorX = errorX * (getMean.horizontalSquareRoot + getMean.horizontalMean);\n        errorY = errorY * (getMean.verticalSquareRoot + getMean.verticalMean);\n        return this.findLocation(point, series, isInverted, errorX, errorY);\n    }\n    calculateStandardErrorValue(point, series, isInverted, errorX, errorY, xAxis, yAxis) {\n        let length = series.points.length;\n        let getMean = this.meanCalculation(series, series.errorBar.mode);\n        errorX = ((errorX * getMean.horizontalSquareRoot) / Math.sqrt(length));\n        errorY = ((errorY * getMean.verticalSquareRoot) / Math.sqrt(length));\n        return this.findLocation(point, series, isInverted, errorX, errorY);\n    }\n    calculateCustomValue(point, series, isInverted, errorX, errorY, xAxis, yAxis) {\n        let errorbar = series.errorBar;\n        return this.findLocation(point, series, isInverted, errorX, errorY);\n    }\n    getHorizontalDirection(start, mid, end, direction, errorMode, capLength) {\n        let path = '';\n        let capDirection = '';\n        path += ' M ' + start.x + ' ' + mid.y + ' L ' + end.x + ' ' + mid.y;\n        capDirection += (direction === 'Plus' || direction === 'Both') ? ' M ' + (start.x) + ' ' + (mid.y - capLength) + ' L '\n            + (start.x) + ' ' + (mid.y + capLength) : '';\n        capDirection += (direction === 'Minus' || direction === 'Both') ? ' M ' + (end.x) + ' ' + (mid.y - capLength) + ' L '\n            + (end.x) + ' ' + (mid.y + capLength) : ' ';\n        return [path, capDirection];\n    }\n    getVerticalDirection(start, mid, end, direction, errorMode, capLength) {\n        let path = '';\n        let capDirection = '';\n        path += ' M ' + mid.x + ' ' + start.y + ' L ' + mid.x + ' ' + end.y;\n        capDirection += (direction === 'Plus' || direction === 'Both') ? ' M ' + (mid.x - capLength) + ' ' + start.y + ' L '\n            + (mid.x + capLength) + ' ' + start.y : '';\n        capDirection += (direction === 'Minus' || direction === 'Both') ? ' M ' + (mid.x - capLength) + ' ' + end.y + ' L '\n            + (mid.x + capLength) + ' ' + end.y : '';\n        return [path, capDirection];\n    }\n    getBothDirection(start, mid, end, direction, errorMode, capLength) {\n        let capDirection = '';\n        let path = '';\n        let pathH = this.getHorizontalDirection(start, mid, end, direction, errorMode, capLength);\n        let pathV = this.getVerticalDirection(start, mid, end, direction, errorMode, capLength);\n        path = pathH[0].concat(pathV[0]);\n        capDirection = pathH[1].concat(pathV[1]);\n        return [path, capDirection];\n    }\n    getErrorDirection(start, mid, end, series, isInverted) {\n        let direction = series.errorBar.direction;\n        let mode = series.errorBar.mode;\n        let capLength = series.errorBar.errorBarCap.length;\n        let paths;\n        let errorMode = mode;\n        switch (mode) {\n            case 'Both':\n                errorMode = mode;\n                break;\n            case 'Horizontal':\n                errorMode = (isInverted) ? 'Vertical' : mode;\n                break;\n            case 'Vertical':\n                errorMode = (isInverted) ? 'Horizontal' : mode;\n                break;\n        }\n        switch (errorMode) {\n            case 'Horizontal':\n                paths = this.getHorizontalDirection(start, mid, end, direction, errorMode, capLength);\n                break;\n            case 'Vertical':\n                paths = this.getVerticalDirection(start, mid, end, direction, errorMode, capLength);\n                break;\n            case 'Both':\n                paths = this.getBothDirection(start, mid, end, direction, errorMode, capLength);\n                break;\n        }\n        return [paths[0], paths[1]];\n    }\n    // mean calculation for standard deviation and standard error\n    meanCalculation(series, mode) {\n        let sumOfX = 0;\n        let sumOfY = 0;\n        let verticalMean = 0;\n        let horizontalMean = 0;\n        let verStandardMean;\n        let horStandardMean;\n        let verSquareRoot;\n        let horSquareRoot;\n        let length = series.points.length;\n        switch (mode) {\n            case 'Vertical':\n                sumOfY = sum(series.yData);\n                verticalMean = sumOfY / length;\n                break;\n            case 'Horizontal':\n                sumOfX = sum(series.xData);\n                horizontalMean = sumOfX / length;\n                break;\n            case 'Both':\n                sumOfY = sum(series.yData);\n                verticalMean = sumOfY / length;\n                sumOfX = sum(series.xData);\n                horizontalMean = sumOfX / length;\n        }\n        for (let point of series.points) {\n            if (mode === 'Vertical') {\n                sumOfY = sumOfY + Math.pow((point.yValue - verticalMean), 2);\n            }\n            else if (mode === 'Horizontal') {\n                sumOfX = sumOfX + Math.pow((point.xValue - horizontalMean), 2);\n            }\n            else {\n                sumOfY = sumOfY + Math.pow((point.yValue - verticalMean), 2);\n                sumOfX = sumOfX + Math.pow((point.xValue - horizontalMean), 2);\n            }\n        }\n        verStandardMean = sumOfY / (length - 1);\n        verSquareRoot = Math.sqrt(sumOfY / (length - 1));\n        horStandardMean = sumOfX / (length - 1);\n        horSquareRoot = Math.sqrt(sumOfX / (length - 1));\n        return new Mean(verStandardMean, verSquareRoot, horStandardMean, horSquareRoot, verticalMean, horizontalMean);\n    }\n    createElement(series) {\n        let explodeValue = 5;\n        let render = series.chart.renderer;\n        let transform;\n        transform = series.chart.chartAreaType === 'Cartesian' ? 'translate(' + series.clipRect.x + ',' + (series.clipRect.y) + ')' : '';\n        let markerHeight = (series.marker.height + explodeValue) / 2;\n        let markerWidth = (series.marker.width + explodeValue) / 2;\n        if (series.chart.chartAreaType === 'Cartesian') {\n            let errorBarClipRect = render.drawClipPath(new RectOption(this.chart.element.id + '_ChartErrorBarClipRect_' + series.index, 'transparent', { width: 1, color: 'Gray' }, 1, {\n                x: -markerWidth, y: -markerHeight,\n                width: series.clipRect.width + markerWidth * 2, height: series.clipRect.height + markerHeight * 2\n            }));\n            series.errorBarElement = render.createGroup({\n                'id': this.chart.element.id + 'ErrorBarGroup' + series.index,\n                'transform': transform,\n                'clip-path': 'url(#' + this.chart.element.id + '_ChartErrorBarClipRect_' + series.index + ')'\n            });\n            series.errorBarElement.appendChild(errorBarClipRect);\n        }\n    }\n    /**\n     * Animates the series.\n     * @param  {Series} series - Defines the series to animate.\n     * @return {void}\n     */\n    doErrorBarAnimation(series) {\n        let errorBarElements = series.errorBarElement.childNodes;\n        if (!errorBarElements) {\n            return null;\n        }\n        let delay = series.animation.delay + series.animation.duration;\n        let j = 1;\n        while (j < errorBarElements.length) {\n            for (let i = 0; i < series.points.length; i++) {\n                if (!series.points[i].symbolLocations[0]) {\n                    continue;\n                }\n                errorBarElements[j].style.visibility = 'hidden';\n                templateAnimate(errorBarElements[j], delay, 350, series.chart.requireInvertedAxis ? 'SlideLeftIn' : 'SlideBottomIn', false);\n            }\n            j++;\n        }\n    }\n    /**\n     * Get module name.\n     */\n    getModuleName() {\n        // Returns the module name\n        return 'ErrorBar';\n    }\n    /**\n     * To destroy the errorBar for series.\n     * @return {void}\n     * @private\n     */\n    destroy(chart) {\n        // Destroy method performed here\n    }\n}\n\n/**\n * Chart legend\n */\n/**\n * `Legend` module is used to render legend for the chart.\n */\nclass Legend extends BaseLegend {\n    constructor(chart) {\n        super(chart);\n        this.library = this;\n        this.addEventListener();\n    }\n    /**\n     * Binding events for legend module.\n     */\n    addEventListener() {\n        if (this.chart.isDestroyed) {\n            return;\n        }\n        this.chart.on(Browser.touchMoveEvent, this.mouseMove, this);\n        this.chart.on('click', this.click, this);\n        this.chart.on(Browser.touchEndEvent, this.mouseEnd, this);\n    }\n    /**\n     * UnBinding events for legend module.\n     */\n    removeEventListener() {\n        if (this.chart.isDestroyed) {\n            return;\n        }\n        this.chart.off(Browser.touchMoveEvent, this.mouseMove);\n        this.chart.off('click', this.click);\n        this.chart.off(Browser.touchEndEvent, this.mouseEnd);\n    }\n    /**\n     * To handle mosue move for legend module\n     */\n    mouseMove(e) {\n        if (this.chart.legendSettings.visible && !this.chart.isTouch) {\n            this.move(e);\n        }\n    }\n    /**\n     * To handle mosue end for legend module\n     */\n    mouseEnd(e) {\n        if (this.chart.legendSettings.visible && this.chart.isTouch) {\n            this.move(e);\n        }\n    }\n    /**\n     * Get the legend options.\n     * @return {void}\n     * @private\n     */\n    getLegendOptions(visibleSeriesCollection, chart) {\n        this.legendCollections = [];\n        let seriesType;\n        for (let series of visibleSeriesCollection) {\n            if (series.category !== 'Indicator') {\n                seriesType = (chart.chartAreaType === 'PolarRadar') ? series.drawType :\n                    series.type;\n                this.legendCollections.push(new LegendOptions(series.name, series.interior, series.legendShape, series.visible, seriesType, series.marker.shape, series.marker.visible));\n            }\n        }\n    }\n    /** @private */\n    getLegendBounds(availableSize, legendBounds, legend) {\n        let padding = legend.padding;\n        let extraHeight = 0;\n        let extraWidth = 0;\n        if (!this.isVertical) {\n            extraHeight = !legend.height ? ((availableSize.height / 100) * 5) : 0;\n        }\n        else {\n            extraWidth = !legend.width ? ((availableSize.width / 100) * 5) : 0;\n        }\n        legendBounds.height += extraHeight;\n        legendBounds.width += extraWidth;\n        let shapeHeight = legend.shapeHeight;\n        let shapeWidth = legend.shapeWidth;\n        let shapePadding = legend.shapePadding;\n        let maximumWidth = 0;\n        let rowWidth = 0;\n        let legendWidth = 0;\n        let columnHeight = 0;\n        let rowCount = 0;\n        let legendEventArgs;\n        this.maxItemHeight = Math.max(measureText('MeasureText', legend.textStyle).height, legend.shapeHeight);\n        let render = false;\n        for (let legendOption of this.legendCollections) {\n            legendEventArgs = {\n                fill: legendOption.fill, text: legendOption.text, shape: legendOption.shape,\n                markerShape: legendOption.markerShape, name: legendRender, cancel: false\n            };\n            this.chart.trigger(legendRender, legendEventArgs);\n            legendOption.render = !legendEventArgs.cancel;\n            legendOption.text = legendEventArgs.text;\n            legendOption.fill = legendEventArgs.fill;\n            legendOption.shape = legendEventArgs.shape;\n            legendOption.markerShape = legendEventArgs.markerShape;\n            legendOption.textSize = measureText(legendOption.text, legend.textStyle);\n            if (legendOption.render && legendOption.text !== '') {\n                render = true;\n                legendWidth = shapeWidth + shapePadding + legendOption.textSize.width + padding;\n                rowWidth = rowWidth + legendWidth;\n                if (legendBounds.width < (padding + rowWidth) || this.isVertical) {\n                    maximumWidth = Math.max(maximumWidth, (rowWidth + padding - (this.isVertical ? 0 : legendWidth)));\n                    if (rowCount === 0 && (legendWidth !== rowWidth)) {\n                        rowCount = 1;\n                    }\n                    rowWidth = this.isVertical ? 0 : legendWidth;\n                    rowCount++;\n                    columnHeight = (rowCount * (this.maxItemHeight + padding)) + padding;\n                }\n            }\n        }\n        columnHeight = Math.max(columnHeight, (this.maxItemHeight + padding) + padding);\n        this.isPaging = legendBounds.height < columnHeight;\n        this.totalPages = rowCount;\n        if (render) {\n            this.setBounds(Math.max((rowWidth + padding), maximumWidth), columnHeight, legend, legendBounds);\n        }\n        else {\n            this.setBounds(0, 0, legend, legendBounds);\n        }\n    }\n    /** @private */\n    getRenderPoint(legendOption, start, textPadding, prevLegend, rect, count, firstLegend) {\n        let padding = this.legend.padding;\n        let previousBound = (prevLegend.location.x + textPadding + prevLegend.textSize.width);\n        if ((previousBound + (legendOption.textSize.width + textPadding)) > (rect.x + rect.width + this.legend.shapeWidth / 2) ||\n            this.isVertical) {\n            legendOption.location.x = start.x;\n            legendOption.location.y = (count === firstLegend) ? prevLegend.location.y :\n                prevLegend.location.y + this.maxItemHeight + padding;\n        }\n        else {\n            legendOption.location.x = (count === firstLegend) ? prevLegend.location.x : previousBound;\n            legendOption.location.y = prevLegend.location.y;\n        }\n        let availwidth = (this.legendBounds.x + this.legendBounds.width) - (legendOption.location.x +\n            textPadding - this.legend.shapeWidth / 2);\n        legendOption.text = textTrim(+availwidth.toFixed(4), legendOption.text, this.legend.textStyle);\n    }\n    /** @private */\n    LegendClick(seriesIndex) {\n        let chart = this.chart;\n        let series = chart.visibleSeries[seriesIndex];\n        let legend = this.legendCollections[seriesIndex];\n        let selectedDataIndexes = [];\n        if (chart.selectionModule) {\n            selectedDataIndexes = extend([], chart.selectionModule.selectedDataIndexes, null, true);\n        }\n        if (chart.legendSettings.toggleVisibility) {\n            if (!series.visible) {\n                series.visible = true;\n            }\n            else {\n                series.visible = false;\n            }\n            legend.visible = (series.visible);\n            if (chart.svgObject.childNodes.length > 0) {\n                while (chart.svgObject.lastChild) {\n                    chart.svgObject.removeChild(chart.svgObject.lastChild);\n                }\n                remove(chart.svgObject);\n            }\n            chart.animateSeries = false;\n            chart.removeSvg();\n            chart.refreshAxis();\n            series.refreshAxisLabel();\n            this.refreshSeries(chart.visibleSeries);\n            chart.refreshBound();\n            if (selectedDataIndexes.length > 0) {\n                chart.selectionModule.selectedDataIndexes = selectedDataIndexes;\n                chart.selectionModule.redrawSelection(chart, chart.selectionMode);\n            }\n        }\n        else if (chart.selectionModule) {\n            chart.selectionModule.legendSelection(chart, seriesIndex);\n        }\n    }\n    refreshSeries(seriesCollection) {\n        for (let series of seriesCollection) {\n            series.position = undefined;\n        }\n    }\n    /**\n     * To show the tooltip for the trimmed text in legend.\n     * @return {void}\n     */\n    click(event) {\n        if (!this.chart.legendSettings.visible) {\n            return;\n        }\n        let targetId = event.target.id;\n        let legendItemsId = [this.legendID + '_text_', this.legendID + '_shape_marker_',\n            this.legendID + '_shape_'];\n        let seriesIndex;\n        for (let id of legendItemsId) {\n            if (targetId.indexOf(id) > -1) {\n                seriesIndex = parseInt(targetId.split(id)[1], 10);\n                this.LegendClick(seriesIndex);\n            }\n        }\n        if (targetId.indexOf(this.legendID + '_pageup') > -1) {\n            this.changePage(event, true);\n        }\n        else if (targetId.indexOf(this.legendID + '_pagedown') > -1) {\n            this.changePage(event, false);\n        }\n    }\n    /**\n     * Get module name\n     */\n    getModuleName() {\n        return 'Legend';\n    }\n    /**\n     * To destroy the Legend.\n     * @return {void}\n     * @private\n     */\n    destroy(chart) {\n        this.removeEventListener();\n    }\n}\n\n/**\n * Annotation Module handles the Annotation for chart and accumulation series.\n */\nclass AnnotationBase {\n    /**\n     * Constructor for chart and accumulation annotation\n     * @param control\n     */\n    constructor(control) {\n        this.control = control;\n    }\n    /**\n     * Method to render the annotation for chart and accumulation series.\n     * @private\n     * @param annotation\n     * @param index\n     */\n    render(annotation, index) {\n        this.isChart = this.control.getModuleName() === 'chart';\n        this.annotation = annotation;\n        let childElement = createTemplate(createElement('div', {\n            id: this.control.element.id + '_Annotation_' + index,\n            styles: 'position: absolute;'\n        }), index, annotation.content, this.control);\n        return childElement;\n    }\n    /**\n     * Method to calculate the location for annotation - coordinate unit as pixel.\n     * @private\n     * @param location\n     */\n    setAnnotationPixelValue(location) {\n        let rect;\n        rect = this.annotation.region === 'Chart' ?\n            new Rect(0, 0, this.control.availableSize.width, this.control.availableSize.height) :\n            this.isChart ?\n                this.control.chartAxisLayoutPanel.seriesClipRect :\n                this.control.series[0].accumulationBound;\n        location.x = ((typeof this.annotation.x !== 'string') ?\n            ((typeof this.annotation.x === 'number') ? this.annotation.x : 0) :\n            stringToNumber(this.annotation.x, rect.width)) + rect.x;\n        location.y = ((typeof this.annotation.y === 'number') ? this.annotation.y :\n            stringToNumber(this.annotation.y, rect.height)) + rect.y;\n        return true;\n    }\n    /**\n     * Method to calculate the location for annotation - coordinate unit as point.\n     * @private\n     * @param location\n     */\n    setAnnotationPointValue(location) {\n        let symbolLocation = new ChartLocation(0, 0);\n        if (this.isChart) {\n            let xAxis;\n            let yAxis;\n            let chart = this.control;\n            let annotation = this.annotation;\n            let xValue;\n            let isLog = false;\n            let xAxisName = annotation.xAxisName;\n            let yAxisName = annotation.yAxisName;\n            let isInverted = chart.requireInvertedAxis;\n            for (let axis of chart.axisCollections) {\n                if (xAxisName === axis.name || (xAxisName == null && axis.name === 'primaryXAxis')) {\n                    xAxis = axis;\n                    if (xAxis.valueType.indexOf('Category') > -1) {\n                        let xAnnotation = xAxis.valueType === 'DateTimeCategory' ? (annotation.x.getTime()).toString() :\n                            annotation.x;\n                        if (xAxis.labels.indexOf(xAnnotation) < 0) {\n                            return false;\n                        }\n                        else {\n                            xValue = xAxis.labels.indexOf(xAnnotation);\n                        }\n                    }\n                    else if (xAxis.valueType === 'DateTime') {\n                        let option = { skeleton: 'full', type: 'dateTime' };\n                        xValue = (typeof this.annotation.x === 'object') ?\n                            Date.parse(chart.intl.getDateParser(option)(chart.intl.getDateFormat(option)(new Date(DataUtil.parse.parseJson({ val: annotation.x }).val)))) : 0;\n                    }\n                    else {\n                        xValue = +annotation.x;\n                    }\n                }\n                else if (yAxisName === axis.name || (yAxisName == null && axis.name === 'primaryYAxis')) {\n                    yAxis = axis;\n                    isLog = yAxis.valueType === 'Logarithmic';\n                }\n            }\n            if (xAxis && yAxis && withIn(xAxis.valueType === 'Logarithmic' ? logBase(xValue, xAxis.logBase) : xValue, xAxis.visibleRange)) {\n                symbolLocation = getPoint(xValue, withIn((isLog ? logBase(+this.annotation.y, yAxis.logBase) : +this.annotation.y), yAxis.visibleRange) ? +annotation.y :\n                    isLog ? Math.pow(yAxis.logBase, yAxis.visibleRange.max) :\n                        +annotation.y > yAxis.visibleRange.max ? yAxis.visibleRange.max : yAxis.visibleRange.min, xAxis, yAxis, isInverted);\n                location.x = symbolLocation.x + (isInverted ? yAxis.rect.x : xAxis.rect.x);\n                location.y = symbolLocation.y + (isInverted ? xAxis.rect.y : yAxis.rect.y);\n            }\n            else {\n                return false;\n            }\n            return true;\n        }\n        else {\n            return this.setAccumulationPointValue(location);\n        }\n    }\n    /**\n     * To process the annotation for accumulation chart\n     * @param annotation\n     * @param index\n     * @param parentElement\n     */\n    processAnnotation(annotation, index, parentElement) {\n        let annotationElement;\n        let location;\n        location = new ChartLocation(0, 0);\n        annotationElement = this.render(annotation, index);\n        if (this['setAnnotation' + annotation.coordinateUnits + 'Value'](location)) {\n            this.setElementStyle(location, annotationElement, parentElement);\n        }\n    }\n    /**\n     * Method to calculate the location for annotation - coordinate unit as point in accumulation chart.\n     * @private\n     * @param location\n     */\n    setAccumulationPointValue(location) {\n        let accumulation = this.control;\n        let point;\n        for (let accPoint of accumulation.visibleSeries[0].points) {\n            if (typeof accPoint.x === 'object') {\n                if (Date.parse(accPoint.x) === Date.parse(this.annotation.x) &&\n                    accPoint.y === this.annotation.y) {\n                    point = accPoint;\n                    break;\n                }\n            }\n            else {\n                if (accPoint.x === this.annotation.x && accPoint.y === this.annotation.y) {\n                    point = accPoint;\n                    break;\n                }\n            }\n        }\n        if (point && point.visible) {\n            location.x = point.symbolLocation.x;\n            location.y = point.symbolLocation.y;\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    /**\n     * Method to set the element style for accumulation / chart annotation.\n     * @private\n     * @param location\n     * @param element\n     * @param parentElement\n     */\n    setElementStyle(location, element, parentElement) {\n        let elementRect = measureElementRect(element);\n        let argsData = {\n            cancel: false, name: annotationRender, content: element,\n            location: location\n        };\n        this.control.trigger(annotationRender, argsData);\n        if (!argsData.cancel) {\n            argsData.content.style.left = this.setAlignmentValue(this.annotation.horizontalAlignment, elementRect.width, argsData.location.x) + 'px';\n            argsData.content.style.top = this.setAlignmentValue(this.annotation.verticalAlignment, elementRect.height, argsData.location.y) + 'px';\n            argsData.content.setAttribute('aria-label', this.annotation.description || 'Annotation');\n            appendElement(argsData.content, parentElement);\n        }\n    }\n    /**\n     * Method to calculate the alignment value for annotation.\n     * @private\n     * @param alignment\n     * @param size\n     * @param value\n     */\n    setAlignmentValue(alignment, size, value) {\n        switch (alignment) {\n            case 'Top':\n            case 'Near':\n                value -= size;\n                break;\n            case 'Bottom':\n            case 'Far':\n                value += 0;\n                break;\n            case 'Middle':\n            case 'Center':\n                value -= (size / 2);\n                break;\n        }\n        return value;\n    }\n}\n\n/**\n * `ChartAnnotation` module handles the annotation for chart.\n */\nclass ChartAnnotation extends AnnotationBase {\n    /**\n     * Constructor for chart annotation.\n     * @private.\n     */\n    constructor(control, annotations) {\n        super(control);\n        this.chart = control;\n        this.annotations = annotations;\n    }\n    /**\n     * Method to render the annotation for chart\n     * @param element\n     * @private\n     */\n    renderAnnotations(element) {\n        this.parentElement = createElement('div', {\n            id: this.chart.element.id + '_Annotation_Collections'\n        });\n        this.annotations.map((annotation, index) => {\n            this.processAnnotation(annotation, index, this.parentElement);\n        });\n        appendElement(this.parentElement, element);\n    }\n    /**\n     * To destroy the annotation.\n     * @return {void}\n     * @private\n     */\n    destroy(control) {\n        // Destroy method performed here\n    }\n    /**\n     * Get module name.\n     */\n    getModuleName() {\n        // Returns te module name\n        return 'Annotation';\n    }\n}\n\n/**\n * `BoxAndWhiskerSeries` module is used to render the box and whisker series.\n */\nclass BoxAndWhiskerSeries extends ColumnBase {\n    /**\n     * Render BoxAndWhisker series.\n     * @return {void}\n     * @private\n     */\n    render(series, xAxis, yAxis, isInverted) {\n        let sideBySideInfo = this.getSideBySideInfo(series);\n        let argsData;\n        let borderWidth = series.border.width || 1;\n        for (let point of series.points) {\n            point.symbolLocations = [];\n            point.regions = [];\n            let centerRegion;\n            if (point.visible && withInRange(series.points[point.index - 1], point, series.points[point.index + 1], series)) {\n                this.findBoxPlotValues(point.y, point, series.boxPlotMode);\n                //region to cover the top and bottom ticks\n                this.updateTipRegion(series, point, sideBySideInfo);\n                //get middle rect\n                centerRegion = this.getRectangle((point.xValue + sideBySideInfo.start), point.upperQuartile, (point.xValue + sideBySideInfo.end), point.lowerQuartile, series);\n                point.regions.push(centerRegion);\n                argsData = this.triggerEvent(series, point, series.interior, {\n                    color: (!isNullOrUndefined(series.border.color) && series.border.color !== 'transparent') ? series.border.color :\n                        getSaturationColor(series.interior, -0.6),\n                    width: series.border.width ? series.border.width : 1\n                });\n                if (!argsData.cancel) {\n                    this.renderBoxAndWhisker(series, point, centerRegion, argsData, this.getPathString(point, series, getPoint(point.xValue, point.median, xAxis, yAxis, isInverted), getPoint(point.xValue, point.average, xAxis, yAxis, isInverted)));\n                }\n            }\n        }\n        if (series.marker.visible) {\n            series.chart.markerRender.render(series);\n        }\n    }\n    /**\n     * update the tip region fo box plot\n     * @param series\n     * @param point\n     * @param sideBySideInfo\n     */\n    updateTipRegion(series, point, sideBySideInfo) {\n        let tipRegion = this.getRectangle((point.xValue + sideBySideInfo.median), point.maximum, (point.xValue + sideBySideInfo.median), point.minimum, series);\n        this.updateTipSize(series, point, tipRegion, series.chart.requireInvertedAxis);\n    }\n    /**\n     * Update tip size to tip regions\n     * @param series\n     * @param point\n     * @param region\n     * @param isInverted\n     */\n    updateTipSize(series, point, region, isInverted) {\n        let borderWidth = series.border.width || 1;\n        if (!isInverted) {\n            region.x -= borderWidth / 2;\n            region.width = region.width || borderWidth;\n        }\n        else {\n            region.y -= borderWidth / 2;\n            region.height = region.height || borderWidth;\n        }\n        point.regions.push(region);\n    }\n    /**\n     * Calculation for path direction performed here\n     * @param point\n     * @param series\n     * @param median\n     * @param average\n     */\n    getPathString(point, series, median, average) {\n        let topRect = point.regions[0];\n        let midRect = point.regions[1];\n        let direction = '';\n        let width = series.chart.requireInvertedAxis ? topRect.height : topRect.width;\n        let center = series.chart.requireInvertedAxis ? topRect.y + topRect.height / 2 :\n            topRect.x + topRect.width / 2;\n        let midWidth = midRect.x + midRect.width;\n        let midHeight = midRect.y + midRect.height;\n        let topWidth = topRect.x + topRect.width;\n        let topHeight = topRect.y + topRect.height;\n        if (!series.chart.requireInvertedAxis) {\n            this.updateTipSize(series, point, { x: midRect.x, y: topRect.y, width: midWidth - midRect.x, height: 0 }, true);\n            this.updateTipSize(series, point, { x: midRect.x, y: topHeight, width: midWidth - midRect.x, height: 0 }, true);\n            direction += 'M ' + midRect.x + ' ' + topRect.y + ' ' + ' L ' + midWidth + ' ' + topRect.y;\n            direction += ' M ' + center + ' ' + topRect.y + ' ' + ' L ' + center + ' ' + midRect.y;\n            direction += ' M ' + midRect.x + ' ' + midRect.y + ' ' + ' L ' + midWidth + ' ' + midRect.y +\n                ' L ' + midWidth + ' ' + midHeight + ' L ' + midRect.x + ' ' + midHeight + ' Z';\n            direction += ' M ' + center + ' ' + midHeight + ' L ' + center + ' ' + topHeight;\n            direction += ' M ' + midRect.x + ' ' + topHeight + ' L ' + midWidth + ' ' + topHeight;\n            direction += ' M ' + midRect.x + ' ' + median.y + ' L ' + midWidth + ' ' + median.y;\n            direction += series.showMean ?\n                ' M ' + (average.x - 5) + ' ' + (average.y - 5) + ' L ' + (average.x + 5) + ' ' + (average.y + 5) +\n                    ' M ' + (average.x + 5) + ' ' + (average.y - 5) + ' L ' + (average.x - 5) + ' ' + (average.y + 5) : '';\n        }\n        else {\n            this.updateTipSize(series, point, { x: topRect.x, y: midRect.y, width: 0, height: midHeight - midRect.y }, false);\n            this.updateTipSize(series, point, { x: topWidth, y: midRect.y, width: 0, height: midHeight - midRect.y }, true);\n            direction += 'M ' + topRect.x + ' ' + midRect.y + ' L ' + topRect.x + ' ' + midHeight;\n            direction += 'M ' + topRect.x + ' ' + center + ' ' + ' L ' + midRect.x + ' ' + center;\n            direction += ' M ' + midRect.x + ' ' + midRect.y + ' ' + ' L ' + midWidth + ' ' + midRect.y +\n                ' L ' + midWidth + ' ' + midHeight + ' L ' + midRect.x + ' ' + midHeight + ' Z';\n            direction += ' M ' + midWidth + ' ' + center + ' L ' + topWidth + ' ' + center;\n            direction += ' M ' + topWidth + ' ' + midRect.y + ' L ' + topWidth + ' ' + midHeight;\n            direction += ' M ' + median.x + ' ' + midRect.y + ' ' + ' L ' + median.x + ' ' + midHeight;\n            direction += series.showMean ?\n                'M ' + (average.x + 5) + ' ' + (average.y - 5) + ' L ' + (average.x - 5) + ' ' + (average.y + 5) +\n                    'M ' + (average.x - 5) + ' ' + (average.y - 5) + ' L ' + (average.x + 5) + ' ' + (average.y + 5) : '';\n        }\n        return direction;\n    }\n    /**\n     * Rendering for box and whisker append here.\n     * @param series\n     * @param point\n     * @param rect\n     * @param argsData\n     * @param direction\n     */\n    renderBoxAndWhisker(series, point, rect, argsData, direction) {\n        let location;\n        let size;\n        let symbolId = series.chart.element.id + '_Series_' + series.index + '_Point_' + point.index;\n        let element = series.chart.renderer.drawPath(new PathOption(symbolId + '_BoxPath', argsData.fill, argsData.border.width, argsData.border.color, series.opacity, series.dashArray, direction));\n        element.setAttribute('aria-label', point.x.toString() + ':' + point.maximum.toString()\n            + ':' + point.minimum.toString() + ':' + point.lowerQuartile.toString() + ':' + point.upperQuartile.toString());\n        let parentElement = series.chart.renderer.createGroup({\n            'id': symbolId\n        });\n        parentElement.appendChild(element);\n        for (let i = 0; i < point.outliers.length; i++) {\n            location = getPoint(point.xValue, point.outliers[i], series.xAxis, series.yAxis, series.chart.requireInvertedAxis);\n            size = new Size(series.marker.width, series.marker.height);\n            point.symbolLocations.push(location);\n            this.updateTipSize(series, point, {\n                x: location.x - (size.width / 2), y: location.y - (size.height / 2),\n                width: size.width, height: size.height\n            }, true);\n        }\n        series.seriesElement.appendChild(parentElement);\n    }\n    /**\n     * To find the box plot values\n     * @param yValues\n     * @param point\n     * @param mode\n     */\n    findBoxPlotValues(yValues, point, mode) {\n        let yCount = yValues.length;\n        let quartile = {\n            average: sum(yValues) / yCount,\n            lowerQuartile: 0, upperQuartile: 0,\n            maximum: 0, minimum: 0,\n            median: 0, outliers: []\n        };\n        if (mode === 'Exclusive') {\n            quartile.lowerQuartile = this.getExclusiveQuartileValue(yValues, yCount, 0.25);\n            quartile.upperQuartile = this.getExclusiveQuartileValue(yValues, yCount, 0.75);\n            quartile.median = this.getExclusiveQuartileValue(yValues, yCount, 0.5);\n        }\n        else if (mode === 'Inclusive') {\n            quartile.lowerQuartile = this.getInclusiveQuartileValue(yValues, yCount, 0.25);\n            quartile.upperQuartile = this.getInclusiveQuartileValue(yValues, yCount, 0.75);\n            quartile.median = this.getInclusiveQuartileValue(yValues, yCount, 0.5);\n        }\n        else {\n            quartile.median = getMedian(yValues);\n            this.getQuartileValues(yValues, yCount, quartile);\n        }\n        this.getMinMaxOutlier(yValues, yCount, quartile);\n        point.minimum = quartile.minimum;\n        point.maximum = quartile.maximum;\n        point.lowerQuartile = quartile.lowerQuartile;\n        point.upperQuartile = quartile.upperQuartile;\n        point.median = quartile.median;\n        point.outliers = quartile.outliers;\n        point.average = quartile.average;\n    }\n    /**\n     * to find the exclusive quartile values\n     * @param yValues\n     * @param count\n     * @param percentile\n     */\n    getExclusiveQuartileValue(yValues, count, percentile) {\n        if (count === 0) {\n            return 0;\n        }\n        else if (count === 1) {\n            return yValues[0];\n        }\n        let value = 0;\n        let rank = percentile * (count + 1);\n        let integerRank = Math.floor(Math.abs(rank));\n        let fractionRank = rank - integerRank;\n        if (integerRank === 0) {\n            value = yValues[0];\n        }\n        else if (integerRank > count - 1) {\n            value = yValues[count - 1];\n        }\n        else {\n            value = fractionRank * (yValues[integerRank] - yValues[integerRank - 1]) + yValues[integerRank - 1];\n        }\n        return value;\n    }\n    /**\n     * to find the inclusive quartile values\n     * @param yValues\n     * @param count\n     * @param percentile\n     */\n    getInclusiveQuartileValue(yValues, count, percentile) {\n        if (count === 0) {\n            return 0;\n        }\n        else if (count === 1) {\n            return yValues[0];\n        }\n        let value = 0;\n        let rank = percentile * (count - 1);\n        let integerRank = Math.floor(Math.abs(rank));\n        let fractionRank = rank - integerRank;\n        value = fractionRank * (yValues[integerRank + 1] - yValues[integerRank]) + yValues[integerRank];\n        return value;\n    }\n    /**\n     * To find the quartile values\n     * @param yValues\n     * @param count\n     * @param lowerQuartile\n     * @param upperQuartile\n     */\n    getQuartileValues(yValues, count, quartile) {\n        if (count === 1) {\n            quartile.lowerQuartile = yValues[0];\n            quartile.upperQuartile = yValues[0];\n            return null;\n        }\n        let isEvenList = count % 2 === 0;\n        let halfLength = count / 2;\n        let lowerQuartileArray = yValues.slice(0, halfLength);\n        let upperQuartileArray = yValues.slice(isEvenList ? halfLength : halfLength + 1, count);\n        quartile.lowerQuartile = getMedian(lowerQuartileArray);\n        quartile.upperQuartile = getMedian(upperQuartileArray);\n    }\n    /**\n     * To find the min, max and outlier values\n     * @param yValues\n     * @param lowerQuartile\n     * @param upperQuartile\n     * @param minimum\n     * @param maximum\n     * @param outliers\n     */\n    getMinMaxOutlier(yValues, count, quartile) {\n        let interquartile = quartile.upperQuartile - quartile.lowerQuartile;\n        let rangeIQR = 1.5 * interquartile;\n        for (let i = 0; i < count; i++) {\n            if (yValues[i] < quartile.lowerQuartile - rangeIQR) {\n                quartile.outliers.push(yValues[i]);\n            }\n            else {\n                quartile.minimum = yValues[i];\n                break;\n            }\n        }\n        for (let i = count - 1; i >= 0; i--) {\n            if (yValues[i] > quartile.upperQuartile + rangeIQR) {\n                quartile.outliers.push(yValues[i]);\n            }\n            else {\n                quartile.maximum = yValues[i];\n                break;\n            }\n        }\n    }\n    /**\n     * Animates the series.\n     * @param  {Series} series - Defines the series to animate.\n     * @return {void}\n     */\n    doAnimation(series) {\n        this.animate(series);\n    }\n    /**\n     * Get module name.\n     */\n    getModuleName() {\n        return 'BoxAndWhiskerSeries';\n        /**\n         * return the module name\n         */\n    }\n    /**\n     * To destroy the candle series.\n     * @return {void}\n     * @private\n     */\n    destroy(chart) {\n        /**\n         * Destroys the candle series.\n         */\n    }\n}\n\n/**\n * `MultiColoredAreaSeries` module used to render the area series with multi color.\n */\nclass MultiColoredAreaSeries extends MultiColoredSeries {\n    /**\n     * Render Area series.\n     * @return {void}\n     * @private\n     */\n    render(series, xAxis, yAxis, isInverted) {\n        let firstPoint;\n        let startPoint = null;\n        let direction = '';\n        let origin = Math.max(series.yAxis.visibleRange.min, 0);\n        let options = [];\n        let startRegion;\n        let previous;\n        let rendered;\n        let segments = this.sortSegments(series, series.segments);\n        series.points.map((point, i, seriesPoints) => {\n            point.symbolLocations = [];\n            point.regions = [];\n            rendered = false;\n            if (point.visible && withInRange(seriesPoints[i - 1], point, seriesPoints[i + 1], series)) {\n                direction += this.getAreaPathDirection(point.xValue, origin, series, isInverted, getPoint, startPoint, 'M');\n                startPoint = startPoint || new ChartLocation(point.xValue, origin);\n                firstPoint = getPoint(point.xValue, point.yValue, xAxis, yAxis, isInverted, series);\n                if (previous && this.setPointColor(point, previous, series, series.segmentAxis === 'X', segments)) {\n                    rendered = true;\n                    startRegion = getPoint(startPoint.x, origin, xAxis, yAxis, isInverted, series);\n                    direction += ('L' + ' ' + (firstPoint.x) + ' ' + (firstPoint.y) + ' ');\n                    direction += ('L' + ' ' + (firstPoint.x) + ' ' + (startRegion.y) + ' ');\n                    this.generatePathOption(options, series, previous, direction, '_Point_' + previous.index);\n                    direction = 'M' + ' ' + (firstPoint.x) + ' ' + (startRegion.y) + ' ' + 'L' + ' ' +\n                        (firstPoint.x) + ' ' + (firstPoint.y) + ' ';\n                }\n                else {\n                    direction += ('L' + ' ' + (firstPoint.x) + ' ' + (firstPoint.y) + ' ');\n                    this.setPointColor(point, null, series, series.segmentAxis === 'X', segments);\n                }\n                if (seriesPoints[i + 1] && !seriesPoints[i + 1].visible && series.emptyPointSettings.mode !== 'Drop') {\n                    direction += this.getAreaEmptyDirection({ 'x': point.xValue, 'y': origin }, startPoint, series, isInverted, getPoint);\n                    startPoint = null;\n                }\n                previous = point;\n                this.storePointLocation(point, series, isInverted, getPoint);\n            }\n        });\n        if (!rendered) {\n            direction = series.points.length > 1 ?\n                (direction + this.getAreaPathDirection(previous.xValue, origin, series, isInverted, getPoint, null, 'L')) : '';\n            this.generatePathOption(options, series, previous, direction, '');\n        }\n        this.applySegmentAxis(series, options, segments);\n        this.renderMarker(series);\n    }\n    /**\n     * To Store the path directions of the area\n     */\n    generatePathOption(options, series, point, direction, id) {\n        options.push(new PathOption(series.chart.element.id + '_Series_' + series.index + id, series.setPointColor(point, series.interior), series.border.width, series.border.color, series.opacity, series.dashArray, direction));\n    }\n    /**\n     * To destroy the area series.\n     * @return {void}\n     * @private\n     */\n    destroy(chart) {\n        /**\n         * Destroy method calling here\n         */\n    }\n    /**\n     * Get module name\n     */\n    getModuleName() {\n        /**\n         * Returns the module name of the series\n         */\n        return 'MultiColoredAreaSeries';\n    }\n    /**\n     * Animates the series.\n     * @param  {Series} series - Defines the series to animate.\n     * @return {void}\n     */\n    doAnimation(series) {\n        this.doLinearAnimation(series, series.animation);\n    }\n}\n\n/**\n * `MultiColoredLineSeries` used to render the line series with multi color.\n */\nclass MultiColoredLineSeries extends MultiColoredSeries {\n    /**\n     * Render Line Series.\n     * @return {void}.\n     * @private\n     */\n    render(series, xAxis, yAxis, isInverted) {\n        let previous = null;\n        let startPoint = 'M';\n        let visiblePoints = this.improveChartPerformance(series);\n        let options = [];\n        let direction = '';\n        let segments = this.sortSegments(series, series.segments);\n        for (let point of visiblePoints) {\n            point.regions = [];\n            if (point.visible && withInRange(visiblePoints[point.index - 1], point, visiblePoints[point.index + 1], series)) {\n                direction += this.getLineDirection(previous, point, series, isInverted, getPoint, startPoint);\n                if (previous != null) {\n                    if (this.setPointColor(point, previous, series, series.segmentAxis === 'X', segments)) {\n                        options.push(new PathOption(series.chart.element.id + '_Series_' + series.index + '_Point_' + previous.index, 'none', series.width, series.setPointColor(previous, series.interior), series.opacity, series.dashArray, direction));\n                        startPoint = 'M';\n                        direction = '';\n                    }\n                    else {\n                        startPoint = 'L';\n                    }\n                }\n                else {\n                    this.setPointColor(point, null, series, series.segmentAxis === 'X', segments);\n                }\n                previous = point;\n                this.storePointLocation(point, series, isInverted, getPoint);\n            }\n            else {\n                previous = (series.emptyPointSettings.mode === 'Drop') ? previous : null;\n                startPoint = (series.emptyPointSettings.mode === 'Drop') ? startPoint : 'M';\n                point.symbolLocations = [];\n            }\n        }\n        if (direction !== '') {\n            options.push(new PathOption(series.chart.element.id + '_Series_' + series.index, 'none', series.width, series.setPointColor(visiblePoints[visiblePoints.length - 1], series.interior), series.opacity, series.dashArray, direction));\n        }\n        this.applySegmentAxis(series, options, segments);\n        this.renderMarker(series);\n    }\n    /**\n     * Animates the series.\n     * @param  {Series} series - Defines the series to animate.\n     * @return {void}\n     */\n    doAnimation(series) {\n        this.doLinearAnimation(series, series.animation);\n    }\n    /**\n     * Get module name.\n     */\n    getModuleName() {\n        /**\n         * Returns the module name of the series\n         */\n        return 'MultiColoredLineSeries';\n    }\n    /**\n     * To destroy the line series.\n     * @return {void}\n     * @private\n     */\n    destroy(chart) {\n        /**\n         * Destroy method performed here\n         */\n    }\n}\n\n/**\n * `MultiLevelLabel` module is used to render the multi level label in chart.\n */\nclass MultiLevelLabel {\n    /**\n     * Constructor for the logerithmic module.\n     * @private\n     */\n    constructor(chart) {\n        /** @private */\n        this.xAxisPrevHeight = [];\n        /** @private */\n        this.xAxisMultiLabelHeight = [];\n        /** @private */\n        this.yAxisPrevHeight = [];\n        /** @private */\n        this.yAxisMultiLabelHeight = [];\n        this.chart = chart;\n    }\n    /**\n     * Finds multilevel label height\n     * @return {void}\n     */\n    getMultilevelLabelsHeight(axis) {\n        let value = 0;\n        let multiLevelLabelsHeight = [];\n        let prevHeight = [];\n        let isVertical = axis.orientation === 'Vertical';\n        let axisValue = isVertical ? axis.rect.height : axis.rect.width;\n        let labelSize;\n        let height;\n        let padding = 10;\n        let gap;\n        axis.multiLevelLabels.map((multiLevel, index) => {\n            multiLevel.categories.map((categoryLabel) => {\n                if (categoryLabel.text !== '' && categoryLabel.start !== null && categoryLabel.end !== null) {\n                    labelSize = measureText(categoryLabel.text, multiLevel.textStyle);\n                    height = isVertical ? labelSize.width : labelSize.height;\n                    height += 2 * multiLevel.border.width +\n                        (multiLevel.border.type === 'CurlyBrace' ? padding : 0);\n                    gap = (categoryLabel.maximumTextWidth !== null) ? categoryLabel.maximumTextWidth :\n                        (valueToCoefficient(typeof categoryLabel.end === 'string' ? Number(new Date(categoryLabel.end)) :\n                            categoryLabel.end, axis) * axisValue) -\n                            (valueToCoefficient(typeof categoryLabel.start === 'string' ? Number(new Date(categoryLabel.start)) :\n                                categoryLabel.start, axis) * axisValue);\n                    if ((labelSize.width > gap - padding) && gap > 0 && (multiLevel.overflow === 'Wrap') && !isVertical) {\n                        height = (height * (textWrap(categoryLabel.text, gap - padding, multiLevel.textStyle).length));\n                    }\n                    multiLevelLabelsHeight[index] = !multiLevelLabelsHeight[index] ? height :\n                        ((multiLevelLabelsHeight[index] < height) ? height : multiLevelLabelsHeight[index]);\n                }\n            });\n            prevHeight[index] = value;\n            value += multiLevelLabelsHeight[index] ? (multiLevelLabelsHeight[index] + padding) : 0;\n        });\n        axis.multiLevelLabelHeight = value + ((axis.title !== '' || (this.chart.legendModule && this.chart.legendSettings.visible))\n            ? padding / 2 : 0);\n        if (isVertical) {\n            this.yAxisMultiLabelHeight = multiLevelLabelsHeight;\n            this.yAxisPrevHeight = prevHeight;\n        }\n        else {\n            this.xAxisMultiLabelHeight = multiLevelLabelsHeight;\n            this.xAxisPrevHeight = prevHeight;\n        }\n    }\n    /**\n     * render x axis multi level labels\n     * @private\n     * @return {void}\n     */\n    renderXAxisMultiLevelLabels(axis, index, parent, axisRect) {\n        let x;\n        let y;\n        let padding = 10;\n        let startX;\n        let startY = (axis.labelPosition === axis.tickPosition ? axis.majorTickLines.height : 0) +\n            (axis.maxLabelSize.height) + padding;\n        let endX;\n        let pathRect = '';\n        let start;\n        let end;\n        let labelSize;\n        let clipY;\n        let isOutside = axis.labelPosition === 'Outside';\n        let gap;\n        let anchor;\n        let isInversed = axis.isInversed;\n        let argsData;\n        let labelElement;\n        let opposedPosition = axis.opposedPosition;\n        clipY = ((opposedPosition && !isOutside) || (!opposedPosition && isOutside)) ?\n            (axisRect.y + startY - axis.majorTickLines.width) : (axisRect.y - startY - axis.multiLevelLabelHeight);\n        this.createClipRect(axisRect.x - axis.majorTickLines.width, clipY, axis.multiLevelLabelHeight + padding, axisRect.width + 2 * axis.majorTickLines.width, this.chart.element.id + '_XAxis_Clippath_' + index, this.chart.element.id + 'XAxisMultiLevelLabel' + index);\n        axis.multiLevelLabels.map((multiLevel, level) => {\n            pathRect = '';\n            multiLevel.categories.map((categoryLabel, i) => {\n                labelElement = this.chart.renderer.createGroup({ id: this.chart.element.id + index + '_MultiLevelLabel' + level });\n                start = typeof categoryLabel.start === 'string' ? Number(new Date(categoryLabel.start)) : categoryLabel.start;\n                end = typeof categoryLabel.end === 'string' ? Number(new Date(categoryLabel.end)) : categoryLabel.end;\n                if (((start >= axis.visibleRange.min && start <= axis.visibleRange.max)\n                    || (end >= axis.visibleRange.min && end <= axis.visibleRange.max))) {\n                    argsData = this.triggerMultiLabelRender(axis, categoryLabel.text, axis.multiLevelLabels[level].textStyle, axis.multiLevelLabels[level].alignment);\n                    if (!argsData.cancel) {\n                        startX = valueToCoefficient(start, axis) * axisRect.width;\n                        endX = valueToCoefficient(end, axis) * axisRect.width;\n                        endX = isInversed ? [startX, startX = endX][0] : endX;\n                        labelSize = measureText(argsData.text, argsData.textStyle);\n                        gap = ((categoryLabel.maximumTextWidth === null) ? endX - startX : categoryLabel.maximumTextWidth) - padding;\n                        x = startX + axisRect.x + padding;\n                        y = ((opposedPosition && !isOutside) || (!opposedPosition && isOutside)) ? (startY + axisRect.y +\n                            labelSize.height / 2 + padding + this.xAxisPrevHeight[level]) : (axisRect.y - startY + labelSize.height / 2 -\n                            this.xAxisMultiLabelHeight[level] - this.xAxisPrevHeight[level]);\n                        if (argsData.alignment === 'Center') {\n                            x += (endX - startX - padding) / 2;\n                            anchor = 'middle';\n                        }\n                        else if (argsData.alignment === 'Far') {\n                            x = x + (endX - startX - padding) - multiLevel.border.width / 2;\n                            anchor = 'end';\n                        }\n                        else {\n                            anchor = 'start';\n                            x += multiLevel.border.width / 2;\n                        }\n                        y = multiLevel.border.type === 'CurlyBrace' ?\n                            (((!opposedPosition && isOutside) || (opposedPosition && !isOutside)) ? y + padding : y - padding / 2) : y;\n                        let options = new TextOption(this.chart.element.id + index + '_Axis_MultiLevelLabel_Level_' + level + '_Text_' + i, x, y, anchor, argsData.text);\n                        if (multiLevel.overflow !== 'None') {\n                            options.text = (multiLevel.overflow === 'Wrap') ?\n                                textWrap(argsData.text, gap, argsData.textStyle) : textTrim(gap, argsData.text, argsData.textStyle);\n                            options.x = options.x - padding / 2;\n                        }\n                        textElement(options, argsData.textStyle, argsData.textStyle.color || this.chart.themeStyle.axisLabel, labelElement);\n                        if (multiLevel.border.width > 0 && multiLevel.border.type !== 'WithoutBorder') {\n                            pathRect = this.renderXAxisLabelBorder(level, endX - startX - padding, axis, startX, startY, labelSize, options, axisRect, argsData.alignment, pathRect, isOutside, opposedPosition);\n                        }\n                        this.multiElements.appendChild(labelElement);\n                    }\n                }\n            });\n            if (pathRect !== '') {\n                this.createBorderElement(level, index, axis, pathRect);\n            }\n        });\n        parent.appendChild(this.multiElements);\n    }\n    /**\n     * render x axis multi level labels border\n     * @private\n     * @return {void}\n     */\n    renderXAxisLabelBorder(labelIndex, gap, axis, startX, startY, labelSize, textOptions, axisRect, alignment, path, isOutside, opposedPosition) {\n        let padding = 10;\n        let padding1;\n        let padding2;\n        let value;\n        let value1;\n        let groupLabel = axis.multiLevelLabels[labelIndex];\n        let width = gap + padding;\n        let height = this.xAxisMultiLabelHeight[labelIndex] + padding;\n        let x = startX + axisRect.x;\n        let y = ((!opposedPosition && isOutside) || (opposedPosition && !isOutside)) ?\n            (startY + axisRect.y + this.xAxisPrevHeight[labelIndex]) : (axisRect.y - startY - this.xAxisPrevHeight[labelIndex]);\n        switch (groupLabel.border.type) {\n            case 'WithoutTopandBottomBorder':\n            case 'Rectangle':\n            case 'WithoutTopBorder':\n                height = ((!opposedPosition && isOutside) || (opposedPosition && !isOutside)) ? height : -height;\n                path += 'M' + x + ' ' + y + 'L' + x + ' ' + (y + height) +\n                    'M' + (x + width) + ' ' + y + 'L' + (x + width) + ' ' + (y + height);\n                path += (groupLabel.border.type !== 'WithoutTopandBottomBorder') ? ('L' + ' ' + (x) + ' ' + (y + height) + ' ') : ' ';\n                path += groupLabel.border.type === 'Rectangle' ? ('M' + x + ' ' + y + 'L' + (x + width) + ' ' + y) : ' ';\n                break;\n            case 'Brace':\n                if (alignment === 'Near') {\n                    value = textOptions.x;\n                    value1 = textOptions.x + labelSize.width + 2;\n                }\n                else if (alignment === 'Center') {\n                    value = textOptions.x - labelSize.width / 2 - 2;\n                    value1 = textOptions.x + labelSize.width / 2 + 2;\n                }\n                else {\n                    value = textOptions.x - labelSize.width - 2;\n                    value1 = textOptions.x;\n                }\n                height = ((!opposedPosition && isOutside) || (opposedPosition && !isOutside)) ? height : -height;\n                path += 'M' + x + ' ' + y + 'L' + x + ' ' + (y + height / 2) +\n                    'M' + x + ' ' + (y + height / 2) + 'L' + (value - 2) + ' ' + (y + height / 2) +\n                    'M' + (value1) + ' ' + (y + height / 2) + 'L' + (x + width) + ' ' + (y + height / 2) +\n                    'M' + (x + width) + ' ' + (y + height / 2) + 'L' + (x + width) + ' ' + (y);\n                break;\n            case 'CurlyBrace':\n                if ((!opposedPosition && isOutside) || (opposedPosition && !isOutside)) {\n                    padding = 10;\n                    padding1 = 15;\n                    padding2 = 5;\n                }\n                else {\n                    padding = -10;\n                    padding1 = -15;\n                    padding2 = -5;\n                }\n                if (alignment === 'Center') {\n                    path += 'M' + x + ' ' + y + ' C ' + x + ' ' + y + ' ' + (x + 5) + ' ' + (y + padding) + ' ' + (x + 10) + ' ' +\n                        (y + padding) + 'L' + (x + width / 2 - 5) + ' ' + (y + padding) + 'L' + (x + width / 2) + ' ' + (y + padding1) +\n                        'L' + (x + width / 2 + 5) + ' ' + (y + padding) + 'L' + (x + width - 10) + ' ' + (y + padding) + ' C ' +\n                        (x + width - 10) + ' ' + (y + padding) + ' ' + (x + width) + ' ' + (y + padding2) + ' ' + (x + width) + ' ' + (y);\n                }\n                else if (alignment === 'Near') {\n                    path += 'M' + x + ' ' + y + ' C ' + x + ' ' + y + ' ' + (x + 5) + ' ' + (y + padding) + ' ' + (x + 10) + ' ' +\n                        (y + padding) + 'L' + (x + 15) + ' ' + (y + padding1) + 'L' + (x + 20) + ' ' + (y + padding) + 'L' +\n                        (x + width - 10) + ' ' + (y + padding) + ' C ' + (x + width - 10) + ' ' + (y + padding) + ' ' + (x + width) + ' '\n                        + (y + padding2) + ' ' + (x + width) + ' ' + (y);\n                }\n                else {\n                    path += 'M' + x + ' ' + y + ' C ' + x + ' ' + y + ' ' + (x + 5) + ' ' + (y + padding) + ' ' + (x + 10) + ' ' +\n                        (y + padding) + 'L' + (x + width - 20) + ' ' + (y + padding) + 'L' + (x + width - 15) + ' ' + (y + padding1) +\n                        'L' + (x + width - 10) + ' ' + (y + padding) + 'L' + (x + width - 10) + ' ' + (y + padding) + ' C '\n                        + (x + width - 10) + ' ' + (y + padding) + ' ' + (x + width) + ' ' + (y + padding2) + ' ' + (x + width) + ' ' + (y);\n                }\n                break;\n        }\n        return path;\n    }\n    /**\n     * render y axis multi level labels\n     * @private\n     * @return {void}\n     */\n    renderYAxisMultiLevelLabels(axis, index, parent, rect) {\n        let labelSize;\n        let clipX;\n        let isOutside = axis.labelPosition === 'Outside';\n        let x;\n        let y;\n        let padding = 10;\n        let startX = (axis.tickPosition === axis.labelPosition ? axis.majorTickLines.height : 0) +\n            (axis.maxLabelSize.width) + padding;\n        let startY;\n        let path = '';\n        let labelElement;\n        let endY;\n        let argsData;\n        let isInversed = axis.isInversed;\n        let start;\n        let end;\n        let gap;\n        let anchor = 'middle';\n        let opposedPosition = axis.opposedPosition;\n        clipX = ((opposedPosition && !isOutside) || (!opposedPosition && isOutside)) ?\n            (rect.x - axis.multiLevelLabelHeight - startX - padding) : (rect.x + startX);\n        this.createClipRect(clipX, rect.y - axis.majorTickLines.width, rect.height + 2 * axis.majorTickLines.width, axis.multiLevelLabelHeight + padding, this.chart.element.id + '_YAxis_Clippath_' + index, this.chart.element.id + 'YAxisMultiLevelLabel' + index);\n        axis.multiLevelLabels.map((multiLevel, level) => {\n            path = '';\n            multiLevel.categories.map((categoryLabel, i) => {\n                labelElement = this.chart.renderer.createGroup({ id: this.chart.element.id + index + '_MultiLevelLabel' + level });\n                end = typeof categoryLabel.end === 'string' ? Number(new Date(categoryLabel.end)) : categoryLabel.end;\n                start = typeof categoryLabel.start === 'string' ? Number(new Date(categoryLabel.start)) : categoryLabel.start;\n                if (((start >= axis.visibleRange.min && start <= axis.visibleRange.max)\n                    || (end >= axis.visibleRange.min && end <= axis.visibleRange.max))) {\n                    startY = valueToCoefficient((start), axis) * (rect.height);\n                    endY = valueToCoefficient((end), axis) * (rect.height);\n                    endY = isInversed ? [startY, startY = endY][0] : endY;\n                    argsData = this.triggerMultiLabelRender(axis, categoryLabel.text, multiLevel.textStyle, multiLevel.alignment);\n                    if (!argsData.cancel) {\n                        labelSize = measureText(argsData.text, argsData.textStyle);\n                        gap = endY - startY;\n                        x = rect.x - startX - this.yAxisPrevHeight[level] -\n                            (this.yAxisMultiLabelHeight[level] / 2) - padding / 2;\n                        y = rect.height + rect.y - startY - (gap / 2);\n                        if (opposedPosition) {\n                            x = isOutside ? rect.x + startX + padding / 2 + (this.yAxisMultiLabelHeight[level] / 2) +\n                                this.yAxisPrevHeight[level] : rect.x - startX - (this.yAxisMultiLabelHeight[level] / 2) -\n                                this.yAxisPrevHeight[level] - padding / 2;\n                        }\n                        else {\n                            x = isOutside ? x : rect.x + startX + padding / 2 + (this.yAxisMultiLabelHeight[level] / 2) +\n                                this.yAxisPrevHeight[level];\n                        }\n                        if (argsData.alignment === 'Center') {\n                            y += labelSize.height / 4;\n                        }\n                        else if (argsData.alignment === 'Far') {\n                            y += gap / 2 - labelSize.height / 2;\n                        }\n                        else {\n                            y = y - gap / 2 + labelSize.height;\n                        }\n                        x = multiLevel.border.type === 'CurlyBrace' ? (((!opposedPosition && isOutside) ||\n                            (opposedPosition && !isOutside)) ? x - padding : x + padding) : x;\n                        let options = new TextOption(this.chart.element.id + index + '_Axis_MultiLevelLabel_Level_' + level + '_Text_' + i, x, y, anchor, argsData.text);\n                        options.text = (multiLevel.overflow === 'Trim') ?\n                            textTrim((categoryLabel.maximumTextWidth === null ? this.yAxisMultiLabelHeight[level] :\n                                categoryLabel.maximumTextWidth), argsData.text, argsData.textStyle) : options.text;\n                        textElement(options, argsData.textStyle, argsData.textStyle.color || this.chart.themeStyle.axisLabel, labelElement);\n                        if (multiLevel.border.width > 0 && multiLevel.border.type !== 'WithoutBorder') {\n                            path = this.renderYAxisLabelBorder(level, gap, axis, endY, startX, startY, labelSize, options, rect, argsData.alignment, path, isOutside, opposedPosition);\n                        }\n                        this.multiElements.appendChild(labelElement);\n                    }\n                }\n            });\n            if (path !== '') {\n                this.createBorderElement(level, index, axis, path);\n            }\n        });\n        parent.appendChild(this.multiElements);\n    }\n    /**\n     * render y axis multi level labels border\n     * @private\n     * @return {void}\n     */\n    renderYAxisLabelBorder(labelIndex, gap, axis, endY, startX, startY, labelSize, textOptions, rect, alignment, path, isOutside, opposedPosition) {\n        let height = endY - startY;\n        let padding = 10;\n        let padding1;\n        let padding2;\n        let groupLabel = axis.multiLevelLabels[labelIndex];\n        let y = rect.y + rect.height - endY;\n        let width = this.yAxisMultiLabelHeight[labelIndex] + padding;\n        let x = ((!opposedPosition && isOutside) || (opposedPosition && !isOutside)) ? rect.x - startX -\n            this.yAxisPrevHeight[labelIndex] : rect.x + startX + this.yAxisPrevHeight[labelIndex];\n        switch (groupLabel.border.type) {\n            case 'WithoutTopandBottomBorder':\n            case 'Rectangle':\n            case 'WithoutTopBorder':\n                width = ((!opposedPosition && isOutside) || (opposedPosition && !isOutside)) ? -width : width;\n                path += 'M' + x + ' ' + y + 'L' + (x + width) + ' ' + y +\n                    'M' + x + ' ' + (y + height) + 'L' + (x + width) + ' ' + (y + height);\n                path += (groupLabel.border.type !== 'WithoutTopandBottomBorder') ? ('L' + ' ' + (x + width) + ' ' + y + ' ') : ' ';\n                path += (groupLabel.border.type === 'Rectangle') ? ('M' + (x) + ' ' + (y + height) + 'L' + ' ' + (x) + ' ' + y + ' ') : ' ';\n                break;\n            case 'Brace':\n                width = ((!opposedPosition && isOutside) || (opposedPosition && !isOutside)) ? width : -width;\n                path += 'M ' + (x) + ' ' + y + ' L ' + (x - width / 2) + ' ' + y + ' L ' + (x - width / 2) + ' ' +\n                    (textOptions.y - labelSize.height / 2 - 4) + ' M ' + (x - width / 2) + ' ' +\n                    (textOptions.y + labelSize.height / 4 + 2) +\n                    ' L ' + (x - width / 2) + ' ' + (y + height) + ' L ' + (x) + ' ' + (y + height);\n                break;\n            case 'CurlyBrace':\n                if ((!opposedPosition && isOutside) || (opposedPosition && !isOutside)) {\n                    padding = -10;\n                    padding1 = -15;\n                    padding2 = -5;\n                }\n                else {\n                    padding = 10;\n                    padding1 = 15;\n                    padding2 = 5;\n                }\n                if (alignment === 'Center') {\n                    path += 'M ' + x + ' ' + y + ' C ' + x + ' ' + y + ' ' + (x + padding) + ' ' + y + ' ' + (x + padding) + ' ' + (y + 10)\n                        + ' L ' + (x + padding) + ' ' + (y + (height - 10) / 2) + ' L ' + (x + padding1) + ' ' + (y + (height - 10) / 2 + 5)\n                        + ' L ' + (x + padding) + ' ' + (y + (height - 10) / 2 + 10) + ' L ' + (x + padding) + ' ' + (y + (height - 10)) +\n                        ' C ' + (x + padding) + ' ' + (y + (height - 10)) + ' ' + (x + padding2) + ' ' + (y + height) + ' '\n                        + x + ' ' + (y + height);\n                }\n                else if (alignment === 'Far') {\n                    path += 'M ' + x + ' ' + y + ' C ' + x + ' ' + y + ' ' + (x + padding) + ' ' + y + ' ' + (x + padding) + ' ' + (y + 10)\n                        + ' L ' + (x + padding) + ' ' + (y + height - 20) + ' ' + ' L ' + (x + padding1) + ' ' + (y + (height - 15)) +\n                        ' L ' + (x + padding) + ' ' + (y + (height - 10)) + ' L ' + (x + padding) + ' ' + (y + (height - 10)) +\n                        ' C' + (x + padding) + ' ' + (y + (height - 10)) + ' ' + (x + padding) + ' ' + (y + height) + ' ' + x + ' '\n                        + (y + height);\n                }\n                else {\n                    path += 'M ' + x + ' ' + y + ' C ' + x + ' ' + y + ' ' + (x + padding) + ' ' + y + ' ' + (x + padding) + ' ' + (y + 10)\n                        + ' L ' + (x + padding1) + ' ' + (y + 15) +\n                        ' L ' + (x + padding) + ' ' + (y + 20) + ' L ' + (x + padding) + ' ' + (y + (height - 10)) +\n                        ' C' + (x + padding) + ' ' + (y + (height - 10)) + ' ' + (x + padding2) + ' ' + (y + height) + ' ' + x +\n                        ' ' + (y + height);\n                }\n                break;\n        }\n        return path;\n    }\n    /**\n     * create cliprect\n     * @return {void}\n     * @private\n     */\n    createClipRect(x, y, height, width, clipId, axisId) {\n        this.multiElements = this.chart.renderer.createGroup({\n            'id': axisId,\n            'clip-path': 'url(#' + clipId + ')'\n        });\n        this.multiElements.appendChild(this.chart.renderer.drawClipPath({\n            'id': clipId,\n            'x': x,\n            'y': y,\n            'width': width,\n            'height': height,\n            'fill': 'white',\n            'stroke-width': 1, 'stroke': 'Gray'\n        }));\n    }\n    /**\n     * create borer element\n     * @return {void}\n     * @private\n     */\n    createBorderElement(borderIndex, axisIndex, axis, path) {\n        let borderElement = this.chart.renderer.drawPath(new PathOption(this.chart.element.id + axisIndex + '_Axis_MultiLevelLabel_Rect_' + borderIndex, 'Transparent', axis.multiLevelLabels[borderIndex].border.width, axis.multiLevelLabels[borderIndex].border.color || this.chart.themeStyle.axisLine, 1, '', path));\n        borderElement.setAttribute('style', 'pointer-events: none');\n        this.multiElements.appendChild(borderElement);\n    }\n    /**\n     * Triggers the event.\n     * @return {void}\n     * @private\n     */\n    triggerMultiLabelRender(axis, text, textStyle, textAlignment) {\n        let argsData;\n        argsData = {\n            cancel: false, name: axisMultiLabelRender, axis: axis,\n            text: text, textStyle: textStyle, alignment: textAlignment\n        };\n        this.chart.trigger(axisMultiLabelRender, argsData);\n        return argsData;\n    }\n    /**\n     * To get the module name for `MultiLevelLabel`.\n     * @private\n     */\n    getModuleName() {\n        return 'MultiLevelLabel';\n    }\n    /**\n     * To destroy the `MultiLevelLabel` module.\n     * @private\n     */\n    destroy() {\n        // destroy peform here\n    }\n}\n\n/**\n * Chart component exported items\n */\n\nvar __decorate$8 = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n/**\n * AccumulationChart base file\n */\n/**\n * Annotation for accumulation series\n */\nclass AccumulationAnnotationSettings extends ChildProperty {\n}\n__decorate$8([\n    Property(null)\n], AccumulationAnnotationSettings.prototype, \"content\", void 0);\n__decorate$8([\n    Property('0')\n], AccumulationAnnotationSettings.prototype, \"x\", void 0);\n__decorate$8([\n    Property('0')\n], AccumulationAnnotationSettings.prototype, \"y\", void 0);\n__decorate$8([\n    Property('Pixel')\n], AccumulationAnnotationSettings.prototype, \"coordinateUnits\", void 0);\n__decorate$8([\n    Property('Chart')\n], AccumulationAnnotationSettings.prototype, \"region\", void 0);\n__decorate$8([\n    Property('Middle')\n], AccumulationAnnotationSettings.prototype, \"verticalAlignment\", void 0);\n__decorate$8([\n    Property('Center')\n], AccumulationAnnotationSettings.prototype, \"horizontalAlignment\", void 0);\n__decorate$8([\n    Property(null)\n], AccumulationAnnotationSettings.prototype, \"description\", void 0);\n/**\n * Configures the dataLabel in accumulation chart.\n */\nclass AccumulationDataLabelSettings extends ChildProperty {\n}\n__decorate$8([\n    Property(false)\n], AccumulationDataLabelSettings.prototype, \"visible\", void 0);\n__decorate$8([\n    Property(null)\n], AccumulationDataLabelSettings.prototype, \"name\", void 0);\n__decorate$8([\n    Property('transparent')\n], AccumulationDataLabelSettings.prototype, \"fill\", void 0);\n__decorate$8([\n    Property('Inside')\n], AccumulationDataLabelSettings.prototype, \"position\", void 0);\n__decorate$8([\n    Property(5)\n], AccumulationDataLabelSettings.prototype, \"rx\", void 0);\n__decorate$8([\n    Property(5)\n], AccumulationDataLabelSettings.prototype, \"ry\", void 0);\n__decorate$8([\n    Complex({ width: null, color: null }, Border)\n], AccumulationDataLabelSettings.prototype, \"border\", void 0);\n__decorate$8([\n    Complex({ size: '11px', color: null }, Font)\n], AccumulationDataLabelSettings.prototype, \"font\", void 0);\n__decorate$8([\n    Complex({}, Connector)\n], AccumulationDataLabelSettings.prototype, \"connectorStyle\", void 0);\n__decorate$8([\n    Property(null)\n], AccumulationDataLabelSettings.prototype, \"template\", void 0);\n/**\n * Points model for the series.\n */\nclass AccPoints {\n    constructor() {\n        this.visible = true;\n        this.symbolLocation = null;\n        /** @private */\n        this.region = null;\n        /** @private */\n        this.labelRegion = null;\n        /** @private */\n        this.labelVisible = true;\n        this.regions = null;\n    }\n}\n/**\n *  Configures the series in accumulation chart.\n */\nclass AccumulationSeries extends ChildProperty {\n    constructor() {\n        /**\n         * Specifies the dataSource for the series. It can be an array of JSON objects or an instance of DataManager.\n         * ```html\n         * <div id='Pie'></div>\n         * ```\n         * ```typescript\n         * let dataManager: DataManager = new DataManager({\n         *         url: 'http://mvc.syncfusion.com/Services/Northwnd.svc/Tasks/'\n         * });\n         * let query: Query = new Query().take(50).where('Estimate', 'greaterThan', 0, false);\n         * let pie: AccumulationChart = new AccumulationChart({\n         * ...\n         *     series: [{\n         *        dataSource: dataManager,\n         *        xName: 'Id',\n         *        yName: 'Estimate',\n         *        query: query\n         *    }],\n         * ...\n         * });\n         * pie.appendTo('#Pie');\n         * ```\n         * @default ''\n         */\n        super(...arguments);\n        /** @private */\n        this.points = [];\n        /** @private */\n        this.sumOfPoints = 0;\n        /** @private */\n        this.isRectSeries = true;\n        /** @private */\n        this.clipRect = new Rect(0, 0, 0, 0);\n    }\n    /** @private To refresh the Datamanager for series */\n    refreshDataManager(accumulation) {\n        if (isNullOrUndefined(this.query)) {\n            this.dataManagerSuccess({ result: this.dataSource, count: this.dataSource.length }, accumulation);\n            return;\n        }\n        let dataManager = this.dataModule.getData(this.dataModule.generateQuery().requiresCount());\n        dataManager.then((e) => this.dataManagerSuccess(e, accumulation));\n    }\n    /**\n     * To get points on dataManager is success\n     * @private\n     */\n    dataManagerSuccess(e, accumulation) {\n        let argsData = {\n            name: seriesRender, series: this, data: e.result,\n        };\n        accumulation.trigger(seriesRender, argsData);\n        this.resultData = e.result;\n        this.getPoints(e.result, accumulation);\n        if (++accumulation.seriesCounts === accumulation.visibleSeries.length) {\n            accumulation.refreshChart();\n        }\n    }\n    /** @private To find points from result data */\n    getPoints(result, accumulation) {\n        let length = Object.keys(result).length;\n        this.sumOfPoints = 0;\n        if (length === 0) {\n            return null;\n        }\n        this.findSumOfPoints(result);\n        this.points = [];\n        this.sumOfClub = 0;\n        let point;\n        let colors = this.palettes.length ? this.palettes : getSeriesColor(accumulation.theme);\n        let clubValue = stringToNumber(this.groupTo, this.sumOfPoints);\n        for (let i = 0; i < length; i++) {\n            point = this.setPoints(result, i, colors);\n            let currentY = point.y;\n            if (!this.isClub(point, clubValue)) {\n                if (isNullOrUndefined(point.y)) {\n                    point.visible = false;\n                }\n                this.pushPoints(point, colors);\n            }\n        }\n        this.lastGroupTo = this.groupTo;\n        if (this.sumOfClub > 0) {\n            let clubPoint = new AccPoints();\n            clubPoint.x = 'Others';\n            clubPoint.y = this.sumOfClub;\n            clubPoint.text = clubPoint.originalText = clubPoint.x + ': ' + this.sumOfClub;\n            this.pushPoints(clubPoint, colors);\n        }\n    }\n    /**\n     * Method to set point index and color\n     */\n    pushPoints(point, colors) {\n        point.index = this.points.length;\n        point.color = point.color || colors[point.index % colors.length];\n        this.points.push(point);\n    }\n    /**\n     * Method to find club point\n     */\n    isClub(point, clubValue) {\n        if (Math.abs(point.y) <= clubValue && !isNullOrUndefined(clubValue)) {\n            this.sumOfClub += Math.abs(point.y);\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Method to find sum of points in the series\n     */\n    findSumOfPoints(result) {\n        let length = Object.keys(result).length;\n        for (let i = 0; i < length; i++) {\n            if (!isNullOrUndefined(result[i][this.yName])) {\n                this.sumOfPoints += Math.abs(result[i][this.yName]);\n            }\n        }\n    }\n    /**\n     * Method to set points x, y and text from data source\n     */\n    setPoints(data, i, colors) {\n        let point = new AccPoints();\n        point.x = getValue(this.xName, data[i]);\n        point.y = getValue(this.yName, data[i]);\n        point.color = getValue(this.pointColorMapping, data[i]);\n        point.text = point.originalText = getValue(this.dataLabel.name || '', data[i]);\n        this.setAccEmptyPoint(point, i, data, colors);\n        return point;\n    }\n    /**\n     * Method render the series elements for accumulation chart\n     * @private\n     */\n    renderSeries(accumulation) {\n        let seriesGroup = accumulation.renderer.createGroup({ id: accumulation.element.id + '_Series_' + this.index });\n        this.renderPoints(accumulation, seriesGroup);\n        let datalabelGroup;\n        if (accumulation.accumulationDataLabelModule && this.dataLabel.visible) {\n            datalabelGroup = accumulation.renderer.createGroup({ id: accumulation.element.id + '_datalabel_Series_' + this.index });\n            datalabelGroup.style.visibility =\n                (this.animation.enable && accumulation.animateSeries && this.type === 'Pie') ? 'hidden' : 'visible';\n            this.renderDataLabel(accumulation, datalabelGroup);\n        }\n        if (this.type === 'Pie') {\n            this.findMaxBounds(this.labelBound, this.accumulationBound);\n            accumulation.pieSeriesModule.animateSeries(accumulation, this.animation, this, seriesGroup);\n        }\n        if (accumulation.accumulationLegendModule) {\n            this.labelBound.x -= accumulation.explodeDistance;\n            this.labelBound.y -= accumulation.explodeDistance;\n            this.labelBound.height += (accumulation.explodeDistance - this.labelBound.y);\n            this.labelBound.width += (accumulation.explodeDistance - this.labelBound.x);\n        }\n    }\n    /**\n     * Method render the points elements for accumulation chart series.\n     */\n    renderPoints(accumulation, seriesGroup) {\n        let pointId = accumulation.element.id + '_Series_' + this.index + '_Point_';\n        let option;\n        for (let point of this.points) {\n            let argsData = {\n                cancel: false, name: pointRender, series: this, point: point, fill: point.color,\n                border: this.isEmpty(point) ? { width: this.emptyPointSettings.border.width, color: this.emptyPointSettings.border.color } :\n                    { width: this.border.width, color: this.border.color }\n            };\n            accumulation.trigger(pointRender, argsData);\n            point.color = argsData.fill;\n            if (point.visible) {\n                option = new PathOption(pointId + point.index, point.color, argsData.border.width || 1, argsData.border.color || point.color, 1, '', '');\n                accumulation[(firstToLowerCase(this.type) + 'SeriesModule')].\n                    renderPoint(point, this, accumulation, option);\n                seriesGroup.appendChild(accumulation.renderer.drawPath(option));\n            }\n        }\n        accumulation.getSeriesElement().appendChild(seriesGroup);\n    }\n    /**\n     * Method render the datalabel elements for accumulation chart.\n     */\n    renderDataLabel(accumulation, datalabelGroup) {\n        accumulation.accumulationDataLabelModule.findAreaRect();\n        let element = createElement('div', {\n            id: accumulation.element.id + '_Series_0' + '_DataLabelCollections'\n        });\n        for (let point of this.points) {\n            if (point.visible) {\n                accumulation.accumulationDataLabelModule.renderDataLabel(point, this.dataLabel, datalabelGroup, this.points, this.index, element);\n            }\n        }\n        if (this.dataLabel.template !== null && element.childElementCount) {\n            getElement(accumulation.element.id + '_Secondary_Element').appendChild(element);\n        }\n        accumulation.getSeriesElement().appendChild(datalabelGroup);\n    }\n    /**\n     * To find maximum bounds for smart legend placing\n     * @private\n     */\n    findMaxBounds(totalbound, bound) {\n        totalbound.x = bound.x < totalbound.x ? bound.x : totalbound.x;\n        totalbound.y = bound.y < totalbound.y ? bound.y : totalbound.y;\n        totalbound.height = (bound.y + bound.height) > totalbound.height ? (bound.y + bound.height) : totalbound.height;\n        totalbound.width = (bound.x + bound.width) > totalbound.width ? (bound.x + bound.width) : totalbound.width;\n    }\n    /**\n     * To set empty point value for null points\n     * @private\n     */\n    setAccEmptyPoint(point, i, data, colors) {\n        if (!isNullOrUndefined(point.y)) {\n            return null;\n        }\n        point.color = this.emptyPointSettings.fill || point.color;\n        switch (this.emptyPointSettings.mode) {\n            case 'Zero':\n                point.y = 0;\n                point.visible = true;\n                break;\n            case 'Average':\n                let previous = data[i - 1] ? (data[i - 1][this.yName] || 0) : 0;\n                let next = data[i + 1] ? (data[i + 1][this.yName] || 0) : 0;\n                point.y = (Math.abs(previous) + Math.abs(next)) / 2;\n                this.sumOfPoints += point.y;\n                point.visible = true;\n                break;\n            case 'Drop':\n                point.visible = false;\n                break;\n        }\n    }\n    /**\n     * To find point is empty\n     */\n    isEmpty(point) {\n        return point.color === this.emptyPointSettings.fill;\n    }\n}\n__decorate$8([\n    Property('')\n], AccumulationSeries.prototype, \"dataSource\", void 0);\n__decorate$8([\n    Property()\n], AccumulationSeries.prototype, \"query\", void 0);\n__decorate$8([\n    Property('')\n], AccumulationSeries.prototype, \"xName\", void 0);\n__decorate$8([\n    Property('')\n], AccumulationSeries.prototype, \"name\", void 0);\n__decorate$8([\n    Property('')\n], AccumulationSeries.prototype, \"yName\", void 0);\n__decorate$8([\n    Property(true)\n], AccumulationSeries.prototype, \"visible\", void 0);\n__decorate$8([\n    Complex({ color: null, width: 0 }, Border)\n], AccumulationSeries.prototype, \"border\", void 0);\n__decorate$8([\n    Complex(null, Animation$1)\n], AccumulationSeries.prototype, \"animation\", void 0);\n__decorate$8([\n    Property('SeriesType')\n], AccumulationSeries.prototype, \"legendShape\", void 0);\n__decorate$8([\n    Property('')\n], AccumulationSeries.prototype, \"pointColorMapping\", void 0);\n__decorate$8([\n    Property(null)\n], AccumulationSeries.prototype, \"selectionStyle\", void 0);\n__decorate$8([\n    Property(null)\n], AccumulationSeries.prototype, \"groupTo\", void 0);\n__decorate$8([\n    Complex({}, AccumulationDataLabelSettings)\n], AccumulationSeries.prototype, \"dataLabel\", void 0);\n__decorate$8([\n    Property([])\n], AccumulationSeries.prototype, \"palettes\", void 0);\n__decorate$8([\n    Property(0)\n], AccumulationSeries.prototype, \"startAngle\", void 0);\n__decorate$8([\n    Property(360)\n], AccumulationSeries.prototype, \"endAngle\", void 0);\n__decorate$8([\n    Property('80%')\n], AccumulationSeries.prototype, \"radius\", void 0);\n__decorate$8([\n    Property('0')\n], AccumulationSeries.prototype, \"innerRadius\", void 0);\n__decorate$8([\n    Property('Pie')\n], AccumulationSeries.prototype, \"type\", void 0);\n__decorate$8([\n    Property(true)\n], AccumulationSeries.prototype, \"enableTooltip\", void 0);\n__decorate$8([\n    Property(false)\n], AccumulationSeries.prototype, \"explode\", void 0);\n__decorate$8([\n    Property('30%')\n], AccumulationSeries.prototype, \"explodeOffset\", void 0);\n__decorate$8([\n    Property(false)\n], AccumulationSeries.prototype, \"explodeAll\", void 0);\n__decorate$8([\n    Property(null)\n], AccumulationSeries.prototype, \"explodeIndex\", void 0);\n__decorate$8([\n    Complex({ mode: 'Drop' }, EmptyPointSettings)\n], AccumulationSeries.prototype, \"emptyPointSettings\", void 0);\n__decorate$8([\n    Property(0)\n], AccumulationSeries.prototype, \"gapRatio\", void 0);\n__decorate$8([\n    Property('80%')\n], AccumulationSeries.prototype, \"width\", void 0);\n__decorate$8([\n    Property('80%')\n], AccumulationSeries.prototype, \"height\", void 0);\n__decorate$8([\n    Property('20%')\n], AccumulationSeries.prototype, \"neckWidth\", void 0);\n__decorate$8([\n    Property('20%')\n], AccumulationSeries.prototype, \"neckHeight\", void 0);\n__decorate$8([\n    Property('Linear')\n], AccumulationSeries.prototype, \"pyramidMode\", void 0);\n__decorate$8([\n    Property(1)\n], AccumulationSeries.prototype, \"opacity\", void 0);\n/**\n * method to get series from index\n * @private\n */\nfunction getSeriesFromIndex(index, visibleSeries) {\n    for (let series of visibleSeries) {\n        if (index === series.index) {\n            return series;\n        }\n    }\n    return visibleSeries[0];\n}\n/**\n * method to get point from index\n * @private\n */\nfunction pointByIndex(index, points) {\n    for (let point of points) {\n        if (point.index === index) {\n            return point;\n        }\n    }\n    return null;\n}\n\n/**\n * Defines the common functionalities of accumulation series\n */\n/**\n * Accumulation Base used to do some base calculation for accumulation chart.\n */\nclass AccumulationBase {\n    /** @private */\n    constructor(accumulation) {\n        this.accumulation = accumulation;\n    }\n    /**\n     * Gets the center of the pie\n     * @private\n     */\n    get center() {\n        return this.pieCenter || (this.accumulation.visibleSeries[0].type === 'Pie' ?\n            this.accumulation.pieSeriesModule.center : null);\n    }\n    /**\n     * Sets the center of the pie\n     * @private\n     */\n    set center(value) {\n        this.pieCenter = value;\n    }\n    /**\n     * Gets the radius of the pie\n     * @private\n     */\n    get radius() {\n        return this.pieRadius !== undefined ? this.pieRadius :\n            this.accumulation.pieSeriesModule.radius;\n    }\n    /**\n     * Sets the radius of the pie\n     * @private\n     */\n    set radius(value) {\n        this.pieRadius = value;\n    }\n    /**\n     * Gets the label radius of the pie\n     * @private\n     */\n    get labelRadius() {\n        return this.pieLabelRadius !== undefined ? this.pieLabelRadius :\n            this.accumulation.pieSeriesModule.labelRadius;\n    }\n    /**\n     * Sets the label radius of the pie\n     * @private\n     */\n    set labelRadius(value) {\n        this.pieLabelRadius = value;\n    }\n    /**\n     * Checks whether the series is circular or not\n     * @private\n     */\n    isCircular() {\n        return this.accumulation.type === 'Pie';\n    }\n    /**\n     * To process the explode on accumulation chart loading\n     * @private\n     */\n    processExplode(event) {\n        if (event.target.id.indexOf('_Series_') > -1 || event.target.id.indexOf('_datalabel_') > -1) {\n            let pointIndex = indexFinder(event.target.id).point;\n            if (isNaN(pointIndex) || (event.target.id.indexOf('_datalabel_') > -1 &&\n                this.accumulation.visibleSeries[0].points[pointIndex].labelPosition === 'Outside')) {\n                return null;\n            }\n            this.explodePoints(pointIndex, this.accumulation);\n            this.deExplodeAll(pointIndex);\n        }\n    }\n    /**\n     * To invoke the explode on accumulation chart loading\n     * @private\n     */\n    invokeExplode() {\n        if (this.accumulation.visibleSeries[0].explodeAll) {\n            for (let point of this.accumulation.visibleSeries[0].points) {\n                this.explodePoints(point.index, this.accumulation);\n            }\n        }\n        else if (!isNullOrUndefined(this.accumulation.visibleSeries[0].explodeIndex)) {\n            this.explodePoints(this.accumulation.visibleSeries[0].explodeIndex, this.accumulation);\n        }\n        if (this.accumulation.accumulationSelectionModule && this.accumulation.selectionMode !== 'None' &&\n            this.accumulation.accumulationSelectionModule.selectedDataIndexes.length) {\n            for (let index of this.accumulation.accumulationSelectionModule.selectedDataIndexes) {\n                this.explodePoints(index.point, this.accumulation, true);\n                this.deExplodeAll(index.point);\n            }\n        }\n    }\n    /**\n     * To deExplode all points in the series\n     */\n    deExplodeAll(index) {\n        let pointId = this.accumulation.element.id + '_Series_0_Point_';\n        let points = this.accumulation.visibleSeries[0].points;\n        for (let currentPoint of points) {\n            if (index !== currentPoint.index) {\n                this.deExplodeSlice(currentPoint.index, pointId, this.center);\n            }\n        }\n    }\n    /**\n     * To explode point by index\n     * @private\n     */\n    explodePoints(index, chart, explode = false) {\n        let pointId = this.accumulation.element.id + '_Series_0_Point_';\n        let translate;\n        let points = this.accumulation.visibleSeries[0].points;\n        let point = pointByIndex(index, this.accumulation.visibleSeries[0].points);\n        if (isNullOrUndefined(point)) {\n            return null;\n        }\n        if (!this.isCircular()) {\n            translate = { x: chart.explodeDistance, y: 0 };\n        }\n        else {\n            translate = degreeToLocation(point.midAngle, chart.explodeDistance, this.center);\n        }\n        if (this.isExplode(pointId + index) || explode) {\n            this.explodeSlice(index, translate, pointId, this.center || { x: 0, y: 0 });\n        }\n        else {\n            this.deExplodeSlice(index, pointId, this.center);\n        }\n    }\n    /**\n     * To check point is exploded by id\n     */\n    isExplode(id) {\n        let element = getElement(id);\n        if (element && (element.getAttribute('transform') === 'translate(0, 0)' || element.getAttribute('transform') === null ||\n            element.getAttribute('transform') === 'translate(0)')) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    /**\n     * To deExplode the point by index\n     */\n    deExplodeSlice(index, sliceId, center) {\n        let position = 'translate(0, 0)';\n        this.setTranslate(index, sliceId, position);\n    }\n    /**\n     * To translate the point elements by index and position\n     */\n    setTranslate(index, sliceId, position) {\n        this.setElementTransform(sliceId + index, position);\n        if (this.accumulation.visibleSeries[0].dataLabel.visible) {\n            sliceId = this.accumulation.element.id + '_datalabel_Series_0_';\n            this.setElementTransform(sliceId + 'shape_' + index, position);\n            this.setElementTransform(sliceId + 'text_' + index, position);\n            this.setElementTransform(sliceId + 'connector_' + index, position);\n        }\n    }\n    /**\n     * To translate the point element by id and position\n     */\n    setElementTransform(id, position) {\n        let element = getElement(id);\n        if (element) {\n            element.setAttribute('transform', position);\n        }\n    }\n    /**\n     * To translate the point elements by index position\n     */\n    explodeSlice(index, translate, sliceId, center) {\n        let position = 'translate(' + (translate.x - center.x) + ', ' + (translate.y - center.y) + ')';\n        this.setTranslate(index, sliceId, position);\n    }\n}\n\n/**\n * Accumulation charts base file\n */\n/**\n * PieBase class used to do pie base calculations.\n */\nclass PieBase extends AccumulationBase {\n    /**\n     * To initialize the property values.\n     * @private\n     */\n    initProperties(chart, series) {\n        this.accumulation = chart;\n        let size = Math.min(chart.initialClipRect.width, chart.initialClipRect.height);\n        this.initAngles(series);\n        this.radius = stringToNumber(series.radius, size / 2);\n        this.innerRadius = stringToNumber(series.innerRadius, this.radius);\n        this.labelRadius = series.dataLabel.position === 'Inside' ? (((this.radius - this.innerRadius) / 2) + this.innerRadius) :\n            (this.radius + stringToNumber(series.dataLabel.connectorStyle.length || '4%', size / 2));\n        chart.explodeDistance = series.explode ? stringToNumber(series.explodeOffset, this.radius) : 0;\n        this.findCenter(chart, series);\n        this.defaultLabelBound(series, series.dataLabel.visible, series.dataLabel.position);\n        this.totalAngle -= 0.001;\n    }\n    /**\n     * To find the center of the accumulation.\n     * @private\n     */\n    findCenter(accumulation, series) {\n        this.accumulation = accumulation;\n        this.center = {\n            x: stringToNumber('50%', accumulation.initialClipRect.width) + (accumulation.initialClipRect.x),\n            y: stringToNumber('50%', accumulation.initialClipRect.height) + (accumulation.initialClipRect.y)\n        };\n        let accumulationRect = this.getSeriesBound(series);\n        let accumulationRectCenter = new ChartLocation(accumulationRect.x + accumulationRect.width / 2, accumulationRect.y + accumulationRect.height / 2);\n        this.center.x += (this.center.x - accumulationRectCenter.x);\n        this.center.y += (this.center.y - accumulationRectCenter.y);\n        this.accumulation.center = this.center;\n    }\n    /**\n     * To find angles from series.\n     */\n    initAngles(series) {\n        this.totalAngle = (series.endAngle - series.startAngle) % 360;\n        this.startAngle = series.startAngle - 90;\n        this.totalAngle = this.totalAngle <= 0 ? (360 + this.totalAngle) : this.totalAngle;\n        this.startAngle = (this.startAngle < 0 ? (this.startAngle + 360) : this.startAngle) % 360;\n    }\n    /**\n     * To calculate data-label bound\n     * @private\n     */\n    defaultLabelBound(series, visible, position) {\n        let accumulationBound = this.getSeriesBound(series);\n        series.accumulationBound = accumulationBound;\n        series.labelBound = new Rect(accumulationBound.x, accumulationBound.y, accumulationBound.width + accumulationBound.x, accumulationBound.height + accumulationBound.y);\n        if (visible && position === 'Outside') {\n            series.labelBound = new Rect(Infinity, Infinity, -Infinity, -Infinity);\n        }\n    }\n    /**\n     * To calculate series bound\n     * @private\n     */\n    getSeriesBound(series) {\n        let rect = new Rect(Infinity, Infinity, -Infinity, -Infinity);\n        this.initAngles(series);\n        let start = this.startAngle;\n        let total = this.totalAngle;\n        let end = (this.startAngle + total) % 360;\n        end = (end === 0) ? 360 : end;\n        series.findMaxBounds(rect, this.getRectFromAngle(start));\n        series.findMaxBounds(rect, this.getRectFromAngle(end));\n        series.findMaxBounds(rect, new Rect(this.center.x, this.center.y, 0, 0));\n        let nextQuandrant = (Math.floor(start / 90) * 90 + 90) % 360;\n        let lastQuadrant = (Math.floor(end / 90) * 90) % 360;\n        lastQuadrant = (lastQuadrant === 0) ? 360 : lastQuadrant;\n        if (total >= 90 || lastQuadrant === nextQuandrant) {\n            series.findMaxBounds(rect, this.getRectFromAngle(nextQuandrant));\n            series.findMaxBounds(rect, this.getRectFromAngle(lastQuadrant));\n        }\n        if (start === 0 || (start + total >= 360)) {\n            series.findMaxBounds(rect, this.getRectFromAngle(0));\n        }\n        let length = nextQuandrant === lastQuadrant ? 0 : Math.floor(total / 90);\n        for (let i = 1; i < length; i++) {\n            nextQuandrant = nextQuandrant + 90;\n            if ((nextQuandrant < lastQuadrant || end < start) || total === 360) {\n                series.findMaxBounds(rect, this.getRectFromAngle(nextQuandrant));\n            }\n        }\n        rect.width -= rect.x;\n        rect.height -= rect.y;\n        return rect;\n    }\n    /**\n     * To get rect location size from angle\n     */\n    getRectFromAngle(angle) {\n        let location = degreeToLocation(angle, this.radius, this.center);\n        return new Rect(location.x, location.y, 0, 0);\n    }\n    /**\n     * To get path arc direction\n     */\n    getPathArc(center, start, end, radius, innerRadius) {\n        let degree = end - start;\n        degree = degree < 0 ? (degree + 360) : degree;\n        let flag = (degree < 180) ? 0 : 1;\n        if (!innerRadius && innerRadius === 0) {\n            return this.getPiePath(center, degreeToLocation(start, radius, center), degreeToLocation(end, radius, center), radius, flag);\n        }\n        else {\n            return this.getDoughnutPath(center, degreeToLocation(start, radius, center), degreeToLocation(end, radius, center), radius, degreeToLocation(start, innerRadius, center), degreeToLocation(end, innerRadius, center), innerRadius, flag);\n        }\n    }\n    /**\n     * To get pie direction\n     */\n    getPiePath(center, start, end, radius, clockWise) {\n        return 'M ' + center.x + ' ' + center.y + ' L ' + start.x + ' ' + start.y + ' A ' + radius + ' ' +\n            radius + ' 0 ' + clockWise + ' 1 ' + end.x + ' ' + end.y + ' Z';\n    }\n    /**\n     * To get doughnut direction\n     */\n    getDoughnutPath(center, start, end, radius, innerStart, innerEnd, innerRadius, clockWise) {\n        return 'M ' + start.x + ' ' + start.y + ' A ' + radius + ' ' + radius + ' 0 ' + clockWise +\n            ' 1 ' + end.x + ' ' + end.y + ' L ' + innerEnd.x + ' ' + innerEnd.y + ' A ' + innerRadius +\n            ' ' + innerRadius + ' 0 ' + clockWise + ',0 ' + innerStart.x + ' ' + innerStart.y + ' Z';\n    }\n    /**\n     * Method to start animation for pie series.\n     */\n    doAnimation(slice, series) {\n        let startAngle = series.startAngle - 85;\n        let value;\n        let radius = Math.max(this.accumulation.availableSize.height, this.accumulation.availableSize.width) * 0.75;\n        radius += radius * (0.414); // formula r + r / 2 * (1.414 -1)\n        let effect = getAnimationFunction('Linear'); // need to check animation type\n        new Animation({}).animate(slice, {\n            duration: series.animation.duration,\n            delay: series.animation.delay,\n            progress: (args) => {\n                value = effect(args.timeStamp, startAngle, this.totalAngle, args.duration);\n                slice.setAttribute('d', this.getPathArc(this.center, startAngle, value, radius, 0));\n            },\n            end: (args) => {\n                slice.setAttribute('d', this.getPathArc(this.center, 0, 359.99999, radius, 0));\n                this.accumulation.trigger(animationComplete, { series: series, accumulation: this.accumulation });\n                let datalabelGroup = getElement(this.accumulation.element.id + '_datalabel_Series_' + series.index);\n                datalabelGroup.style.visibility = this.accumulation.isDestroyed ? 'hidden' : 'visible';\n            }\n        });\n    }\n}\n\n/**\n * PieSeries module used to render `Pie` Series.\n */\nclass PieSeries extends PieBase {\n    /**\n     * To get path option, degree, symbolLocation from the point.\n     * @private\n     */\n    renderPoint(point, series, chart, option) {\n        let sum$$1 = series.sumOfPoints;\n        let degree = ((Math.abs(point.y) / sum$$1) * (this.totalAngle));\n        option.d = this.getPathOption(point, degree);\n        point.midAngle = (this.startAngle - (degree / 2)) % 360;\n        point.endAngle = this.startAngle % 360;\n        point.symbolLocation = degreeToLocation(point.midAngle, (this.radius + this.innerRadius) / 2, this.center);\n        return option;\n    }\n    /**\n     * To get path option from the point.\n     */\n    getPathOption(point, degree) {\n        let path = this.getPathArc(this.center, this.startAngle % 360, (this.startAngle + degree) % 360, this.radius, this.innerRadius);\n        this.startAngle += degree;\n        return path;\n    }\n    /**\n     * To animate the pie series.\n     * @private\n     */\n    animateSeries(accumulation, option, series, slice) {\n        let groupId = accumulation.element.id + 'SeriesGroup' + series.index;\n        if (series.animation.enable && accumulation.animateSeries) {\n            let clippath = accumulation.renderer.createClipPath({ id: groupId + '_clipPath' });\n            let path = new PathOption(groupId + '_slice', 'transparent', 1, 'transparent', 1, '', '');\n            let clipslice = accumulation.renderer.drawPath(path);\n            clippath.appendChild(clipslice);\n            accumulation.svgObject.appendChild(clippath);\n            slice.setAttribute('style', 'clip-path:url(#' + clippath.id + ')');\n            this.doAnimation(clipslice, series);\n        }\n    }\n    /**\n     * To get the module name of the Pie series.\n     */\n    getModuleName() {\n        return 'PieSeries';\n    }\n    /**\n     * To destroy the pie series.\n     * @return {void}\n     * @private\n     */\n    destroy(accumulation) {\n        /**\n         * Destroy method calling here\n         */\n    }\n}\n\nvar __decorate$7 = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n/**\n * AccumulationChart file\n */\n/**\n * Represents the AccumulationChart control.\n * ```html\n * <div id=\"accumulation\"/>\n * <script>\n *   var accObj = new AccumulationChart({ });\n *   accObj.appendTo(\"#accumulation\");\n * </script>\n * ```\n */\nlet AccumulationChart = class AccumulationChart extends Component {\n    /**\n     * Constructor for creating the AccumulationChart widget\n     * @private\n     */\n    constructor(options, element) {\n        super(options, element);\n        /** @private explode radius internal property */\n        this.explodeDistance = 0;\n    }\n    /** @private */\n    get type() {\n        if (this.series && this.series.length) {\n            return this.series[0].type;\n        }\n        return 'Pie';\n    }\n    // accumulation chart methods\n    /**\n     *  To create svg object, renderer and binding events for the container.\n     */\n    preRender() {\n        this.unWireEvents();\n        this.setCulture();\n        this.animateSeries = true;\n        calculateSize(this);\n        this.wireEvents();\n    }\n    /**\n     * Themeing for chart goes here\n     */\n    setTheme() {\n        /*! Set theme for accumulation chart */\n        this.themeStyle = getThemeColor(this.theme);\n    }\n    /**\n     * To render the accumulation chart elements\n     */\n    render() {\n        this.trigger(load, { accumulation: this });\n        this.setTheme();\n        this.accBaseModule = new AccumulationBase(this);\n        this.pieSeriesModule = new PieSeries(this);\n        this.calculateVisibleSeries();\n        this.processData();\n    }\n    /**\n     * Method to unbind events for accumulation chart\n     */\n    unWireEvents() {\n        /*! Find the Events type */\n        let isIE11Pointer = Browser.isPointer;\n        let start = Browser.touchStartEvent;\n        let move = Browser.touchMoveEvent;\n        let stop = Browser.touchEndEvent;\n        let cancel = isIE11Pointer ? 'pointerleave' : 'mouseleave';\n        /*! UnBind the Event handler */\n        EventHandler.remove(this.element, move, this.accumulationMouseMove);\n        EventHandler.remove(this.element, stop, this.accumulationMouseEnd);\n        EventHandler.remove(this.element, start, this.accumulationMouseStart);\n        EventHandler.remove(this.element, 'click', this.accumulationOnMouseClick);\n        EventHandler.remove(this.element, 'contextmenu', this.accumulationRightClick);\n        EventHandler.remove(this.element, cancel, this.accumulationMouseLeave);\n        window.removeEventListener((Browser.isTouch && ('orientation' in window && 'onorientationchange' in window)) ? 'orientationchange' : 'resize', this.accumulationResize);\n    }\n    /**\n     * Method to bind events for the accumulation chart\n     */\n    wireEvents() {\n        /*! Find the Events type */\n        let isIE11Pointer = Browser.isPointer;\n        let start = Browser.touchStartEvent;\n        let stop = Browser.touchEndEvent;\n        let move = Browser.touchMoveEvent;\n        let cancel = isIE11Pointer ? 'pointerleave' : 'mouseleave';\n        /*! Bind the Event handler */\n        EventHandler.add(this.element, move, this.accumulationMouseMove, this);\n        EventHandler.add(this.element, stop, this.accumulationMouseEnd, this);\n        EventHandler.add(this.element, start, this.accumulationMouseStart, this);\n        EventHandler.add(this.element, 'click', this.accumulationOnMouseClick, this);\n        EventHandler.add(this.element, 'contextmenu', this.accumulationRightClick, this);\n        EventHandler.add(this.element, cancel, this.accumulationMouseLeave, this);\n        window.addEventListener((Browser.isTouch && ('orientation' in window && 'onorientationchange' in window)) ? 'orientationchange' : 'resize', this.accumulationResize.bind(this));\n        new Touch(this.element); // To avoid geasture blocking for browser\n        /*! Apply the style for chart */\n        this.setStyle(this.element);\n    }\n    /**\n     * Method to set mouse x, y from events\n     */\n    setMouseXY(e) {\n        let pageX;\n        let pageY;\n        if (e.type.indexOf('touch') > -1) {\n            this.isTouch = true;\n            let touchArg = e;\n            pageY = touchArg.changedTouches[0].clientY;\n            pageX = touchArg.changedTouches[0].clientX;\n        }\n        else {\n            this.isTouch = e.pointerType === 'touch' || e.pointerType === '2';\n            pageX = e.clientX;\n            pageY = e.clientY;\n        }\n        let rect = this.element.getBoundingClientRect();\n        let svgRect = getElement(this.element.id + '_svg').getBoundingClientRect();\n        this.mouseX = (pageX - rect.left) - Math.max(svgRect.left - rect.left, 0);\n        this.mouseY = (pageY - rect.top) - Math.max(svgRect.top - rect.top, 0);\n    }\n    /**\n     * Handles the mouse end.\n     * @return {boolean}\n     * @private\n     */\n    accumulationMouseEnd(e) {\n        this.setMouseXY(e);\n        this.trigger(chartMouseUp, { target: e.target.id, x: this.mouseX, y: this.mouseY });\n        if (this.isTouch) {\n            this.titleTooltip(e, this.mouseX, this.mouseY, this.isTouch);\n            if (this.accumulationDataLabelModule && this.visibleSeries[0].dataLabel.visible) {\n                this.accumulationDataLabelModule.move(e, this.mouseX, this.mouseY, this.isTouch);\n            }\n            if (this.accumulationLegendModule && this.legendSettings.visible) {\n                this.accumulationLegendModule.move(e);\n            }\n        }\n        this.notify(Browser.touchEndEvent, e);\n        return false;\n    }\n    /*public removeSvgOffset(x: number, y: number): ChartLocation {\n        let rect: ClientRect = this.element.getBoundingClientRect();\n        let svgRect: ClientRect = getElement(this.element.id + '_svg').getBoundingClientRect();\n        return { x: (x - rect.left) - Math.max(svgRect.left - rect.left, 0), y: (y - rect.top) - Math.max(svgRect.top - rect.top, 0)};\n    }*/\n    /**\n     * Handles the mouse start.\n     * @return {boolean}\n     * @private\n     */\n    accumulationMouseStart(e) {\n        this.setMouseXY(e);\n        this.trigger(chartMouseDown, { target: e.target.id, x: this.mouseX, y: this.mouseY });\n        return false;\n    }\n    /**\n     * Handles the accumulation chart resize.\n     * @return {boolean}\n     * @private\n     */\n    accumulationResize(e) {\n        this.animateSeries = false;\n        let args = {\n            accumulation: this,\n            previousSize: new Size(this.availableSize.width, this.availableSize.height),\n            name: resized,\n            currentSize: new Size(0, 0)\n        };\n        if (this.resizeTo) {\n            clearTimeout(this.resizeTo);\n        }\n        this.resizeTo = setTimeout(() => {\n            if (this.isDestroyed) {\n                clearTimeout(this.resizeTo);\n                return;\n            }\n            calculateSize(this);\n            args.currentSize = this.availableSize;\n            this.trigger(resized, args);\n            this.refreshSeries();\n            this.refreshChart();\n        }, 500);\n        return false;\n    }\n    /**\n     * Handles the export method for chart control.\n     */\n    export(type, fileName, orientation) {\n        let exportChart = new ExportUtils(this);\n        exportChart.export(type, fileName, orientation);\n    }\n    /**\n     * Handles the print method for accumulation chart control.\n     */\n    print(id) {\n        let exportChart = new ExportUtils(this);\n        exportChart.print(id);\n    }\n    /**\n     * Applying styles for accumulation chart element\n     */\n    setStyle(element) {\n        element.style.touchAction = 'element';\n        element.style.msTouchAction = 'element';\n        element.style.msContentZooming = 'none';\n        element.style.msUserSelect = 'none';\n        element.style.webkitUserSelect = 'none';\n        element.style.position = 'relative';\n    }\n    /**\n     * Method to set the annotation content dynamically for accumulation.\n     */\n    setAnnotationValue(annotationIndex, content) {\n        let annotation = this.annotations[annotationIndex];\n        let element;\n        let parentNode = getElement(this.element.id + '_Annotation_Collections');\n        if (content) {\n            annotation.content = content;\n            if (parentNode) {\n                element = createElement('div');\n                removeElement(this.element.id + '_Annotation_' + annotationIndex);\n                this.annotationModule.processAnnotation(annotation, annotationIndex, element);\n                parentNode.appendChild(element.children[0]);\n            }\n            else {\n                this.annotationModule.renderAnnotations(getElement(this.element.id + '_Secondary_Element'));\n            }\n        }\n    }\n    /**\n     * Handles the mouse move on accumulation chart.\n     * @return {boolean}\n     * @private\n     */\n    accumulationMouseMove(e) {\n        this.setMouseXY(e);\n        this.trigger(chartMouseMove, { target: e.target.id, x: this.mouseX, y: this.mouseY });\n        if (this.pointMove) {\n            this.triggerPointEvent(pointMove, e.target);\n        }\n        if (this.accumulationLegendModule && this.legendSettings.visible) {\n            this.accumulationLegendModule.move(e);\n        }\n        if (this.accumulationDataLabelModule && this.visibleSeries[0] && this.visibleSeries[0].dataLabel.visible) {\n            this.accumulationDataLabelModule.move(e, this.mouseX, this.mouseY);\n        }\n        if (!this.isTouch) {\n            this.titleTooltip(e, this.mouseX, this.mouseY);\n        }\n        this.notify(Browser.touchMoveEvent, e);\n        return false;\n    }\n    titleTooltip(event, x, y, isTouch) {\n        let targetId = event.target.id;\n        if ((event.target.textContent.indexOf('...') > -1) && (targetId === (this.element.id + '_title'))) {\n            showTooltip(this.title, x, y, this.element.offsetWidth, this.element.id + '_EJ2_Title_Tooltip', getElement(this.element.id + '_Secondary_Element'), isTouch);\n        }\n        else {\n            removeElement(this.element.id + '_EJ2_Title_Tooltip');\n        }\n    }\n    /**\n     * Handles the mouse click on accumulation chart.\n     * @return {boolean}\n     * @private\n     */\n    accumulationOnMouseClick(e) {\n        this.setMouseXY(e);\n        if (this.accumulationLegendModule && this.legendSettings.visible) {\n            this.accumulationLegendModule.click(e);\n        }\n        if (this.selectionMode !== 'None' && this.accumulationSelectionModule) {\n            this.accumulationSelectionModule.calculateSelectedElements(this, e);\n        }\n        if (this.visibleSeries[0].explode) {\n            this.accBaseModule.processExplode(e);\n        }\n        this.trigger(chartMouseClick, { target: e.target.id, x: this.mouseX, y: this.mouseY });\n        if (this.pointClick) {\n            this.triggerPointEvent(pointClick, e.target);\n        }\n        return false;\n    }\n    triggerPointEvent(event, element) {\n        let indexes = indexFinder(element.id, true);\n        if (indexes.series >= 0 && indexes.point >= 0) {\n            this.trigger(event, { series: this.series[indexes.series],\n                point: this.series[indexes.series].points[indexes.point],\n                seriesIndex: indexes.series, pointIndex: indexes.point,\n                x: this.mouseX, y: this.mouseY });\n        }\n    }\n    /**\n     * Handles the mouse right click on accumulation chart.\n     * @return {boolean}\n     * @private\n     */\n    accumulationRightClick(event) {\n        if (event.buttons === 2 || event.pointerType === 'touch') {\n            event.preventDefault();\n            event.stopPropagation();\n            return false;\n        }\n        return true;\n    }\n    /**\n     * Handles the mouse leave on accumulation chart.\n     * @return {boolean}\n     * @private\n     */\n    accumulationMouseLeave(e) {\n        this.setMouseXY(e);\n        this.trigger(chartMouseLeave, { target: e.target.id, x: this.mouseX, y: this.mouseY });\n        this.notify(Browser.isPointer ? 'pointerleave' : 'mouseleave', e);\n        return false;\n    }\n    /**\n     * Method to set culture for chart\n     */\n    setCulture() {\n        this.intl = new Internationalization();\n    }\n    /**\n     * Method to create SVG element for accumulation chart.\n     */\n    createPieSvg() {\n        this.removeSvg();\n        createSvg(this);\n    }\n    /**\n     * To Remove the SVG from accumulation chart.\n     * @return {boolean}\n     * @private\n     */\n    removeSvg() {\n        removeElement(this.element.id + '_Secondary_Element');\n        if (this.svgObject) {\n            while (this.svgObject.childNodes.length > 0) {\n                this.svgObject.removeChild(this.svgObject.firstChild);\n            }\n            if (!this.svgObject.hasChildNodes() && this.svgObject.parentNode) {\n                remove(this.svgObject);\n            }\n        }\n        removeElement('EJ2_legend_tooltip');\n        removeElement('EJ2_datalabel_tooltip');\n    }\n    /**\n     * Method to create the secondary element for tooltip, datalabel and annotaitons.\n     */\n    createSecondaryElement() {\n        this.element.appendChild(createElement('div', {\n            id: this.element.id + '_Secondary_Element',\n            styles: 'position: relative'\n        }));\n    }\n    /**\n     * Method to find visible series based on series types\n     */\n    calculateVisibleSeries() {\n        this.visibleSeries = [];\n        for (let i = 0, length = this.series.length; i < length; i++) {\n            this.series[i].index = i;\n            if (this.series[i].type === this.type && this.visibleSeries.length === 0) {\n                this.visibleSeries.push(this.series[i]);\n                break;\n            }\n        }\n    }\n    /**\n     * To find points from dataSource\n     */\n    processData() {\n        this.seriesCounts = 0;\n        for (let series of this.visibleSeries) {\n            series.dataModule = new Data(series.dataSource, series.query);\n            series.refreshDataManager(this);\n        }\n    }\n    /**\n     * To refresh the accumulation chart\n     * @private\n     */\n    refreshChart() {\n        this.doGrouppingProcess();\n        this.createPieSvg();\n        this.calculateBounds();\n        this.renderElements();\n    }\n    /**\n     * Method to find groupped points\n     */\n    doGrouppingProcess() {\n        let series = this.visibleSeries[0];\n        if (!isNullOrUndefined(series.resultData) && ((!isNullOrUndefined(series.lastGroupTo) &&\n            series.lastGroupTo !== series.groupTo))) {\n            series.getPoints(series.resultData, this);\n        }\n    }\n    /**\n     * Method to calculate bounds for accumulation chart\n     */\n    calculateBounds() {\n        this.initialClipRect = new Rect(this.margin.left, this.margin.top, this.availableSize.width, this.availableSize.height);\n        this.titleCollection = [];\n        this.titleCollection = getTitle(this.title, this.titleStyle, this.initialClipRect.width);\n        subtractRect(this.initialClipRect, new Rect(0, (measureText(this.title, this.titleStyle).height * this.titleCollection.length), this.margin.right + this.margin.left, this.margin.bottom + this.margin.top));\n        this.calculateLegendBounds();\n    }\n    /*\n     * Method to calculate legend bounds for accumulation chart\n     */\n    calculateLegendBounds() {\n        if (!this.accumulationLegendModule || !this.legendSettings.visible) {\n            return null;\n        }\n        this.accumulationLegendModule.getLegendOptions(this, this.visibleSeries);\n        this.accumulationLegendModule.calculateLegendBounds(this.initialClipRect, this.availableSize);\n    }\n    /**\n     * To render elements for accumulation chart\n     * @private\n     */\n    renderElements() {\n        this.renderBorder();\n        this.renderTitle();\n        this.createSecondaryElement();\n        this.renderSeries();\n        this.renderLegend();\n        this.element.appendChild(this.svgObject);\n        this.processSelection();\n        this.processExplode();\n        this.renderAnnotation();\n        this.setSecondaryElementPosition();\n        this.trigger('loaded', { accumulation: this });\n        this.animateSeries = false;\n    }\n    /**\n     * To set the left and top position for data label template for center aligned chart\n     */\n    setSecondaryElementPosition() {\n        let tooltipParent = getElement(this.element.id + '_Secondary_Element');\n        if (!tooltipParent) {\n            return;\n        }\n        let rect = this.element.getBoundingClientRect();\n        let svgRect = getElement(this.element.id + '_svg').getBoundingClientRect();\n        tooltipParent.style.left = Math.max(svgRect.left - rect.left, 0) + 'px';\n        tooltipParent.style.top = Math.max(svgRect.top - rect.top, 0) + 'px';\n    }\n    /**\n     * To render the annotaitions for accumulation series.\n     */\n    renderAnnotation() {\n        if (this.annotationModule) {\n            this.annotationModule.renderAnnotations(getElement(this.element.id + '_Secondary_Element'));\n        }\n    }\n    /**\n     * Method to process the explode in accumulation chart\n     */\n    processExplode() {\n        if (!this.visibleSeries[0].explode) {\n            return null;\n        }\n        this.accBaseModule.invokeExplode();\n    }\n    /**\n     * Method to render series for accumulation chart\n     */\n    renderSeries() {\n        this.svgObject.appendChild(this.renderer.createGroup({ id: this.element.id + '_SeriesCollection' }));\n        for (let series of this.visibleSeries) {\n            if (series.visible && this[(firstToLowerCase(series.type) + 'SeriesModule')]) {\n                this[(firstToLowerCase(series.type) + 'SeriesModule')].initProperties(this, series);\n                series.renderSeries(this);\n            }\n        }\n    }\n    /**\n     * Method to render border for accumulation chart\n     */\n    renderBorder() {\n        let padding = this.border.width;\n        this.svgObject.appendChild(this.renderer.drawRectangle(new RectOption(this.element.id + '_border', this.background || this.themeStyle.background, this.border, 1, new Rect(padding / 2, padding / 2, this.availableSize.width - padding, this.availableSize.height - padding))));\n    }\n    /**\n     * Method to render legend for accumulation chart\n     */\n    renderLegend() {\n        if (!this.accumulationLegendModule || !this.legendSettings.visible) {\n            return null;\n        }\n        if (this.accumulationLegendModule.legendCollections.length) {\n            if (this.visibleSeries[0].type === 'Pie') {\n                this.accumulationLegendModule.getSmartLegendLocation(this.visibleSeries[0].labelBound, this.accumulationLegendModule.legendBounds, this.margin);\n            }\n            this.accumulationLegendModule.renderLegend(this, this.legendSettings, this.accumulationLegendModule.legendBounds);\n        }\n    }\n    /**\n     * To process the selection in accumulation chart\n     */\n    processSelection() {\n        if (!this.accumulationSelectionModule || this.selectionMode === 'None') {\n            return null;\n        }\n        let selectedDataIndexes = extend([], this.accumulationSelectionModule.selectedDataIndexes, null, true);\n        this.accumulationSelectionModule.invokeSelection(this);\n        if (selectedDataIndexes.length > 0) {\n            this.accumulationSelectionModule.selectedDataIndexes = selectedDataIndexes;\n            this.accumulationSelectionModule.redrawSelection(this, this.selectionMode);\n        }\n    }\n    /**\n     * To render title for accumulation chart\n     */\n    renderTitle() {\n        if (!this.title) {\n            return null;\n        }\n        let titleSize = measureText(this.title, this.titleStyle);\n        let anchor = this.titleStyle.textAlignment === 'Near' ? 'start' :\n            this.titleStyle.textAlignment === 'Far' ? 'end' : 'middle';\n        textElement(new TextOption(this.element.id + '_title', titlePositionX(this.availableSize, this.margin.left, this.margin.left, this.titleStyle), this.margin.top + (titleSize.height * 3 / 4), anchor, this.titleCollection, '', 'auto'), this.titleStyle, this.titleStyle.color || this.themeStyle.chartTitle, this.svgObject);\n    }\n    /**\n     * To get the series parent element\n     * @private\n     */\n    getSeriesElement() {\n        return this.svgObject.getElementsByTagName('g')[0];\n    }\n    /**\n     * To refresh the all visible series points\n     * @private\n     */\n    refreshSeries() {\n        for (let series of this.visibleSeries) {\n            this.refreshPoints(series.points);\n        }\n    }\n    /**\n     * To refresh points label region and visible\n     * @private\n     */\n    refreshPoints(points) {\n        for (let point of points) {\n            point.labelPosition = null;\n            point.labelRegion = null;\n            point.labelVisible = true;\n        }\n    }\n    /**\n     * To get Module name\n     *  @private\n     */\n    getModuleName() {\n        return 'accumulationchart';\n    }\n    /**\n     * To destroy the accumulationcharts\n     * @private\n     */\n    destroy() {\n        this.unWireEvents();\n        super.destroy();\n        this.element.classList.remove('e-accumulationchart');\n    }\n    /**\n     * To provide the array of modules needed for control rendering\n     * @return {ModuleDeclaration[]}\n     * @private\n     */\n    requiredModules() {\n        let modules = [];\n        let enableAnnotation = false;\n        modules.push({\n            member: this.type + 'Series',\n            args: [this]\n        });\n        if (this.legendSettings.visible) {\n            modules.push({\n                member: 'AccumulationLegend',\n                args: [this]\n            });\n        }\n        if (this.findDatalabelVisibility()) {\n            modules.push({\n                member: 'AccumulationDataLabel',\n                args: [this]\n            });\n        }\n        if (this.tooltip.enable) {\n            modules.push({\n                member: 'AccumulationTooltip',\n                args: [this]\n            });\n        }\n        if (this.selectionMode !== 'None') {\n            modules.push({\n                member: 'AccumulationSelection',\n                args: [this]\n            });\n        }\n        enableAnnotation = this.annotations.some((value) => {\n            return (value.content !== null);\n        });\n        if (enableAnnotation) {\n            modules.push({\n                member: 'Annotation',\n                args: [this, this.annotations]\n            });\n        }\n        return modules;\n    }\n    /**\n     * To find datalabel visibility in series\n     */\n    findDatalabelVisibility() {\n        for (let series of this.series) {\n            if (series.dataLabel.visible) {\n                return true;\n            }\n        }\n        return false;\n    }\n    /**\n     * Get the properties to be maintained in the persisted state.\n     * @private\n     */\n    getPersistData() {\n        return '';\n    }\n    /**\n     * Called internally if any of the property value changed.\n     * @private\n     */\n    onPropertyChanged(newProp, oldProp) {\n        let update = {\n            refreshElements: false, refreshBounds: false\n        };\n        for (let prop of Object.keys(newProp)) {\n            switch (prop) {\n                case 'theme':\n                    this.animateSeries = true;\n                    break;\n                case 'title':\n                case 'height':\n                case 'width':\n                case 'margin':\n                    update.refreshBounds = true;\n                    break;\n                case 'titleStyle':\n                    if (newProp.titleStyle && (newProp.titleStyle.size || newProp.titleStyle.textOverflow)) {\n                        update.refreshBounds = true;\n                    }\n                    else {\n                        update.refreshElements = true;\n                    }\n                    break;\n                case 'legendSettings':\n                    update.refreshBounds = true;\n                    update.refreshElements = true;\n                    break;\n                case 'locale':\n                case 'currencyCode':\n                    super.refresh();\n                    break;\n                case 'background':\n                case 'border':\n                case 'annotations':\n                case 'enableSmartLabels':\n                    update.refreshElements = true;\n                    break;\n                case 'isMultiSelect':\n                case 'selectedDataIndexes':\n                case 'selectionMode':\n                    if (this.accumulationSelectionModule) {\n                        if (isNullOrUndefined(this.accumulationSelectionModule.selectedDataIndexes)) {\n                            this.accumulationSelectionModule.invokeSelection(this);\n                        }\n                        else {\n                            this.accumulationSelectionModule.redrawSelection(this, oldProp.selectionMode);\n                        }\n                    }\n                    break;\n            }\n        }\n        if (!update.refreshBounds && update.refreshElements) {\n            this.createPieSvg();\n            this.renderElements();\n        }\n        else if (update.refreshBounds) {\n            this.refreshSeries();\n            this.createPieSvg();\n            this.calculateBounds();\n            this.renderElements();\n        }\n    }\n};\n__decorate$7([\n    Property(null)\n], AccumulationChart.prototype, \"width\", void 0);\n__decorate$7([\n    Property(null)\n], AccumulationChart.prototype, \"height\", void 0);\n__decorate$7([\n    Property(null)\n], AccumulationChart.prototype, \"title\", void 0);\n__decorate$7([\n    Complex(Theme.chartTitleFont, Font)\n], AccumulationChart.prototype, \"titleStyle\", void 0);\n__decorate$7([\n    Complex({}, LegendSettings)\n], AccumulationChart.prototype, \"legendSettings\", void 0);\n__decorate$7([\n    Complex({}, TooltipSettings)\n], AccumulationChart.prototype, \"tooltip\", void 0);\n__decorate$7([\n    Property('None')\n], AccumulationChart.prototype, \"selectionMode\", void 0);\n__decorate$7([\n    Property(false)\n], AccumulationChart.prototype, \"isMultiSelect\", void 0);\n__decorate$7([\n    Collection([], Indexes)\n], AccumulationChart.prototype, \"selectedDataIndexes\", void 0);\n__decorate$7([\n    Complex({}, Margin)\n], AccumulationChart.prototype, \"margin\", void 0);\n__decorate$7([\n    Property(true)\n], AccumulationChart.prototype, \"enableSmartLabels\", void 0);\n__decorate$7([\n    Complex({ color: '#DDDDDD', width: 0 }, Border)\n], AccumulationChart.prototype, \"border\", void 0);\n__decorate$7([\n    Property(null)\n], AccumulationChart.prototype, \"background\", void 0);\n__decorate$7([\n    Collection([{}], AccumulationSeries)\n], AccumulationChart.prototype, \"series\", void 0);\n__decorate$7([\n    Collection([{}], AccumulationAnnotationSettings)\n], AccumulationChart.prototype, \"annotations\", void 0);\n__decorate$7([\n    Property('Material')\n], AccumulationChart.prototype, \"theme\", void 0);\n__decorate$7([\n    Event()\n], AccumulationChart.prototype, \"loaded\", void 0);\n__decorate$7([\n    Event()\n], AccumulationChart.prototype, \"load\", void 0);\n__decorate$7([\n    Event()\n], AccumulationChart.prototype, \"seriesRender\", void 0);\n__decorate$7([\n    Event()\n], AccumulationChart.prototype, \"legendRender\", void 0);\n__decorate$7([\n    Event()\n], AccumulationChart.prototype, \"textRender\", void 0);\n__decorate$7([\n    Event()\n], AccumulationChart.prototype, \"tooltipRender\", void 0);\n__decorate$7([\n    Event()\n], AccumulationChart.prototype, \"pointRender\", void 0);\n__decorate$7([\n    Event()\n], AccumulationChart.prototype, \"annotationRender\", void 0);\n__decorate$7([\n    Event()\n], AccumulationChart.prototype, \"beforePrint\", void 0);\n__decorate$7([\n    Event()\n], AccumulationChart.prototype, \"chartMouseMove\", void 0);\n__decorate$7([\n    Event()\n], AccumulationChart.prototype, \"chartMouseClick\", void 0);\n__decorate$7([\n    Event()\n], AccumulationChart.prototype, \"pointClick\", void 0);\n__decorate$7([\n    Event()\n], AccumulationChart.prototype, \"pointMove\", void 0);\n__decorate$7([\n    Event()\n], AccumulationChart.prototype, \"animationComplete\", void 0);\n__decorate$7([\n    Event()\n], AccumulationChart.prototype, \"chartMouseDown\", void 0);\n__decorate$7([\n    Event()\n], AccumulationChart.prototype, \"chartMouseLeave\", void 0);\n__decorate$7([\n    Event()\n], AccumulationChart.prototype, \"chartMouseUp\", void 0);\n__decorate$7([\n    Event()\n], AccumulationChart.prototype, \"resized\", void 0);\n__decorate$7([\n    Property('USD')\n], AccumulationChart.prototype, \"currencyCode\", void 0);\nAccumulationChart = __decorate$7([\n    NotifyPropertyChanges\n], AccumulationChart);\n\n/**\n * Defines the common behavior of funnel and pyramid series\n */\n/**\n * TriangularBase is used to calculate base functions for funnel/pyramid series.\n */\nclass TriangularBase extends AccumulationBase {\n    /**\n     * Initializes the properties of funnel/pyramid series\n     * @private\n     */\n    initProperties(chart, series) {\n        let actualChartArea = chart.initialClipRect;\n        series.triangleSize = new Size(stringToNumber(series.width, actualChartArea.width), stringToNumber(series.height, actualChartArea.height));\n        series.neckSize = new Size(stringToNumber(series.neckWidth, actualChartArea.width), stringToNumber(series.neckHeight, actualChartArea.height));\n        this.defaultLabelBound(series, series.dataLabel.visible, series.dataLabel.position, chart);\n        if (series.explodeOffset === '30%') {\n            series.explodeOffset = '25px';\n        }\n        chart.explodeDistance = stringToNumber(series.explodeOffset, actualChartArea.width);\n        let points = series.points;\n        this.initializeSizeRatio(points, series);\n    }\n    /**\n     * Initializes the size of the pyramid/funnel segments\n     * @private\n     */\n    initializeSizeRatio(points, series, reverse = false) {\n        let sumOfPoints = series.sumOfPoints;\n        //Limiting the ratio within the range of 0 to 1\n        let gapRatio = Math.min(Math.max(series.gapRatio, 0), 1);\n        //% equivalence of a value 1\n        let coEff = 1 / (sumOfPoints * (1 + gapRatio / (1 - gapRatio)));\n        let spacing = gapRatio / (points.length - 1);\n        let y = 0;\n        //starting from bottom\n        for (let i = points.length - 1; i >= 0; i--) {\n            let index = reverse ? points.length - 1 - i : i;\n            if (points[index].visible) {\n                let height = coEff * points[index].y;\n                points[index].yRatio = y;\n                points[index].heightRatio = height;\n                y += height + spacing;\n            }\n        }\n    }\n    /**\n     * Marks the label location from the set of points that forms a pyramid/funnel segment\n     * @private\n     */\n    setLabelLocation(series, point, points) {\n        let last = points.length - 1;\n        let bottom = series.type === 'Funnel' ? points.length - 2 : points.length - 1;\n        let x = (points[0].x + points[bottom].x) / 2;\n        let right = (points[1].x + points[bottom - 1].x) / 2;\n        point.region = new Rect(x, points[0].y, right - x, points[bottom].y - points[0].y);\n        point.symbolLocation = {\n            x: point.region.x + point.region.width / 2,\n            y: point.region.y + point.region.height / 2\n        };\n        point.labelOffset = {\n            x: point.symbolLocation.x - (points[0].x + points[last].x) / 2,\n            y: point.symbolLocation.y - (points[0].y + points[last].y) / 2\n        };\n    }\n    /**\n     * Finds the path to connect the list of points\n     * @private\n     */\n    findPath(locations) {\n        let path = 'M';\n        for (let i = 0; i < locations.length; i++) {\n            path += locations[i].x + ' ' + locations[i].y;\n            if (i !== locations.length - 1) {\n                path += ' L';\n            }\n        }\n        return path;\n    }\n    /**\n     * To calculate data-label bounds\n     * @private\n     */\n    defaultLabelBound(series, visible, position, chart) {\n        let x = (chart.initialClipRect.width - series.triangleSize.width) / 2;\n        let y = (chart.initialClipRect.height - series.triangleSize.height) / 2;\n        let accumulationBound = new Rect(x, y, series.triangleSize.width, series.triangleSize.height);\n        series.labelBound = new Rect(accumulationBound.x, accumulationBound.y, accumulationBound.width + accumulationBound.x, accumulationBound.height + accumulationBound.y);\n        series.accumulationBound = accumulationBound;\n        if (visible && position === 'Outside') {\n            series.labelBound = new Rect(Infinity, Infinity, -Infinity, -Infinity);\n        }\n    }\n}\n\n/**\n * Defines the behavior of a funnel series\n */\n/**\n * FunnelSeries module used to render `Funnel` Series.\n */\nclass FunnelSeries extends TriangularBase {\n    /**\n     * Defines the path of a funnel segment\n     */\n    getSegmentData(point, series, chart) {\n        let lineWidth;\n        let topRadius;\n        let bottomRadius;\n        let endTop;\n        let endBottom;\n        let minRadius;\n        let endMin;\n        let bottomY;\n        let area = series.triangleSize;\n        let offset = 0;\n        let extraSpace = (chart.initialClipRect.width - series.triangleSize.width) / 2;\n        let emptySpaceAtLeft = extraSpace + chart.initialClipRect.x;\n        let seriesTop = chart.initialClipRect.y + (chart.initialClipRect.height - area.height) / 2;\n        //defines the top and bottom of a segment\n        let top = point.yRatio * area.height;\n        let bottom = top + point.heightRatio * area.height;\n        let neckSize = series.neckSize;\n        lineWidth = neckSize.width + (area.width - neckSize.width) * ((area.height - neckSize.height - top) /\n            (area.height - neckSize.height));\n        topRadius = (area.width / 2) - lineWidth / 2;\n        //Calculating the middle slope change and bottom\n        endTop = topRadius + lineWidth;\n        if (bottom > area.height - neckSize.height || area.height === neckSize.height) {\n            lineWidth = neckSize.width;\n        }\n        else {\n            lineWidth = neckSize.width + (area.width - neckSize.width) *\n                ((area.height - neckSize.height - bottom) / (area.height - neckSize.height));\n        }\n        bottomRadius = (area.width / 2) - (lineWidth / 2);\n        endBottom = bottomRadius + lineWidth;\n        if (top >= area.height - neckSize.height) {\n            topRadius = bottomRadius = minRadius = (area.width / 2) - neckSize.width / 2;\n            endTop = endBottom = endMin = (area.width / 2) + neckSize.width / 2;\n        }\n        else if (bottom > (area.height - neckSize.height)) {\n            minRadius = bottomRadius = (area.width / 2) - lineWidth / 2;\n            endMin = endBottom = minRadius + lineWidth;\n            bottomY = area.height - neckSize.height;\n        }\n        top += seriesTop;\n        bottom += seriesTop;\n        bottomY += seriesTop;\n        let line1 = { x: emptySpaceAtLeft + offset + topRadius, y: top };\n        let line2 = { x: emptySpaceAtLeft + offset + endTop, y: top };\n        let line4 = { x: emptySpaceAtLeft + offset + endBottom, y: bottom };\n        let line5 = { x: emptySpaceAtLeft + offset + bottomRadius, y: bottom };\n        let line3 = { x: emptySpaceAtLeft + offset + endBottom, y: bottom };\n        let line6 = { x: emptySpaceAtLeft + offset + bottomRadius, y: bottom };\n        if (bottomY) {\n            line3 = { x: emptySpaceAtLeft + offset + endMin, y: bottomY };\n            line6 = { x: emptySpaceAtLeft + offset + minRadius, y: bottomY };\n        }\n        let polygon = [line1, line2, line3, line4, line5, line6];\n        this.setLabelLocation(series, point, polygon);\n        let direction = this.findPath(polygon);\n        return direction;\n    }\n    /**\n     * Renders a funnel segment\n     * @private\n     */\n    renderPoint(point, series, chart, options) {\n        let direction = this.getSegmentData(point, series, chart);\n        point.midAngle = 0;\n        options.d = direction;\n    }\n    /**\n     * To get the module name of the funnel series.\n     */\n    getModuleName() {\n        return 'FunnelSeries';\n    }\n    /**\n     * To destroy the funnel series.\n     * @return {void}\n     * @private\n     */\n    destroy(accumulation) {\n        /**\n         * Destroys the funnel series\n         */\n    }\n}\n\n/**\n * Defines the behavior of a pyramid series\n */\n/**\n * PyramidSeries module used to render `Pyramid` Series.\n */\nclass PyramidSeries extends TriangularBase {\n    /**\n     * Defines the path of a pyramid segment\n     */\n    getSegmentData(point, series, chart) {\n        let area = series.triangleSize;\n        //top of th series\n        let seriesTop = chart.initialClipRect.y + (chart.initialClipRect.height - area.height) / 2;\n        let offset = 0;\n        let extraSpace = (chart.initialClipRect.width - series.triangleSize.width) / 2;\n        let emptySpaceAtLeft = extraSpace + chart.initialClipRect.x;\n        //top and bottom\n        let top = point.yRatio;\n        let bottom = point.yRatio + point.heightRatio;\n        //width of the top and bottom edge\n        let topRadius = 0.5 * (1 - point.yRatio);\n        let bottomRadius = 0.5 * (1 - bottom);\n        top += seriesTop / area.height;\n        bottom += seriesTop / area.height;\n        let line1 = {\n            x: emptySpaceAtLeft + offset + topRadius * area.width,\n            y: top * area.height\n        };\n        let line2 = {\n            x: emptySpaceAtLeft + offset + (1 - topRadius) * area.width,\n            y: top * area.height\n        };\n        let line3 = {\n            x: emptySpaceAtLeft + offset + (1 - bottomRadius) * area.width,\n            y: bottom * area.height\n        };\n        let line4 = {\n            x: emptySpaceAtLeft + offset + bottomRadius * area.width,\n            y: bottom * area.height\n        };\n        let polygon = [line1, line2, line3, line4];\n        this.setLabelLocation(series, point, polygon);\n        let direction = this.findPath(polygon);\n        return direction;\n    }\n    /**\n     * Initializes the size of the pyramid segments\n     * @private\n     */\n    initializeSizeRatio(points, series) {\n        if (series.pyramidMode === 'Linear') {\n            super.initializeSizeRatio(points, series, true);\n        }\n        else {\n            this.calculateSurfaceSegments(series);\n        }\n    }\n    /**\n     * Defines the size of the pyramid segments, the surface of that will reflect the values\n     */\n    calculateSurfaceSegments(series) {\n        let count = series.points.length;\n        let sumOfValues = series.sumOfPoints;\n        let y = [];\n        let height = [];\n        let gapRatio = Math.min(0, Math.max(series.gapRatio, 1));\n        let gapHeight = gapRatio / (count - 1);\n        let preSum = this.getSurfaceHeight(0, sumOfValues);\n        let currY = 0;\n        for (let i = 0; i < count; i++) {\n            if (series.points[i].visible) {\n                y[i] = currY;\n                height[i] = this.getSurfaceHeight(currY, Math.abs(series.points[i].y));\n                currY += height[i] + gapHeight * preSum;\n            }\n        }\n        let coef = 1 / (currY - gapHeight * preSum);\n        for (let i = 0; i < count; i++) {\n            if (series.points[i].visible) {\n                series.points[i].yRatio = coef * y[i];\n                series.points[i].heightRatio = coef * height[i];\n            }\n        }\n    }\n    /**\n     * Finds the height of pyramid segment\n     */\n    getSurfaceHeight(y, surface) {\n        let result = this.solveQuadraticEquation(1, 2 * y, -surface);\n        return result;\n    }\n    /**\n     * Solves quadratic equation\n     */\n    solveQuadraticEquation(a, b, c) {\n        let root1;\n        let root2;\n        let d = b * b - 4 * a * c;\n        if (d >= 0) {\n            let sd = Math.sqrt(d);\n            root1 = (-b - sd) / (2 * a);\n            root2 = (-b + sd) / (2 * a);\n            return Math.max(root1, root2);\n        }\n        return 0;\n    }\n    /**\n     * Renders a pyramid segment\n     */\n    renderPoint(point, series, chart, options) {\n        let direction = this.getSegmentData(point, series, chart);\n        point.midAngle = 0;\n        options.d = direction;\n    }\n    /**\n     * To get the module name of the Pyramid series.\n     */\n    getModuleName() {\n        return 'PyramidSeries';\n    }\n    /**\n     * To destroy the pyramid series\n     * @return {void}\n     * @private\n     */\n    destroy(accumulation) {\n        /**\n         * Destroys the pyramid series\n         */\n    }\n}\n\n/**\n * AccumulationChart legend\n */\n/**\n * AccumulationLegend module used to render `Legend` for Accumulation chart.\n */\nclass AccumulationLegend extends BaseLegend {\n    /**\n     * Constructor for Accumulation Legend.\n     * @param chart\n     */\n    constructor(chart) {\n        super(chart);\n        this.library = this;\n        this.titleRect = new Rect(0, chart.margin.top, 0, 0);\n    }\n    /**\n     * Get the legend options.\n     * @return {void}\n     * @private\n     */\n    getLegendOptions(chart, series) {\n        this.legendCollections = [];\n        for (let i = 0; i < 1; i++) {\n            let seriesType = series[i].type;\n            if (seriesType === 'Pie' || seriesType === 'Doughnut') {\n                seriesType = (series[i].innerRadius !== '0' && series[i].innerRadius !== '0%') ?\n                    'Doughnut' : 'Pie';\n            }\n            for (let point of series[i].points) {\n                if (!isNullOrUndefined(point.x) && !isNullOrUndefined(point.y)) {\n                    this.legendCollections.push(new LegendOptions(point.x.toString(), point.color, series[i].legendShape, point.visible, seriesType, null, null, point.index, series[i].index));\n                }\n            }\n        }\n    }\n    /**\n     * To find legend bounds for accumulation chart.\n     * @private\n     */\n    getLegendBounds(availableSize, legendBounds, legend) {\n        let extraWidth = 0;\n        let extraHeight = 0;\n        let padding = legend.padding;\n        if (!this.isVertical) {\n            extraHeight = !legend.height ? ((availableSize.height / 100) * 5) : 0;\n        }\n        else {\n            extraWidth = !legend.width ? ((availableSize.width / 100) * 5) : 0;\n        }\n        legendBounds.width += extraWidth;\n        legendBounds.height += extraHeight;\n        let shapePadding = legend.shapePadding;\n        let maximumWidth = 0;\n        let shapeWidth = legend.shapeWidth;\n        let rowWidth = 0;\n        let rowCount = 0;\n        let columnWidth = [];\n        let columnHeight = 0;\n        let legendWidth = 0;\n        this.maxItemHeight = Math.max(measureText('MeasureText', legend.textStyle).height, legend.shapeHeight);\n        let legendEventArgs;\n        let render = false;\n        for (let legendOption of this.legendCollections) {\n            legendEventArgs = { fill: legendOption.fill, text: legendOption.text, shape: legendOption.shape,\n                name: 'legendRender', cancel: false };\n            this.chart.trigger('legendRender', legendEventArgs);\n            legendOption.render = !legendEventArgs.cancel;\n            legendOption.text = legendEventArgs.text;\n            legendOption.fill = legendEventArgs.fill;\n            legendOption.shape = legendEventArgs.shape;\n            legendOption.textSize = measureText(legendOption.text, legend.textStyle);\n            if (legendOption.render && legendOption.text !== '') {\n                render = true;\n                legendWidth = shapeWidth + shapePadding + legendOption.textSize.width + padding;\n                if (this.isVertical) {\n                    ++rowCount;\n                    columnHeight = (rowCount * (this.maxItemHeight + padding)) + padding;\n                    if ((rowCount * (this.maxItemHeight + padding)) + padding > legendBounds.height) {\n                        columnHeight = Math.max(columnHeight, (rowCount * (this.maxItemHeight + padding)) + padding);\n                        rowWidth = rowWidth + maximumWidth;\n                        columnWidth.push(maximumWidth);\n                        this.totalPages = Math.max(rowCount, this.totalPages || 1);\n                        maximumWidth = 0;\n                        rowCount = 1;\n                    }\n                    maximumWidth = Math.max(legendWidth, maximumWidth);\n                }\n                else {\n                    rowWidth = rowWidth + legendWidth;\n                    if (legendBounds.width < (padding + rowWidth)) {\n                        maximumWidth = Math.max(maximumWidth, (rowWidth + padding - legendWidth));\n                        if (rowCount === 0 && (legendWidth !== rowWidth)) {\n                            rowCount = 1;\n                        }\n                        rowWidth = legendWidth;\n                        rowCount++;\n                        columnHeight = (rowCount * (this.maxItemHeight + padding)) + padding;\n                    }\n                }\n            }\n        }\n        if (this.isVertical) {\n            rowWidth = rowWidth + maximumWidth;\n            this.isPaging = legendBounds.width < (rowWidth + padding);\n            columnHeight = Math.max(columnHeight, ((this.totalPages || 1) * (this.maxItemHeight + padding)) + padding);\n            this.isPaging = this.isPaging && (this.totalPages > 1);\n            if (columnWidth[columnWidth.length - 1] !== maximumWidth) {\n                columnWidth.push(maximumWidth);\n            }\n        }\n        else {\n            this.isPaging = legendBounds.height < columnHeight;\n            this.totalPages = this.totalRowCount = rowCount;\n            columnHeight = Math.max(columnHeight, (this.maxItemHeight + padding) + padding);\n        }\n        this.maxColumns = 0; // initialization for max columns\n        let width = this.isVertical ? this.getMaxColumn(columnWidth, legendBounds.width, padding, rowWidth + padding) :\n            Math.max(rowWidth + padding, maximumWidth);\n        if (render) {\n            this.setBounds(width, columnHeight, legend, legendBounds);\n        }\n        else {\n            this.setBounds(0, 0, legend, legendBounds);\n        }\n    }\n    /**\n     * To find maximum column size for legend\n     */\n    getMaxColumn(columns, width, padding, rowWidth) {\n        let maxPageColumn = padding;\n        this.maxColumnWidth = Math.max.apply(null, columns);\n        for (let column of columns) {\n            maxPageColumn += this.maxColumnWidth;\n            this.maxColumns++;\n            if (maxPageColumn + padding > width) {\n                maxPageColumn -= this.maxColumnWidth;\n                this.maxColumns--;\n                break;\n            }\n        }\n        this.isPaging = (maxPageColumn < rowWidth) && (this.totalPages > 1);\n        if (maxPageColumn === padding) {\n            maxPageColumn = width;\n        }\n        this.maxColumns = Math.max(1, this.maxColumns);\n        this.maxWidth = maxPageColumn;\n        return maxPageColumn;\n    }\n    /**\n     * To find available width from legend x position.\n     */\n    getAvailWidth(tx, width, legendX) {\n        if (this.isVertical) {\n            width = this.maxWidth;\n        }\n        return width - ((this.legend.padding * 2) + this.legend.shapeWidth + this.legend.shapePadding);\n    }\n    /**\n     * To find legend rendering locations from legend options.\n     * @private\n     */\n    getRenderPoint(legendOption, start, textPadding, prevLegend, rect, count, firstLegend) {\n        let padding = this.legend.padding;\n        if (this.isVertical) {\n            if (count === firstLegend || (prevLegend.location.y + (this.maxItemHeight * 1.5) + (padding * 2) > rect.y + rect.height)) {\n                legendOption.location.x = prevLegend.location.x + ((count === firstLegend) ? 0 : this.maxColumnWidth);\n                legendOption.location.y = start.y;\n                this.pageXCollections.push(legendOption.location.x - (this.legend.shapeWidth / 2) - padding);\n                this.totalPages++;\n            }\n            else {\n                legendOption.location.x = prevLegend.location.x;\n                legendOption.location.y = prevLegend.location.y + this.maxItemHeight + padding;\n            }\n        }\n        else {\n            let previousBound = (prevLegend.location.x + textPadding + prevLegend.textSize.width);\n            if ((previousBound + (legendOption.textSize.width + textPadding)) > (rect.x + rect.width + this.legend.shapeWidth / 2)) {\n                legendOption.location.y = (count === firstLegend) ? prevLegend.location.y :\n                    prevLegend.location.y + this.maxItemHeight + padding;\n                legendOption.location.x = start.x;\n            }\n            else {\n                legendOption.location.y = prevLegend.location.y;\n                legendOption.location.x = (count === firstLegend) ? prevLegend.location.x : previousBound;\n            }\n            this.totalPages = this.totalRowCount;\n        }\n        let availablewidth = this.getAvailWidth(legendOption.location.x, this.legendBounds.width, this.legendBounds.x);\n        legendOption.text = textTrim(+availablewidth.toFixed(4), legendOption.text, this.legend.textStyle);\n    }\n    /**\n     * finding the smart legend place according to positions.\n     * @return {void}\n     * @private\n     */\n    getSmartLegendLocation(labelBound, legendBound, margin) {\n        let space;\n        switch (this.position) {\n            case 'Left':\n                space = ((labelBound.x - legendBound.width) - margin.left) / 2;\n                legendBound.x = (labelBound.x - legendBound.width) < margin.left ? legendBound.x :\n                    (labelBound.x - legendBound.width) - space;\n                break;\n            case 'Right':\n                space = ((this.chart.availableSize.width - margin.right) - (labelBound.x + labelBound.width + legendBound.width)) / 2;\n                legendBound.x = (labelBound.x + labelBound.width + legendBound.width) > (this.chart.availableSize.width - margin.right) ?\n                    legendBound.x : (labelBound.x + labelBound.width + space);\n                break;\n            case 'Top':\n                this.getTitleRect(this.chart);\n                space = ((labelBound.y - legendBound.height) - (this.titleRect.y + this.titleRect.height)) / 2;\n                legendBound.y = (labelBound.y - legendBound.height) < margin.top ? legendBound.y :\n                    (labelBound.y - legendBound.height) - space;\n                break;\n            case 'Bottom':\n                space = ((this.chart.availableSize.height - margin.bottom) - (labelBound.y + labelBound.height + legendBound.height)) / 2;\n                legendBound.y = labelBound.y + labelBound.height + legendBound.height > (this.chart.availableSize.height - margin.bottom) ?\n                    legendBound.y : (labelBound.y + labelBound.height) + space;\n                break;\n        }\n    }\n    /**\n     * To get title rect.\n     */\n    getTitleRect(accumulation) {\n        if (!accumulation.title) {\n            return null;\n        }\n        let titleSize = measureText(accumulation.title, accumulation.titleStyle);\n        this.titleRect = new Rect(accumulation.availableSize.width / 2 - titleSize.width / 2, accumulation.margin.top, titleSize.width, titleSize.height);\n    }\n    /**\n     * To get legend by index\n     */\n    legendByIndex(index, legendCollections) {\n        for (let legend of legendCollections) {\n            if (legend.pointIndex === index) {\n                return legend;\n            }\n        }\n        return null;\n    }\n    /**\n     * To show or hide the legend on clicking the legend.\n     * @return {void}\n     */\n    click(event) {\n        let targetId = event.target.id;\n        let legendItemsId = [this.legendID + '_text_', this.legendID + '_shape_',\n            this.legendID + '_shape_marker_'];\n        let selectedDataIndexes = [];\n        if (this.chart.accumulationSelectionModule) {\n            selectedDataIndexes = extend([], this.chart.accumulationSelectionModule.selectedDataIndexes, null, true);\n        }\n        for (let id of legendItemsId) {\n            if (targetId.indexOf(id) > -1) {\n                let pointIndex = parseInt(targetId.split(id)[1], 10);\n                let currentSeries = this.chart.visibleSeries[0];\n                let point = pointByIndex(pointIndex, currentSeries.points);\n                let legendOption = this.legendByIndex(pointIndex, this.legendCollections);\n                if (this.chart.legendSettings.toggleVisibility) {\n                    point.visible = !point.visible;\n                    legendOption.visible = point.visible;\n                    this.chart.removeSvg();\n                    if (point.visible) {\n                        currentSeries.sumOfPoints += point.y;\n                    }\n                    else {\n                        currentSeries.sumOfPoints -= point.y;\n                    }\n                    this.chart.refreshPoints(currentSeries.points);\n                    this.chart.renderElements();\n                }\n                else if (this.chart.accumulationSelectionModule) {\n                    this.chart.accumulationSelectionModule.legendSelection(this.chart, 0, pointIndex);\n                }\n            }\n        }\n        if (targetId.indexOf(this.legendID + '_pageup') > -1) {\n            this.changePage(event, true);\n        }\n        else if (targetId.indexOf(this.legendID + '_pagedown') > -1) {\n            this.changePage(event, false);\n        }\n    }\n    /**\n     * Get module name\n     */\n    getModuleName() {\n        return 'AccumulationLegend';\n    }\n    /**\n     * To destroy the Legend.\n     * @return {void}\n     * @private\n     */\n    destroy(chart) {\n        /**\n         * Destroy method calling here\n         */\n    }\n}\n\n/**\n * AccumulationChart DataLabel module file\n */\n/**\n * AccumulationDataLabel module used to render `dataLabel`.\n */\nclass AccumulationDataLabel extends AccumulationBase {\n    constructor(accumulation) {\n        super(accumulation);\n        this.id = accumulation.element.id + '_datalabel_Series_';\n        if (accumulation.title) {\n            let titleSize = measureText(accumulation.title, accumulation.titleStyle);\n            this.titleRect = new Rect(accumulation.availableSize.width / 2 - titleSize.width / 2, accumulation.margin.top, titleSize.width, titleSize.height);\n        }\n    }\n    /**\n     * Method to get datalabel text location.\n     * @private\n     */\n    getDataLabelPosition(point, dataLabel, textSize, points, parent, id) {\n        let radius = this.isCircular() ? this.labelRadius : this.getLabelDistance(point, dataLabel);\n        this.getLabelRegion(point, dataLabel.position, textSize, radius, this.marginValue);\n        point.labelAngle = point.midAngle;\n        point.labelPosition = dataLabel.position;\n        if (this.accumulation.enableSmartLabels) {\n            this.getSmartLabel(point, dataLabel, textSize, points, parent, id);\n        }\n    }\n    /**\n     * Method to get datalabel bound.\n     */\n    getLabelRegion(point, position, textSize, labelRadius, margin, endAngle = 0) {\n        let labelAngle = endAngle || point.midAngle;\n        let space = 10;\n        let location = degreeToLocation(labelAngle, labelRadius, this.isCircular() ? this.center :\n            this.getLabelLocation(point, position));\n        location.y = (position === 'Inside') ? (location.y - textSize.height / 2) : location.y;\n        location.x = (position === 'Inside') ? (location.x - textSize.width / 2) : location.x;\n        point.labelRegion = new Rect(location.x, location.y, textSize.width + (margin * 2), textSize.height + (margin * 2));\n        if (position === 'Outside') {\n            point.labelRegion.y -= point.labelRegion.height / 2;\n            if (labelAngle >= 90 && labelAngle <= 270) {\n                point.labelRegion.x -= (point.labelRegion.width + space);\n            }\n            else {\n                point.labelRegion.x += space;\n            }\n        }\n    }\n    /**\n     * Method to get datalabel smart position.\n     */\n    getSmartLabel(point, dataLabel, textSize, points, parent, id) {\n        let circular = this.isCircular();\n        let labelRadius = circular ? this.radius : this.getLabelDistance(point, dataLabel);\n        let connectorLength = circular ? (dataLabel.connectorStyle.length || '4%') :\n            '0px';\n        labelRadius += stringToNumber(connectorLength, labelRadius);\n        let previousPoint = this.findPreviousPoint(points, point.index, point.labelPosition);\n        if (dataLabel.position === 'Inside') {\n            if (previousPoint && previousPoint.labelRegion && (isOverlap(point.labelRegion, previousPoint.labelRegion)\n                || this.isOverlapping(point, points)) || !circular && !containsRect(point.region, point.labelRegion)) {\n                point.labelPosition = 'Outside';\n                if (!circular) {\n                    labelRadius = this.getLabelDistance(point, dataLabel);\n                }\n                this.getLabelRegion(point, point.labelPosition, textSize, labelRadius, this.marginValue);\n                previousPoint = this.findPreviousPoint(points, point.index, point.labelPosition);\n                if (previousPoint && (isOverlap(point.labelRegion, previousPoint.labelRegion) ||\n                    this.isConnectorLineOverlapping(point, previousPoint))) {\n                    this.setOuterSmartLabel(previousPoint, point, dataLabel.border.width, labelRadius, textSize, this.marginValue);\n                }\n            }\n        }\n        else {\n            if (previousPoint && previousPoint.labelRegion && (isOverlap(point.labelRegion, previousPoint.labelRegion)\n                || this.isOverlapping(point, points) || this.isConnectorLineOverlapping(point, previousPoint))) {\n                this.setOuterSmartLabel(previousPoint, point, dataLabel.border.width, labelRadius, textSize, this.marginValue);\n            }\n        }\n        if (this.isOverlapping(point, points) || (this.titleRect && point.labelRegion && isOverlap(point.labelRegion, this.titleRect))) {\n            this.setPointVisibileFalse(point);\n        }\n        if (this.accumulation.accumulationLegendModule && point.labelVisible && point.labelRegion) {\n            let rect = this.accumulation.accumulationLegendModule.legendBounds;\n            let padding = this.accumulation.legendSettings.border.width / 2;\n            this.textTrimming(point, new Rect(rect.x - padding, rect.y - padding, rect.width + (2 * padding), rect.height + (2 * padding)), dataLabel.font, this.accumulation.accumulationLegendModule.position);\n        }\n        if (point.labelVisible && point.labelRegion) {\n            let position = this.isCircular() ? (point.labelRegion.x >= this.center.x) ? 'InsideRight' : 'InsideLeft' :\n                'InsideRight';\n            this.textTrimming(point, this.areaRect, dataLabel.font, position);\n        }\n        if (point.labelVisible && point.labelRegion && ((point.labelRegion.y + point.labelRegion.height >\n            this.areaRect.y + this.areaRect.height || point.labelRegion.y < this.areaRect.y) || (point.labelRegion.x < this.areaRect.x ||\n            point.labelRegion.x + point.labelRegion.width > this.areaRect.x + this.areaRect.width))) {\n            this.setPointVisibileFalse(point);\n        }\n    }\n    /**\n     * To find trimmed datalabel tooltip needed.\n     * @return {void}\n     * @private\n     */\n    move(e, x, y, isTouch) {\n        if (e.target.textContent.indexOf('...') > -1) {\n            let targetId = e.target.id.split(this.id);\n            if (targetId.length === 2) {\n                let seriesIndex = parseInt(targetId[1].split('_text_')[0], 10);\n                let pointIndex = parseInt(targetId[1].split('_text_')[1], 10);\n                if (!isNaN(seriesIndex) && !isNaN(pointIndex)) {\n                    if (isTouch) {\n                        removeElement(this.accumulation.element.id + '_EJ2_Datalabel_Tooltip');\n                    }\n                    let point = getSeriesFromIndex(seriesIndex, (this.accumulation).visibleSeries).points[pointIndex];\n                    showTooltip(point.text || point.y.toString(), x, y, this.areaRect.width, this.accumulation.element.id + '_EJ2_Datalabel_Tooltip', getElement(this.accumulation.element.id + '_Secondary_Element'));\n                }\n            }\n        }\n        else {\n            removeElement(this.accumulation.element.id + '_EJ2_Datalabel_Tooltip');\n        }\n        if (isTouch) {\n            clearTimeout(this.clearTooltip);\n            this.clearTooltip = setTimeout(() => { removeElement(this.accumulation.element.id + '_EJ2_Datalabel_Tooltip'); }, 1000);\n        }\n    }\n    /**\n     * To find previous valid label point\n     */\n    findPreviousPoint(points, index, position) {\n        let point = points[0];\n        for (let i = index - 1; i >= 0; i--) {\n            point = points[i];\n            if (point.visible && point.labelVisible && point.labelRegion && point.labelPosition === position) {\n                return point;\n            }\n        }\n        return null;\n    }\n    /**\n     * To find current point datalabel is overlapping with other points\n     */\n    isOverlapping(currentPoint, points) {\n        for (let i = currentPoint.index - 1; i >= 0; i--) {\n            if (points[i].visible && points[i].labelVisible && points[i].labelRegion && currentPoint.labelRegion &&\n                currentPoint.labelVisible && isOverlap(currentPoint.labelRegion, points[i].labelRegion)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    /**\n     * To get text trimmed while exceeds the accumulation chart area.\n     */\n    textTrimming(point, rect, font, position) {\n        if (isOverlap(point.labelRegion, rect)) {\n            let size = point.labelRegion.width;\n            if (position === 'Right') {\n                size = rect.x - point.labelRegion.x;\n            }\n            else if (position === 'Left') {\n                size = point.labelRegion.x - (rect.x + rect.width);\n                if (size < 0) {\n                    size += point.labelRegion.width;\n                    point.labelRegion.x = rect.x + rect.width;\n                }\n            }\n            else if (position === 'InsideRight') {\n                size = (rect.x + rect.width) - point.labelRegion.x;\n            }\n            else if (position === 'InsideLeft') {\n                size = (point.labelRegion.x + point.labelRegion.width) - rect.x;\n                if (size < point.labelRegion.width) {\n                    point.labelRegion.x = rect.x;\n                }\n            }\n            else {\n                this.setPointVisibileFalse(point);\n            }\n            if (point.labelVisible && point.labelRegion) {\n                if (size < point.labelRegion.width) {\n                    point.label = textTrim(size - (this.marginValue * 2), point.label, font);\n                    point.labelRegion.width = size;\n                }\n                if (point.label.length === 3 && point.label.indexOf('...') > -1) {\n                    this.setPointVisibileFalse(point);\n                }\n            }\n        }\n    }\n    /**\n     * To set point label visible and region to disable.\n     */\n    setPointVisibileFalse(point) {\n        point.labelVisible = false;\n        point.labelRegion = null;\n    }\n    /**\n     * To set datalabel angle position for outside labels\n     */\n    setOuterSmartLabel(previousPoint, point, border, labelRadius, textsize, margin) {\n        if (!this.isCircular()) {\n            this.setSmartLabelForSegments(point, previousPoint, labelRadius, textsize, margin);\n        }\n        else {\n            let labelAngle = this.getOverlappedAngle(previousPoint.labelRegion, point.labelRegion, point.midAngle, border * 2);\n            this.getLabelRegion(point, 'Outside', textsize, labelRadius, margin, labelAngle);\n            if (labelAngle > point.endAngle) {\n                this.setPointVisibileFalse(point);\n            }\n            point.labelAngle = labelAngle;\n            while (point.labelVisible && (isOverlap(previousPoint.labelRegion, point.labelRegion) || labelAngle <= previousPoint.labelAngle\n                || this.isConnectorLineOverlapping(point, previousPoint))) {\n                if (labelAngle > point.endAngle) {\n                    this.setPointVisibileFalse(point);\n                    break;\n                }\n                point.labelAngle = labelAngle;\n                this.getLabelRegion(point, 'Outside', textsize, labelRadius, margin, labelAngle);\n                labelAngle += 0.1;\n            }\n        }\n    }\n    /**\n     * Sets smart label positions for funnel and pyramid series\n     */\n    setSmartLabelForSegments(point, prevPoint, distance, textSize, margin) {\n        let textRegion = point.labelRegion;\n        //let overlapWidth: number = prevPoint.labelRegion.x + prevPoint.labelRegion.width - textRegion.x;\n        let overlapHeight = this.accumulation.type === 'Funnel' ?\n            prevPoint.labelRegion.y - (textRegion.y + textRegion.height) :\n            point.labelRegion.y - (prevPoint.labelRegion.y + prevPoint.labelRegion.height);\n        if (overlapHeight < 0) {\n            point.labelRegion.y += this.accumulation.type === 'Funnel' ? overlapHeight : -overlapHeight;\n        }\n    }\n    /**\n     * To find connector line overlapping.\n     */\n    isConnectorLineOverlapping(point, previous) {\n        let start = this.getLabelLocation(point);\n        let end = new ChartLocation(0, 0);\n        this.getEdgeOfLabel(point.labelRegion, point.labelAngle, end);\n        let previousstart = this.getLabelLocation(previous);\n        let previousend = new ChartLocation(0, 0);\n        this.getEdgeOfLabel(previous.labelRegion, previous.labelAngle, previousend);\n        return this.isLineRectangleIntersect(start, end, point.labelRegion) ||\n            this.isLineRectangleIntersect(start, end, previous.labelRegion) ||\n            this.isLineRectangleIntersect(previousstart, previousend, point.labelRegion);\n    }\n    /**\n     * To find two rectangle intersect\n     */\n    isLineRectangleIntersect(line1, line2, rect) {\n        let rectPoints = [\n            new ChartLocation(Math.round(rect.x), Math.round(rect.y)),\n            new ChartLocation(Math.round((rect.x + rect.width)), Math.round(rect.y)),\n            new ChartLocation(Math.round((rect.x + rect.width)), Math.round((rect.y + rect.height))),\n            new ChartLocation(Math.round(rect.x), Math.round((rect.y + rect.height)))\n        ];\n        line1.x = Math.round(line1.x);\n        line1.y = Math.round(line1.y);\n        line2.x = Math.round(line2.x);\n        line2.y = Math.round(line2.y);\n        for (let i = 0; i < rectPoints.length; i++) {\n            if (this.isLinesIntersect(line1, line2, rectPoints[i], rectPoints[(i + 1) % rectPoints.length])) {\n                return true;\n            }\n        }\n        return false;\n    }\n    /**\n     * To find two line intersect\n     */\n    isLinesIntersect(point1, point2, point11, point12) {\n        let a1 = point2.y - point1.y;\n        let b1 = point1.x - point2.x;\n        let c1 = a1 * point1.x + b1 * point1.y;\n        let a2 = point12.y - point11.y;\n        let b2 = point11.x - point12.x;\n        let c2 = a2 * point11.x + b2 * point11.y;\n        let delta = a1 * b2 - a2 * b1;\n        if (delta !== 0) {\n            let x = (b2 * c1 - b1 * c2) / delta;\n            let y = (a1 * c2 - a2 * c1) / delta;\n            let lies = Math.min(point1.x, point2.x) <= x && x <= Math.max(point1.x, point2.x);\n            lies = lies && Math.min(point1.y, point2.y) <= y && y <= Math.max(point1.y, point2.y);\n            lies = lies && Math.min(point11.x, point12.x) <= x && x <= Math.max(point11.x, point12.x);\n            lies = lies && Math.min(point11.y, point12.y) <= y && y <= Math.max(point11.y, point12.y);\n            return lies;\n        }\n        return false;\n    }\n    /**\n     * To get two rectangle overlapping angles.\n     */\n    getOverlappedAngle(first, second, angle, padding) {\n        let x = first.x;\n        if (angle >= 90 && angle <= 270) {\n            second.y = first.y - (padding + second.height / 2);\n            x = first.x + first.width;\n        }\n        else {\n            second.y = first.y + first.height + padding;\n        }\n        return getAngle(this.center, new ChartLocation(x, second.y));\n    }\n    /**\n     * To get connector line path\n     */\n    getConnectorPath(label, point, dataLabel, end = 0) {\n        let connector = dataLabel.connectorStyle;\n        let labelRadius = this.isCircular() ? this.labelRadius : this.getLabelDistance(point, dataLabel);\n        let start = this.getConnectorStartPoint(point, connector);\n        let labelAngle = end || point.midAngle;\n        let middle = new ChartLocation(0, 0);\n        let endPoint = this.getEdgeOfLabel(label, labelAngle, middle, connector.width);\n        if (connector.type === 'Curve') {\n            if (this.isCircular()) {\n                let r = labelRadius - this.radius;\n                middle = degreeToLocation(labelAngle, labelRadius - (r / 2), this.center);\n                return 'M ' + start.x + ' ' + start.y + ' Q' + middle.x + ',' + middle.y + ' ' + endPoint.x + ',' + endPoint.y;\n            }\n            else {\n                return this.getPolyLinePath(start, endPoint);\n            }\n        }\n        else {\n            return 'M ' + start.x + ' ' + start.y + ' L ' + middle.x + ' ' + middle.y + ' L ' + endPoint.x + ' ' + endPoint.y;\n        }\n    }\n    /**\n     * Finds the curved path for funnel/pyramid data label connectors\n     */\n    getPolyLinePath(start, end) {\n        let controlPoints = [start, end];\n        if (start.y === end.y) {\n            return 'M ' + start.x + ' ' + start.y + ' L ' + end.x + ' ' + end.y;\n        }\n        let path = 'M';\n        for (let i = 0; i <= 16; i++) {\n            let t = i / 16;\n            let points = this.getBezierPoint(t, controlPoints, 0, 2);\n            path += points.x + ',' + points.y;\n            if (i !== 16) {\n                path += ' L';\n            }\n        }\n        return path;\n    }\n    /**\n     * Finds the bezier point for funnel/pyramid data label connectors\n     */\n    getBezierPoint(t, controlPoints, index, count) {\n        if (count === 1) {\n            return controlPoints[index];\n        }\n        let p0 = this.getBezierPoint(t, controlPoints, index, count - 1);\n        let p1 = this.getBezierPoint(t, controlPoints, index + 1, count - 1);\n        let x = (p0.x) ? p0.x : p0.x;\n        let y = (p0.y) ? p0.y : p0.y;\n        let x1 = (p1.x) ? p1.x : p1.x;\n        let y1 = (p1.y) ? p1.y : p1.y;\n        let x2 = (1 - t) * x + t * x1;\n        let y2 = (1 - t) * y + t * y1;\n        if (p0.x) {\n            return { x: x2, y: y2 };\n        }\n        else {\n            return { x: x2, y: y2 };\n        }\n    }\n    /**\n     * To get label edges based on the center and label rect position.\n     */\n    getEdgeOfLabel(labelshape, angle, middle, border = 1) {\n        let edge = new ChartLocation(labelshape.x, labelshape.y);\n        if (angle >= 90 && angle <= 270) {\n            edge.x += labelshape.width + border / 2;\n            edge.y += labelshape.height / 2;\n            middle.x = edge.x + 10;\n            middle.y = edge.y;\n        }\n        else {\n            edge.x -= border / 2;\n            edge.y += labelshape.height / 2;\n            middle.x = edge.x - 10;\n            middle.y = edge.y;\n        }\n        return edge;\n    }\n    /**\n     * Finds the distance between the label position and the edge/center of the funnel/pyramid\n     */\n    getLabelDistance(point, dataLabel) {\n        if (point.labelPosition && dataLabel.position !== point.labelPosition || dataLabel.connectorStyle.length) {\n            let length = stringToNumber(dataLabel.connectorStyle.length || '70px', this.accumulation.initialClipRect.width);\n            if (length < this.accumulation.initialClipRect.width) {\n                return length;\n            }\n        }\n        let position = point.labelPosition || dataLabel.position;\n        let series = this.accumulation.visibleSeries[0];\n        let extraSpace = (this.accumulation.initialClipRect.width - series.triangleSize.width) / 2;\n        let labelLocation;\n        switch (position) {\n            case 'Inside':\n                return 0;\n            case 'Outside':\n                labelLocation = point.symbolLocation.x + point.labelOffset.x;\n                return this.accumulation.initialClipRect.width - labelLocation - extraSpace;\n        }\n    }\n    /**\n     * Finds the label position / beginning of the connector(ouside funnel labels)\n     */\n    getLabelLocation(point, position = 'Outside') {\n        if (this.accumulation.type !== 'Pie') {\n            position = point.labelPosition || position;\n            let location = {\n                x: point.symbolLocation.x,\n                y: point.symbolLocation.y - point.labelOffset.y\n            };\n            switch (position) {\n                case 'Inside':\n                    location.y = point.region.y + point.region.height / 2;\n                    break;\n                case 'Outside':\n                    location.x += point.labelOffset.x;\n            }\n            return location;\n        }\n        else {\n            return degreeToLocation(point.midAngle, this.radius, this.center);\n        }\n    }\n    /**\n     * Finds the beginning of connector line\n     */\n    getConnectorStartPoint(point, connector) {\n        return this.isCircular() ? degreeToLocation(point.midAngle, this.radius - connector.width, this.center) :\n            this.getLabelLocation(point);\n    }\n    /**\n     * To find area rect based on margin, available size.\n     * @private\n     */\n    findAreaRect() {\n        this.areaRect = new Rect(0, 0, this.accumulation.availableSize.width, this.accumulation.availableSize.height);\n        let margin = this.accumulation.margin;\n        subtractThickness(this.areaRect, new Thickness(margin.left, margin.right, margin.top, margin.bottom));\n    }\n    /**\n     * To render the data labels from series points.\n     */\n    renderDataLabel(point, dataLabel, parent, points, series, templateElement) {\n        let id = this.accumulation.element.id + '_datalabel_Series_' + series + '_';\n        let datalabelGroup = this.accumulation.renderer.createGroup({ id: id + 'g_' + point.index });\n        point.label = point.originalText || point.y.toString();\n        let border = { width: dataLabel.border.width, color: dataLabel.border.color };\n        let argsData = {\n            cancel: false, name: textRender, series: this.accumulation.visibleSeries[0], point: point,\n            text: point.label, border: border, color: dataLabel.fill, template: dataLabel.template\n        };\n        this.accumulation.trigger(textRender, argsData);\n        let isTemplate = argsData.template !== null;\n        point.labelVisible = !argsData.cancel;\n        point.text = point.label = argsData.text;\n        this.marginValue = argsData.border.width ? (5 + argsData.border.width) : 1;\n        // Template element\n        let childElement = createElement('div', {\n            id: this.accumulation.element.id + '_Series_' + 0 + '_DataLabel_' + point.index,\n            styles: 'position: absolute;background-color:' + argsData.color + ';' +\n                getFontStyle(dataLabel.font) + ';border:' + argsData.border.width + 'px solid ' + argsData.border.color + ';'\n        });\n        let textSize = isTemplate ? this.getTemplateSize(childElement, point, argsData) :\n            measureText(point.label, dataLabel.font);\n        textSize.height += 4; // 4 for calculation with padding for smart label shape\n        textSize.width += 4;\n        this.getDataLabelPosition(point, dataLabel, textSize, points, datalabelGroup, id);\n        if (point.labelVisible) {\n            this.correctLabelRegion(point.labelRegion, textSize);\n            if (isTemplate) {\n                this.setTemplateStyle(childElement, point, templateElement, dataLabel.font.color, argsData.color);\n            }\n            else {\n                datalabelGroup.appendChild(this.accumulation.renderer.drawRectangle(new RectOption(id + 'shape_' + point.index, argsData.color, argsData.border, 1, point.labelRegion, dataLabel.rx, dataLabel.ry)));\n                textElement(new TextOption(id + 'text_' + point.index, point.labelRegion.x + this.marginValue, point.labelRegion.y + (textSize.height * 3 / 4) + this.marginValue, 'start', point.label, '', 'auto'), dataLabel.font, dataLabel.font.color || this.getSaturatedColor(point, argsData.color), datalabelGroup);\n            }\n            if (this.accumulation.accumulationLegendModule && (dataLabel.position === 'Outside' || this.accumulation.enableSmartLabels)) {\n                this.accumulation.visibleSeries[0].findMaxBounds(this.accumulation.visibleSeries[0].labelBound, point.labelRegion);\n            }\n            if (point.labelPosition === 'Outside') {\n                let path = this.getConnectorPath(extend({}, point.labelRegion, null, true), point, dataLabel, point.labelAngle);\n                let pathElement = this.accumulation.renderer.drawPath(new PathOption(id + 'connector_' + point.index, 'transparent', dataLabel.connectorStyle.width, dataLabel.connectorStyle.color || point.color, 1, '', path));\n                datalabelGroup.appendChild(pathElement);\n            }\n            parent.appendChild(datalabelGroup);\n        }\n    }\n    /**\n     * To find the template element size\n     * @param element\n     * @param point\n     * @param argsData\n     */\n    getTemplateSize(element, point, argsData) {\n        let clientRect;\n        element = createTemplate(element, point.index, argsData.template, this.accumulation, point, this.accumulation.visibleSeries[0]);\n        clientRect = measureElementRect(element);\n        return { width: clientRect.width, height: clientRect.height };\n    }\n    /**\n     * To set the template element style\n     * @param childElement\n     * @param point\n     * @param parent\n     * @param labelColor\n     * @param fill\n     */\n    setTemplateStyle(childElement, point, parent, labelColor, fill) {\n        childElement.style.left = (point.labelRegion.x) + 'px';\n        childElement.style.top = (point.labelRegion.y) + 'px';\n        childElement.style.color = labelColor ||\n            this.getSaturatedColor(point, fill);\n        if (childElement.childElementCount) {\n            parent.appendChild(childElement);\n            this.doTemplateAnimation(this.accumulation, childElement);\n        }\n    }\n    /**\n     * To find saturated color for datalabel\n     */\n    getSaturatedColor(point, color) {\n        let saturatedColor;\n        if (this.marginValue >= 1) {\n            saturatedColor = color === 'transparent' ? this.getLabelBackground(point) : color;\n        }\n        else {\n            saturatedColor = this.getLabelBackground(point);\n        }\n        saturatedColor = (saturatedColor === 'transparent') ? window.getComputedStyle(document.body, null).backgroundColor : saturatedColor;\n        let rgbValue = convertHexToColor(colorNameToHex(saturatedColor));\n        let contrast = Math.round((rgbValue.r * 299 + rgbValue.g * 587 + rgbValue.b * 114) / 1000);\n        return contrast >= 128 ? 'black' : 'white';\n    }\n    /**\n     * Animates the data label template.\n     * @return {void}.\n     * @private\n     */\n    doTemplateAnimation(accumulation, element) {\n        let series = accumulation.visibleSeries[0];\n        let delay = series.animation.delay + series.animation.duration;\n        if (series.animation.enable && accumulation.animateSeries) {\n            element.style.visibility = 'hidden';\n            templateAnimate(element, delay, 200, 'ZoomIn');\n        }\n    }\n    /**\n     * To find background color for the datalabel\n     */\n    getLabelBackground(point) {\n        return point.labelPosition === 'Outside' ?\n            this.accumulation.background || this.accumulation.themeStyle.background : point.color;\n    }\n    /**\n     * To correct the padding between datalabel regions.\n     */\n    correctLabelRegion(labelRegion, textSize, padding = 4) {\n        labelRegion.height -= padding;\n        labelRegion.width -= padding;\n        labelRegion.x += padding / 2;\n        labelRegion.y += padding / 2;\n        textSize.height -= padding;\n        textSize.width -= padding;\n    }\n    /**\n     * To get the dataLabel module name\n     */\n    getModuleName() {\n        return 'AccumulationDataLabel';\n    }\n    /**\n     * To destroy the data label.\n     * @return {void}\n     * @private\n     */\n    destroy(accumulation) {\n        /**\n         * Destroy method performed here\n         */\n    }\n}\n\n/**\n * AccumulationChart Tooltip file\n */\n/**\n * `AccumulationTooltip` module is used to render tooltip for accumulation chart.\n */\nclass AccumulationTooltip extends BaseTooltip {\n    constructor(accumulation) {\n        super(accumulation);\n        this.accumulation = accumulation;\n        this.addEventListener();\n    }\n    /**\n     * @hidden\n     */\n    addEventListener() {\n        if (this.accumulation.isDestroyed) {\n            return;\n        }\n        this.accumulation.on(Browser.isPointer ? 'pointerleave' : 'mouseleave', this.mouseLeaveHandler, this);\n        this.accumulation.on(Browser.touchMoveEvent, this.mouseMoveHandler, this);\n        this.accumulation.on(Browser.touchEndEvent, this.mouseUpHandler, this);\n    }\n    mouseLeaveHandler(e) {\n        this.removeTooltip(1000);\n    }\n    mouseUpHandler(e) {\n        let control = this.accumulation;\n        if (control.tooltip.enable && control.isTouch && withInBounds(control.mouseX, control.mouseY, control.initialClipRect)) {\n            this.tooltip(e);\n            this.removeTooltip(2000);\n        }\n    }\n    mouseMoveHandler(e) {\n        let control = this.accumulation;\n        // Tooltip for chart series.    \n        if (control.tooltip.enable && withInBounds(control.mouseX, control.mouseY, control.initialClipRect)) {\n            this.tooltip(e);\n        }\n    }\n    /**\n     * Renders the tooltip.\n     * @param  {PointerEvent} event - Mouse move event.\n     * @return {void}\n     */\n    tooltip(event) {\n        let isTooltip = this.getElement(this.element.id + '_tooltip');\n        let tooltipDiv = this.getTooltipElement(isTooltip);\n        this.renderSeriesTooltip(event, this.accumulation, !isTooltip, tooltipDiv);\n    }\n    renderSeriesTooltip(e, chart, isFirst, tooltipDiv) {\n        let data = this.getPieData(e, chart, chart.mouseX, chart.mouseY);\n        let rect = chart.initialClipRect;\n        this.currentPoints = [];\n        let markerSide;\n        if (data.point && (!this.previousPoints[0] || (this.previousPoints[0].point !== data.point))) {\n            if (this.pushData(data, isFirst, tooltipDiv, false)) {\n                let text = this.getTooltipText(data, chart.tooltip);\n                if (!chart.tooltip.template) {\n                    if (this.header !== '') {\n                        this.findHeader(data);\n                    }\n                    markerSide = this.renderTooltip(data, rect, data.point.symbolLocation, text, isFirst, false);\n                    if (markerSide) {\n                        this.drawMarker(markerSide.isBottom, 10);\n                    }\n                }\n                else {\n                    this.renderTemplate(data, rect, data.point.symbolLocation, this.getTemplateText(data), isFirst);\n                }\n                this.isRemove = true;\n            }\n            this.previousPoints = extend([], this.currentPoints, null, true);\n        }\n        else {\n            if (!data.point && this.isRemove) {\n                this.removeTooltip(1000);\n                this.isRemove = false;\n            }\n        }\n    }\n    drawMarker(isBottom, size) {\n        let count = 0;\n        let shapeOption;\n        let groupElement = this.getElement(this.element.id + '_tooltip_group');\n        let markerGroup = this.chart.renderer.createGroup({ id: this.element.id + '_tooltip_trackball_group' });\n        let x = (this.padding * 2) + (size / 2);\n        let y;\n        let series;\n        for (let data of this.currentPoints) {\n            series = data.series;\n            y = this.markerPoint[count] - this.padding + (isBottom ? this.arrowPadding : 0);\n            shapeOption = new PathOption(this.element.id + '_Tooltip_Trackball_' + series.index, data.point.color, 1, '#cccccc', series.opacity, null);\n            markerGroup.appendChild(drawSymbol(new ChartLocation(x, y), 'Circle', new Size(size, size), null, shapeOption, null));\n            count++;\n        }\n        groupElement.appendChild(markerGroup);\n    }\n    getPieData(e, chart, x, y) {\n        let target = e.target;\n        let id = indexFinder(target.id, true);\n        if (!isNaN(id.series)) {\n            let seriesIndex = id.series;\n            let pointIndex = id.point;\n            if (!isNullOrUndefined(seriesIndex) && !isNaN(seriesIndex) && !isNullOrUndefined(pointIndex) && !isNaN(pointIndex)) {\n                let series = this.getSeriesFromIndex(seriesIndex, chart.visibleSeries);\n                if (series.enableTooltip) {\n                    return new AccPointData(series.points[pointIndex], series);\n                }\n            }\n        }\n        return new AccPointData(null, null);\n    }\n    /**\n     * To get series from index\n     */\n    getSeriesFromIndex(index, visibleSeries) {\n        return visibleSeries[0];\n    }\n    getTemplateText(data) {\n        let point = extend({}, data.point);\n        return point;\n    }\n    getTooltipText(data, tooltip) {\n        let series = data.series;\n        let format = tooltip.format ? tooltip.format : '${point.x} : <b>${point.y}</b>';\n        return this.parseTemplate(data.point, series, format);\n    }\n    findHeader(data) {\n        this.header = this.parseTemplate(data.point, data.series, this.header);\n        if (this.header.replace(/<b>/g, '').replace(/<\\/b>/g, '').trim() !== '') {\n            this.formattedText = this.formattedText.concat(this.header);\n        }\n    }\n    parseTemplate(point, series, format) {\n        let value;\n        let textValue;\n        for (let dataValue of Object.keys(point)) {\n            value = new RegExp('${point' + '.' + dataValue + '}', 'gm');\n            format = format.replace(value.source, point[dataValue]);\n        }\n        for (let dataValue of Object.keys(Object.getPrototypeOf(series))) {\n            value = new RegExp('${series' + '.' + dataValue + '}', 'gm');\n            textValue = series[dataValue];\n            format = format.replace(value.source, textValue);\n        }\n        return format;\n    }\n    /**\n     * Removes the tooltip on mouse leave.\n     * @return {void}\n     * @private\n     */\n    removeTooltip(duration) {\n        let chart = this.control;\n        let tooltipElement = this.getElement(this.element.id + '_tooltip');\n        this.stopAnimation();\n        if (tooltipElement && this.previousPoints.length > 0) {\n            let data = this.previousPoints;\n            this.toolTipInterval = setTimeout(() => {\n                let series = data[0].series;\n                let tooltipGroup = tooltipElement.firstChild;\n                let opacity = parseFloat(tooltipGroup.getAttribute('opacity')) || 1;\n                let element = this.getElement(chart.element.id + '_Series_' + data[0].series.index\n                    + '_Point_' + data[0].point.index);\n                let rectOpacity;\n                if (element) {\n                    rectOpacity = parseFloat(element.getAttribute('opacity'));\n                }\n                new Animation({}).animate(tooltipGroup, {\n                    duration: 200,\n                    progress: (args) => {\n                        this.progressAnimation(element, tooltipGroup, series, opacity, rectOpacity, (args.timeStamp / args.duration), series.isRectSeries, false);\n                    },\n                    end: (model) => {\n                        this.previousPoints = [];\n                        this.endAnimation(element, tooltipGroup, series, false);\n                    }\n                });\n            }, duration);\n        }\n    }\n    /**\n     * Get module name\n     */\n    getModuleName() {\n        return 'AccumulationTooltip';\n    }\n    /**\n     * To destroy the Tooltip.\n     * @return {void}\n     * @private\n     */\n    destroy(chart) {\n        /**\n         * Destroy method calling here\n         */\n    }\n}\n\n/**\n * `AccumulationSelection` module handles the selection for accumulation chart.\n * @private\n */\nclass AccumulationSelection extends BaseSelection {\n    constructor(accumulation) {\n        super(accumulation);\n        this.renderer = accumulation.renderer;\n    }\n    /**\n     * To initialize the private variables\n     */\n    initPrivateVariables(accumulation) {\n        this.styleId = accumulation.element.id + '_ej2_chart_selection';\n        this.unselected = accumulation.element.id + '_ej2_deselected';\n        this.selectedDataIndexes = [];\n        this.rectPoints = null;\n    }\n    /**\n     * Invoke selection for rendered chart.\n     * @param  {AccumulationChart} chart - Define the chart to invoke the selection.\n     * @return {void}\n     */\n    invokeSelection(accumulation) {\n        this.initPrivateVariables(accumulation);\n        this.series = extend({}, accumulation.visibleSeries, null, true);\n        this.seriesStyles();\n        this.selectDataIndex(this.concatIndexes(accumulation.selectedDataIndexes, this.selectedDataIndexes), accumulation);\n    }\n    /**\n     * To get series selection style by series.\n     */\n    generateStyle(series) {\n        return (series.selectionStyle || this.styleId + '_series_' + series.index);\n    }\n    /**\n     * To get elements by index, series\n     */\n    findElements(accumulation, series, index) {\n        return [this.getElementByIndex(index)];\n    }\n    /**\n     * To get series point element by index\n     */\n    getElementByIndex(index) {\n        let elementId = this.control.element.id + '_Series_' + index.series + '_Point_' + index.point;\n        return document.getElementById(elementId);\n    }\n    /**\n     * To calculate selected elements on mouse click or touch\n     * @private\n     */\n    calculateSelectedElements(accumulation, event) {\n        if (event.target.id.indexOf(accumulation.element.id + '_') === -1) {\n            return;\n        }\n        if (event.target.id.indexOf('_Series_') > -1 || event.target.id.indexOf('_datalabel_') > -1) {\n            this.performSelection(indexFinder(event.target.id), accumulation, event.target);\n        }\n    }\n    /**\n     * To perform the selection process based on index and element.\n     */\n    performSelection(index, accumulation, element) {\n        element = element.id.indexOf('datalabel') > -1 ?\n            accumulation.getSeriesElement().childNodes[index.series].childNodes[index.point]\n            : element;\n        switch (accumulation.selectionMode) {\n            case 'Point':\n                if (!isNaN(index.point)) {\n                    this.selection(accumulation, index, [element]);\n                    this.blurEffect(accumulation.element.id, accumulation.visibleSeries);\n                }\n                break;\n        }\n    }\n    /**\n     * To select the element by index. Adding or removing selection style class name.\n     */\n    selection(accumulation, index, selectedElements) {\n        if (!accumulation.isMultiSelect) {\n            this.removeMultiSelectEelments(accumulation, this.selectedDataIndexes, index, accumulation.series);\n        }\n        let className = selectedElements[0] && (selectedElements[0].getAttribute('class') || '');\n        if (selectedElements[0] && className.indexOf(this.getSelectionClass(selectedElements[0].id)) > -1) {\n            this.removeStyles(selectedElements, index);\n            this.addOrRemoveIndex(this.selectedDataIndexes, index);\n        }\n        else {\n            this.applyStyles(selectedElements, index);\n            this.addOrRemoveIndex(this.selectedDataIndexes, index, true);\n        }\n    }\n    /**\n     * To redraw the selection process on accumulation chart refresh.\n     * @private\n     */\n    redrawSelection(accumulation, oldMode) {\n        let selectedDataIndexes = extend([], this.selectedDataIndexes, null, true);\n        this.removeSelectedElements(accumulation, this.selectedDataIndexes);\n        this.blurEffect(accumulation.element.id, accumulation.visibleSeries);\n        this.selectDataIndex(selectedDataIndexes, accumulation);\n    }\n    /**\n     * To remove the selected elements style classes by indexes.\n     */\n    removeSelectedElements(accumulation, indexes) {\n        let seriesgroup = accumulation.getSeriesElement();\n        for (let index of indexes) {\n            this.removeStyles([this.getElementByIndex(index)], index);\n        }\n    }\n    /**\n     * To perform the selection for legend elements.\n     * @private\n     */\n    legendSelection(accumulation, series, pointIndex) {\n        let element = accumulation.getSeriesElement().childNodes[series].childNodes[pointIndex];\n        let seriesStyle = this.generateStyle(accumulation.visibleSeries[series]);\n        let seriesElements = accumulation.getSeriesElement().childNodes[series].childNodes[pointIndex];\n        this.selection(accumulation, new Index(series, pointIndex), [seriesElements]);\n        this.blurEffect(accumulation.element.id, accumulation.visibleSeries);\n    }\n    /**\n     * To select the element by selected data indexes.\n     */\n    selectDataIndex(indexes, accumulation) {\n        let element;\n        for (let index of indexes) {\n            element = this.getElementByIndex(index);\n            if (element) {\n                this.performSelection(index, accumulation, element);\n            }\n        }\n    }\n    /**\n     * To remove the selection styles for multi selection process.\n     */\n    removeMultiSelectEelments(accumulation, index, currentIndex, seriesCollection) {\n        let series;\n        for (let i = 0; i < index.length; i++) {\n            series = seriesCollection[index[i].series];\n            if (!this.checkEquals(index[i], currentIndex)) {\n                this.removeStyles(this.findElements(accumulation, series, index[i]), index[i]);\n                index.splice(i, 1);\n                i--;\n            }\n        }\n    }\n    /**\n     * To apply the opacity effect for accumulation chart series elements.\n     */\n    blurEffect(pieId, visibleSeries) {\n        let visibility = this.checkPointVisibility(this.selectedDataIndexes); // legend click scenario\n        for (let series of visibleSeries) {\n            if (series.visible) {\n                this.checkSelectionElements(document.getElementById(pieId + '_SeriesCollection'), this.generateStyle(series), visibility);\n            }\n        }\n    }\n    /**\n     * To check selection elements by style class name.\n     */\n    checkSelectionElements(element, className, visibility) {\n        let children = (element.childNodes[0].childNodes);\n        let legendShape;\n        let elementClass;\n        let parentClass;\n        for (let i = 0; i < children.length; i++) {\n            elementClass = children[i].getAttribute('class') || '';\n            parentClass = children[i].parentNode.getAttribute('class') || '';\n            if (elementClass.indexOf(className) === -1 && parentClass.indexOf(className) === -1 && visibility) {\n                this.addSvgClass(children[i], this.unselected);\n            }\n            else {\n                this.removeSvgClass(children[i], this.unselected);\n            }\n            if (this.control.accumulationLegendModule && this.control.legendSettings.visible) {\n                legendShape = document.getElementById(this.control.element.id + '_chart_legend_shape_' + i);\n                if (legendShape) {\n                    if (elementClass.indexOf(className) === -1 && parentClass.indexOf(className) === -1 && visibility) {\n                        this.addSvgClass(legendShape, this.unselected);\n                    }\n                    else {\n                        this.removeSvgClass(legendShape, this.unselected);\n                    }\n                }\n            }\n        }\n    }\n    /**\n     * To apply selection style for elements.\n     */\n    applyStyles(elements, index) {\n        for (let element of elements) {\n            let legendShape;\n            if (element) {\n                if (this.control.accumulationLegendModule && this.control.legendSettings.visible) {\n                    legendShape = document.getElementById(this.control.element.id + '_chart_legend_shape_' + index.point);\n                    this.removeSvgClass(legendShape, this.unselected);\n                    this.addSvgClass(legendShape, this.getSelectionClass(legendShape.id));\n                }\n                this.removeSvgClass(element.parentNode, this.unselected);\n                this.removeSvgClass(element, this.unselected);\n                this.addSvgClass(element, this.getSelectionClass(element.id));\n            }\n        }\n    }\n    /**\n     * To get selection style class name by id\n     */\n    getSelectionClass(id) {\n        return this.generateStyle(this.control.series[indexFinder(id).series]);\n    }\n    /**\n     * To remove selection style for elements.\n     */\n    removeStyles(elements, index) {\n        let legendShape;\n        for (let element of elements) {\n            if (element) {\n                if (this.control.accumulationLegendModule && this.control.legendSettings.visible) {\n                    legendShape = document.getElementById(this.control.element.id + '_chart_legend_shape_' + index.point);\n                    this.removeSvgClass(legendShape, this.getSelectionClass(legendShape.id));\n                }\n                this.removeSvgClass(element, this.getSelectionClass(element.id));\n            }\n        }\n    }\n    /**\n     * To apply or remove selected elements index.\n     */\n    addOrRemoveIndex(indexes, index, add) {\n        for (let i = 0; i < indexes.length; i++) {\n            if (this.checkEquals(indexes[i], index)) {\n                indexes.splice(i, 1);\n                i--;\n            }\n        }\n        if (add) {\n            indexes.push(index);\n        }\n    }\n    /**\n     * To check two index, point and series are equal\n     */\n    checkEquals(first, second) {\n        return ((first.point === second.point) && (first.series === second.series));\n    }\n    /**\n     * To check selected points are visibility\n     */\n    checkPointVisibility(selectedDataIndexes) {\n        let visible = false;\n        for (let data of selectedDataIndexes) {\n            if (pointByIndex(data.point, this.control.visibleSeries[0].points).visible) {\n                visible = true;\n                break;\n            }\n        }\n        return visible;\n    }\n    /**\n     * Get module name.\n     */\n    getModuleName() {\n        return 'AccumulationSelection';\n    }\n    /**\n     * To destroy the selection.\n     * @return {void}\n     * @private\n     */\n    destroy(accumulation) {\n        // Destroy method performed here\n    }\n}\n\n/**\n * AccumulationChart annotation properties\n */\n/**\n * `AccumulationAnnotation` module handles the annotation for accumulation chart.\n */\nclass AccumulationAnnotation extends AnnotationBase {\n    /**\n     * Constructor for accumulation chart annotation.\n     * @private.\n     */\n    constructor(control, annotations) {\n        super(control);\n        this.pie = control;\n        this.annotations = annotations;\n    }\n    /**\n     * Method to render the annotation for accumulation chart\n     * @param element\n     */\n    renderAnnotations(element) {\n        this.parentElement = createElement('div', {\n            id: this.pie.element.id + '_Annotation_Collections'\n        });\n        this.annotations.map((annotation, index) => {\n            this.processAnnotation(annotation, index, this.parentElement);\n        });\n        appendElement(this.parentElement, element);\n    }\n    /**\n     * Get module name.\n     */\n    getModuleName() {\n        // Returns te module name\n        return 'Annotation';\n    }\n    /**\n     * To destroy the annotation.\n     * @return {void}\n     * @private\n     */\n    destroy(control) {\n        // Destroy method performed here\n    }\n}\n\n/**\n * Pie Component items exported\n */\n\n/**\n * Chart and accumulation common files\n */\n\n/**\n * Chart components exported.\n */\n\nexport { CrosshairSettings, ZoomSettings, Chart, Row, Column, MajorGridLines, MinorGridLines, AxisLine, MajorTickLines, MinorTickLines, CrosshairTooltip, Axis, VisibleLabels, DateTime, Category, Logarithmic, DateTimeCategory, NiceInterval, StripLine, Connector, Font, Border, ChartArea, Margin, Animation$1 as Animation, Indexes, CornerRadius, Index, EmptyPointSettings, TooltipSettings, LineSeries, ColumnSeries, AreaSeries, BarSeries, PolarSeries, RadarSeries, StackingBarSeries, CandleSeries, StackingColumnSeries, StepLineSeries, StepAreaSeries, StackingAreaSeries, ScatterSeries, RangeColumnSeries, WaterfallSeries, HiloSeries, HiloOpenCloseSeries, RangeAreaSeries, BubbleSeries, SplineSeries, SplineAreaSeries, TechnicalIndicator, SmaIndicator, EmaIndicator, TmaIndicator, AccumulationDistributionIndicator, AtrIndicator, MomentumIndicator, RsiIndicator, StochasticIndicator, BollingerBands, MacdIndicator, Trendlines, measureText, sort, rotateTextSize, removeElement, logBase, showTooltip, inside, withIn, withInRange, sum, subArraySum, subtractThickness, subtractRect, degreeToLocation, getAngle, subArray, valueToCoefficient, TransformToVisible, indexFinder, CoefficientToVector, valueToPolarCoefficient, Mean, PolarArc, createTooltip, createZoomingLabels, withInBounds, getValueXByPoint, getValueYByPoint, findClipRect, firstToLowerCase, getMinPointsDelta, getAnimationFunction, linear, markerAnimate, templateAnimate, drawSymbol, calculateShapes, getRectLocation, minMax, getElement, getTemplateFunction, createTemplate, getFontStyle, measureElementRect, findlElement, getPoint, appendElement, getDraggedRectLocation, checkBounds, getLabelText, stopTimer, isCollide, isOverlap, containsRect, calculateRect, convertToHexCode, componentToHex, convertHexToColor, colorNameToHex, getSaturationColor, getMedian, calculateLegendShapes, textTrim, stringToNumber, findDirection, textElement, calculateSize, createSvg, getTitle, titlePositionX, textWrap, CustomizeOption, StackValues, TextOption, PathOption, RectOption, CircleOption, PolygonOption, Size, Rect, ChartLocation, Thickness, ColorValue, PointData, AccPointData, ControlPoints, Crosshair, Tooltip, Zoom, Selection, DataLabel, ErrorBar, DataLabelSettings, MarkerSettings, Points, Trendline, ErrorBarCapSettings, ChartSegment, ErrorBarSettings, SeriesBase, Series, Legend, ChartAnnotation, ChartAnnotationSettings, LabelBorder, MultiLevelCategories, StripLineSettings, MultiLevelLabels, BoxAndWhiskerSeries, MultiColoredAreaSeries, MultiColoredLineSeries, MultiColoredSeries, MultiLevelLabel, AccumulationChart, AccumulationAnnotationSettings, AccumulationDataLabelSettings, AccPoints, AccumulationSeries, getSeriesFromIndex, pointByIndex, PieSeries, FunnelSeries, PyramidSeries, AccumulationLegend, AccumulationDataLabel, AccumulationTooltip, AccumulationSelection, AccumulationAnnotation, loaded, load, animationComplete, legendRender, textRender, pointRender, seriesRender, axisLabelRender, axisRangeCalculated, axisMultiLabelRender, tooltipRender, chartMouseMove, chartMouseClick, pointClick, pointMove, chartMouseLeave, chartMouseDown, chartMouseUp, zoomComplete, dragComplete, resized, beforePrint, annotationRender, Theme, getSeriesColor, getThemeColor };\n//# sourceMappingURL=ej2-charts.es2015.js.map\n"]}